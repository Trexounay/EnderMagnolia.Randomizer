#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_InventoryEntry

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_InventoryEntry.WBP_InventoryEntry_C.ExecuteUbergraph_WBP_InventoryEntry
// 0x0014 (0x0014 - 0x0000)
struct WBP_InventoryEntry_C_ExecuteUbergraph_WBP_InventoryEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFocusEvent                            K2Node_Event_InFocusEvent_1;                       // 0x0004(0x0008)(NoDestructor)
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x000C(0x0008)(NoDestructor)
};
static_assert(alignof(WBP_InventoryEntry_C_ExecuteUbergraph_WBP_InventoryEntry) == 0x000004, "Wrong alignment on WBP_InventoryEntry_C_ExecuteUbergraph_WBP_InventoryEntry");
static_assert(sizeof(WBP_InventoryEntry_C_ExecuteUbergraph_WBP_InventoryEntry) == 0x000014, "Wrong size on WBP_InventoryEntry_C_ExecuteUbergraph_WBP_InventoryEntry");
static_assert(offsetof(WBP_InventoryEntry_C_ExecuteUbergraph_WBP_InventoryEntry, EntryPoint) == 0x000000, "Member 'WBP_InventoryEntry_C_ExecuteUbergraph_WBP_InventoryEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEntry_C_ExecuteUbergraph_WBP_InventoryEntry, K2Node_Event_InFocusEvent_1) == 0x000004, "Member 'WBP_InventoryEntry_C_ExecuteUbergraph_WBP_InventoryEntry::K2Node_Event_InFocusEvent_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEntry_C_ExecuteUbergraph_WBP_InventoryEntry, K2Node_Event_InFocusEvent) == 0x00000C, "Member 'WBP_InventoryEntry_C_ExecuteUbergraph_WBP_InventoryEntry::K2Node_Event_InFocusEvent' has a wrong offset!");

// Function WBP_InventoryEntry.WBP_InventoryEntry_C.OnAddedToFocusPath
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventoryEntry_C_OnAddedToFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(WBP_InventoryEntry_C_OnAddedToFocusPath) == 0x000004, "Wrong alignment on WBP_InventoryEntry_C_OnAddedToFocusPath");
static_assert(sizeof(WBP_InventoryEntry_C_OnAddedToFocusPath) == 0x000008, "Wrong size on WBP_InventoryEntry_C_OnAddedToFocusPath");
static_assert(offsetof(WBP_InventoryEntry_C_OnAddedToFocusPath, InFocusEvent) == 0x000000, "Member 'WBP_InventoryEntry_C_OnAddedToFocusPath::InFocusEvent' has a wrong offset!");

// Function WBP_InventoryEntry.WBP_InventoryEntry_C.OnRemovedFromFocusPath
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventoryEntry_C_OnRemovedFromFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(WBP_InventoryEntry_C_OnRemovedFromFocusPath) == 0x000004, "Wrong alignment on WBP_InventoryEntry_C_OnRemovedFromFocusPath");
static_assert(sizeof(WBP_InventoryEntry_C_OnRemovedFromFocusPath) == 0x000008, "Wrong size on WBP_InventoryEntry_C_OnRemovedFromFocusPath");
static_assert(offsetof(WBP_InventoryEntry_C_OnRemovedFromFocusPath, InFocusEvent) == 0x000000, "Member 'WBP_InventoryEntry_C_OnRemovedFromFocusPath::InFocusEvent' has a wrong offset!");

// Function WBP_InventoryEntry.WBP_InventoryEntry_C.SetFocusedState
// 0x0001 (0x0001 - 0x0000)
struct WBP_InventoryEntry_C_SetFocusedState final
{
public:
	bool                                          Focus;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEntry_C_SetFocusedState) == 0x000001, "Wrong alignment on WBP_InventoryEntry_C_SetFocusedState");
static_assert(sizeof(WBP_InventoryEntry_C_SetFocusedState) == 0x000001, "Wrong size on WBP_InventoryEntry_C_SetFocusedState");
static_assert(offsetof(WBP_InventoryEntry_C_SetFocusedState, Focus) == 0x000000, "Member 'WBP_InventoryEntry_C_SetFocusedState::Focus' has a wrong offset!");

// Function WBP_InventoryEntry.WBP_InventoryEntry_C.Setup
// 0x0030 (0x0030 - 0x0000)
struct WBP_InventoryEntry_C_Setup final
{
public:
	struct FDataTableRowHandle                    ItemHandle_0;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	int32                                         Count;                                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   FallbackText;                                      // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          bNew;                                              // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEntry_C_Setup) == 0x000008, "Wrong alignment on WBP_InventoryEntry_C_Setup");
static_assert(sizeof(WBP_InventoryEntry_C_Setup) == 0x000030, "Wrong size on WBP_InventoryEntry_C_Setup");
static_assert(offsetof(WBP_InventoryEntry_C_Setup, ItemHandle_0) == 0x000000, "Member 'WBP_InventoryEntry_C_Setup::ItemHandle_0' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEntry_C_Setup, Count) == 0x000010, "Member 'WBP_InventoryEntry_C_Setup::Count' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEntry_C_Setup, FallbackText) == 0x000018, "Member 'WBP_InventoryEntry_C_Setup::FallbackText' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEntry_C_Setup, bNew) == 0x000028, "Member 'WBP_InventoryEntry_C_Setup::bNew' has a wrong offset!");

}

