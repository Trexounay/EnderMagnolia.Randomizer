#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PassiveEntry

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Zion_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_PassiveEntry.WBP_PassiveEntry_C.BndEvt__WBP_PassiveEntry_WBP_Button_Item_K2Node_ComponentBoundEvent_2_OnPressed__DelegateSignature
// 0x0048 (0x0048 - 0x0000)
struct WBP_PassiveEntry_C_BndEvt__WBP_PassiveEntry_WBP_Button_Item_K2Node_ComponentBoundEvent_2_OnPressed__DelegateSignature final
{
public:
	struct FKeyEvent                              KeyEvent;                                          // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UWBP_Button_Item_C*                     Item;                                              // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PassiveEntry_C_BndEvt__WBP_PassiveEntry_WBP_Button_Item_K2Node_ComponentBoundEvent_2_OnPressed__DelegateSignature) == 0x000008, "Wrong alignment on WBP_PassiveEntry_C_BndEvt__WBP_PassiveEntry_WBP_Button_Item_K2Node_ComponentBoundEvent_2_OnPressed__DelegateSignature");
static_assert(sizeof(WBP_PassiveEntry_C_BndEvt__WBP_PassiveEntry_WBP_Button_Item_K2Node_ComponentBoundEvent_2_OnPressed__DelegateSignature) == 0x000048, "Wrong size on WBP_PassiveEntry_C_BndEvt__WBP_PassiveEntry_WBP_Button_Item_K2Node_ComponentBoundEvent_2_OnPressed__DelegateSignature");
static_assert(offsetof(WBP_PassiveEntry_C_BndEvt__WBP_PassiveEntry_WBP_Button_Item_K2Node_ComponentBoundEvent_2_OnPressed__DelegateSignature, KeyEvent) == 0x000000, "Member 'WBP_PassiveEntry_C_BndEvt__WBP_PassiveEntry_WBP_Button_Item_K2Node_ComponentBoundEvent_2_OnPressed__DelegateSignature::KeyEvent' has a wrong offset!");
static_assert(offsetof(WBP_PassiveEntry_C_BndEvt__WBP_PassiveEntry_WBP_Button_Item_K2Node_ComponentBoundEvent_2_OnPressed__DelegateSignature, Item) == 0x000040, "Member 'WBP_PassiveEntry_C_BndEvt__WBP_PassiveEntry_WBP_Button_Item_K2Node_ComponentBoundEvent_2_OnPressed__DelegateSignature::Item' has a wrong offset!");

// Function WBP_PassiveEntry.WBP_PassiveEntry_C.BndEvt__WBP_PassiveEntry_WBP_Button_Item_K2Node_ComponentBoundEvent_3_OnFocused__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_PassiveEntry_C_BndEvt__WBP_PassiveEntry_WBP_Button_Item_K2Node_ComponentBoundEvent_3_OnFocused__DelegateSignature final
{
public:
	class UWBP_Button_Item_C*                     Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PassiveEntry_C_BndEvt__WBP_PassiveEntry_WBP_Button_Item_K2Node_ComponentBoundEvent_3_OnFocused__DelegateSignature) == 0x000008, "Wrong alignment on WBP_PassiveEntry_C_BndEvt__WBP_PassiveEntry_WBP_Button_Item_K2Node_ComponentBoundEvent_3_OnFocused__DelegateSignature");
static_assert(sizeof(WBP_PassiveEntry_C_BndEvt__WBP_PassiveEntry_WBP_Button_Item_K2Node_ComponentBoundEvent_3_OnFocused__DelegateSignature) == 0x000008, "Wrong size on WBP_PassiveEntry_C_BndEvt__WBP_PassiveEntry_WBP_Button_Item_K2Node_ComponentBoundEvent_3_OnFocused__DelegateSignature");
static_assert(offsetof(WBP_PassiveEntry_C_BndEvt__WBP_PassiveEntry_WBP_Button_Item_K2Node_ComponentBoundEvent_3_OnFocused__DelegateSignature, Item) == 0x000000, "Member 'WBP_PassiveEntry_C_BndEvt__WBP_PassiveEntry_WBP_Button_Item_K2Node_ComponentBoundEvent_3_OnFocused__DelegateSignature::Item' has a wrong offset!");

// Function WBP_PassiveEntry.WBP_PassiveEntry_C.ExecuteUbergraph_WBP_PassiveEntry
// 0x0060 (0x0060 - 0x0000)
struct WBP_PassiveEntry_C_ExecuteUbergraph_WBP_PassiveEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKeyEvent                              K2Node_ComponentBoundEvent_KeyEvent;               // 0x0008(0x0040)()
	class UWBP_Button_Item_C*                     K2Node_ComponentBoundEvent_Item_1;                 // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_Button_Item_C*                     K2Node_ComponentBoundEvent_Item;                   // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PassiveEntry_C_ExecuteUbergraph_WBP_PassiveEntry) == 0x000008, "Wrong alignment on WBP_PassiveEntry_C_ExecuteUbergraph_WBP_PassiveEntry");
static_assert(sizeof(WBP_PassiveEntry_C_ExecuteUbergraph_WBP_PassiveEntry) == 0x000060, "Wrong size on WBP_PassiveEntry_C_ExecuteUbergraph_WBP_PassiveEntry");
static_assert(offsetof(WBP_PassiveEntry_C_ExecuteUbergraph_WBP_PassiveEntry, EntryPoint) == 0x000000, "Member 'WBP_PassiveEntry_C_ExecuteUbergraph_WBP_PassiveEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_PassiveEntry_C_ExecuteUbergraph_WBP_PassiveEntry, K2Node_ComponentBoundEvent_KeyEvent) == 0x000008, "Member 'WBP_PassiveEntry_C_ExecuteUbergraph_WBP_PassiveEntry::K2Node_ComponentBoundEvent_KeyEvent' has a wrong offset!");
static_assert(offsetof(WBP_PassiveEntry_C_ExecuteUbergraph_WBP_PassiveEntry, K2Node_ComponentBoundEvent_Item_1) == 0x000048, "Member 'WBP_PassiveEntry_C_ExecuteUbergraph_WBP_PassiveEntry::K2Node_ComponentBoundEvent_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_PassiveEntry_C_ExecuteUbergraph_WBP_PassiveEntry, K2Node_ComponentBoundEvent_Item) == 0x000050, "Member 'WBP_PassiveEntry_C_ExecuteUbergraph_WBP_PassiveEntry::K2Node_ComponentBoundEvent_Item' has a wrong offset!");
static_assert(offsetof(WBP_PassiveEntry_C_ExecuteUbergraph_WBP_PassiveEntry, K2Node_Event_IsDesignTime) == 0x000058, "Member 'WBP_PassiveEntry_C_ExecuteUbergraph_WBP_PassiveEntry::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_PassiveEntry.WBP_PassiveEntry_C.OnFocusReceived
// 0x01B0 (0x01B0 - 0x0000)
struct WBP_PassiveEntry_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x00F8(0x00B8)()
};
static_assert(alignof(WBP_PassiveEntry_C_OnFocusReceived) == 0x000008, "Wrong alignment on WBP_PassiveEntry_C_OnFocusReceived");
static_assert(sizeof(WBP_PassiveEntry_C_OnFocusReceived) == 0x0001B0, "Wrong size on WBP_PassiveEntry_C_OnFocusReceived");
static_assert(offsetof(WBP_PassiveEntry_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'WBP_PassiveEntry_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_PassiveEntry_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'WBP_PassiveEntry_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(WBP_PassiveEntry_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'WBP_PassiveEntry_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveEntry_C_OnFocusReceived, CallFunc_Handled_ReturnValue) == 0x0000F8, "Member 'WBP_PassiveEntry_C_OnFocusReceived::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function WBP_PassiveEntry.WBP_PassiveEntry_C.OnPressContext
// 0x01B0 (0x01B0 - 0x0000)
struct WBP_PassiveEntry_C_OnPressContext final
{
public:
	struct FKeyEvent                              KeyEvent;                                          // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x00F8(0x00B8)()
};
static_assert(alignof(WBP_PassiveEntry_C_OnPressContext) == 0x000008, "Wrong alignment on WBP_PassiveEntry_C_OnPressContext");
static_assert(sizeof(WBP_PassiveEntry_C_OnPressContext) == 0x0001B0, "Wrong size on WBP_PassiveEntry_C_OnPressContext");
static_assert(offsetof(WBP_PassiveEntry_C_OnPressContext, KeyEvent) == 0x000000, "Member 'WBP_PassiveEntry_C_OnPressContext::KeyEvent' has a wrong offset!");
static_assert(offsetof(WBP_PassiveEntry_C_OnPressContext, ReturnValue) == 0x000040, "Member 'WBP_PassiveEntry_C_OnPressContext::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveEntry_C_OnPressContext, CallFunc_Handled_ReturnValue) == 0x0000F8, "Member 'WBP_PassiveEntry_C_OnPressContext::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function WBP_PassiveEntry.WBP_PassiveEntry_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_PassiveEntry_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PassiveEntry_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_PassiveEntry_C_PreConstruct");
static_assert(sizeof(WBP_PassiveEntry_C_PreConstruct) == 0x000001, "Wrong size on WBP_PassiveEntry_C_PreConstruct");
static_assert(offsetof(WBP_PassiveEntry_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_PassiveEntry_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_PassiveEntry.WBP_PassiveEntry_C.SetColor
// 0x0024 (0x0024 - 0x0000)
struct WBP_PassiveEntry_C_SetColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0010(0x0014)()
};
static_assert(alignof(WBP_PassiveEntry_C_SetColor) == 0x000004, "Wrong alignment on WBP_PassiveEntry_C_SetColor");
static_assert(sizeof(WBP_PassiveEntry_C_SetColor) == 0x000024, "Wrong size on WBP_PassiveEntry_C_SetColor");
static_assert(offsetof(WBP_PassiveEntry_C_SetColor, Color) == 0x000000, "Member 'WBP_PassiveEntry_C_SetColor::Color' has a wrong offset!");
static_assert(offsetof(WBP_PassiveEntry_C_SetColor, K2Node_MakeStruct_SlateColor) == 0x000010, "Member 'WBP_PassiveEntry_C_SetColor::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function WBP_PassiveEntry.WBP_PassiveEntry_C.SetEquippedVisiblity
// 0x0005 (0x0005 - 0x0000)
struct WBP_PassiveEntry_C_SetEquippedVisiblity final
{
public:
	bool                                          IsEquipped_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PassiveEntry_C_SetEquippedVisiblity) == 0x000001, "Wrong alignment on WBP_PassiveEntry_C_SetEquippedVisiblity");
static_assert(sizeof(WBP_PassiveEntry_C_SetEquippedVisiblity) == 0x000005, "Wrong size on WBP_PassiveEntry_C_SetEquippedVisiblity");
static_assert(offsetof(WBP_PassiveEntry_C_SetEquippedVisiblity, IsEquipped_0) == 0x000000, "Member 'WBP_PassiveEntry_C_SetEquippedVisiblity::IsEquipped_0' has a wrong offset!");
static_assert(offsetof(WBP_PassiveEntry_C_SetEquippedVisiblity, Temp_bool_Variable) == 0x000001, "Member 'WBP_PassiveEntry_C_SetEquippedVisiblity::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PassiveEntry_C_SetEquippedVisiblity, Temp_byte_Variable) == 0x000002, "Member 'WBP_PassiveEntry_C_SetEquippedVisiblity::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PassiveEntry_C_SetEquippedVisiblity, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_PassiveEntry_C_SetEquippedVisiblity::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_PassiveEntry_C_SetEquippedVisiblity, K2Node_Select_Default) == 0x000004, "Member 'WBP_PassiveEntry_C_SetEquippedVisiblity::K2Node_Select_Default' has a wrong offset!");

// Function WBP_PassiveEntry.WBP_PassiveEntry_C.Setup
// 0x02A0 (0x02A0 - 0x0000)
struct WBP_PassiveEntry_C_Setup final
{
public:
	struct FDataTableRowHandle                    DataHandle_0;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInventoryItemPassiveData              CallFunc_GetItemPassiveData_out_ItemData;          // 0x0018(0x0268)()
	bool                                          CallFunc_GetItemPassiveData_ReturnValue;           // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_282[0x6];                                      // 0x0282(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0288(0x0010)()
	bool                                          Temp_bool_Variable;                                // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PassiveEntry_C_Setup) == 0x000008, "Wrong alignment on WBP_PassiveEntry_C_Setup");
static_assert(sizeof(WBP_PassiveEntry_C_Setup) == 0x0002A0, "Wrong size on WBP_PassiveEntry_C_Setup");
static_assert(offsetof(WBP_PassiveEntry_C_Setup, DataHandle_0) == 0x000000, "Member 'WBP_PassiveEntry_C_Setup::DataHandle_0' has a wrong offset!");
static_assert(offsetof(WBP_PassiveEntry_C_Setup, Temp_byte_Variable) == 0x000010, "Member 'WBP_PassiveEntry_C_Setup::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PassiveEntry_C_Setup, Temp_byte_Variable_1) == 0x000011, "Member 'WBP_PassiveEntry_C_Setup::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_PassiveEntry_C_Setup, CallFunc_GetItemPassiveData_out_ItemData) == 0x000018, "Member 'WBP_PassiveEntry_C_Setup::CallFunc_GetItemPassiveData_out_ItemData' has a wrong offset!");
static_assert(offsetof(WBP_PassiveEntry_C_Setup, CallFunc_GetItemPassiveData_ReturnValue) == 0x000280, "Member 'WBP_PassiveEntry_C_Setup::CallFunc_GetItemPassiveData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveEntry_C_Setup, CallFunc_IsValid_ReturnValue) == 0x000281, "Member 'WBP_PassiveEntry_C_Setup::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveEntry_C_Setup, CallFunc_Conv_IntToText_ReturnValue) == 0x000288, "Member 'WBP_PassiveEntry_C_Setup::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveEntry_C_Setup, Temp_bool_Variable) == 0x000298, "Member 'WBP_PassiveEntry_C_Setup::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PassiveEntry_C_Setup, K2Node_Select_Default) == 0x000299, "Member 'WBP_PassiveEntry_C_Setup::K2Node_Select_Default' has a wrong offset!");

}

