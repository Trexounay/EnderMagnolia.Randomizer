#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Item_EquipmentData_Stat

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_Item_EquipmentData_Stat.WBP_Item_EquipmentData_Stat_C.ExecuteUbergraph_WBP_Item_EquipmentData_Stat
// 0x0008 (0x0008 - 0x0000)
struct WBP_Item_EquipmentData_Stat_C_ExecuteUbergraph_WBP_Item_EquipmentData_Stat final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Item_EquipmentData_Stat_C_ExecuteUbergraph_WBP_Item_EquipmentData_Stat) == 0x000004, "Wrong alignment on WBP_Item_EquipmentData_Stat_C_ExecuteUbergraph_WBP_Item_EquipmentData_Stat");
static_assert(sizeof(WBP_Item_EquipmentData_Stat_C_ExecuteUbergraph_WBP_Item_EquipmentData_Stat) == 0x000008, "Wrong size on WBP_Item_EquipmentData_Stat_C_ExecuteUbergraph_WBP_Item_EquipmentData_Stat");
static_assert(offsetof(WBP_Item_EquipmentData_Stat_C_ExecuteUbergraph_WBP_Item_EquipmentData_Stat, EntryPoint) == 0x000000, "Member 'WBP_Item_EquipmentData_Stat_C_ExecuteUbergraph_WBP_Item_EquipmentData_Stat::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Item_EquipmentData_Stat_C_ExecuteUbergraph_WBP_Item_EquipmentData_Stat, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_Item_EquipmentData_Stat_C_ExecuteUbergraph_WBP_Item_EquipmentData_Stat::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_Item_EquipmentData_Stat.WBP_Item_EquipmentData_Stat_C.GetGaugeColor
// 0x003C (0x003C - 0x0000)
struct WBP_Item_EquipmentData_Stat_C_GetGaugeColor final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ComparatorValue;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Item_EquipmentData_Stat_C_GetGaugeColor) == 0x000004, "Wrong alignment on WBP_Item_EquipmentData_Stat_C_GetGaugeColor");
static_assert(sizeof(WBP_Item_EquipmentData_Stat_C_GetGaugeColor) == 0x00003C, "Wrong size on WBP_Item_EquipmentData_Stat_C_GetGaugeColor");
static_assert(offsetof(WBP_Item_EquipmentData_Stat_C_GetGaugeColor, Value) == 0x000000, "Member 'WBP_Item_EquipmentData_Stat_C_GetGaugeColor::Value' has a wrong offset!");
static_assert(offsetof(WBP_Item_EquipmentData_Stat_C_GetGaugeColor, ComparatorValue) == 0x000004, "Member 'WBP_Item_EquipmentData_Stat_C_GetGaugeColor::ComparatorValue' has a wrong offset!");
static_assert(offsetof(WBP_Item_EquipmentData_Stat_C_GetGaugeColor, ReturnValue) == 0x000008, "Member 'WBP_Item_EquipmentData_Stat_C_GetGaugeColor::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Item_EquipmentData_Stat_C_GetGaugeColor, CallFunc_Greater_IntInt_ReturnValue) == 0x000018, "Member 'WBP_Item_EquipmentData_Stat_C_GetGaugeColor::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Item_EquipmentData_Stat_C_GetGaugeColor, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000019, "Member 'WBP_Item_EquipmentData_Stat_C_GetGaugeColor::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Item_EquipmentData_Stat_C_GetGaugeColor, CallFunc_SelectColor_ReturnValue) == 0x00001C, "Member 'WBP_Item_EquipmentData_Stat_C_GetGaugeColor::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Item_EquipmentData_Stat_C_GetGaugeColor, CallFunc_SelectColor_ReturnValue_1) == 0x00002C, "Member 'WBP_Item_EquipmentData_Stat_C_GetGaugeColor::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");

// Function WBP_Item_EquipmentData_Stat.WBP_Item_EquipmentData_Stat_C.GetTextColor
// 0x0088 (0x0088 - 0x0000)
struct WBP_Item_EquipmentData_Stat_C_GetTextColor final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ComparatorValue;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            ReturnValue;                                       // 0x0008(0x0014)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F[0x1];                                       // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0020(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0034(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x0048(0x0014)()
	bool                                          Temp_bool_Variable_1;                              // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_Select_Default;                             // 0x0060(0x0014)()
	struct FSlateColor                            K2Node_Select_Default_1;                           // 0x0074(0x0014)()
};
static_assert(alignof(WBP_Item_EquipmentData_Stat_C_GetTextColor) == 0x000004, "Wrong alignment on WBP_Item_EquipmentData_Stat_C_GetTextColor");
static_assert(sizeof(WBP_Item_EquipmentData_Stat_C_GetTextColor) == 0x000088, "Wrong size on WBP_Item_EquipmentData_Stat_C_GetTextColor");
static_assert(offsetof(WBP_Item_EquipmentData_Stat_C_GetTextColor, Value) == 0x000000, "Member 'WBP_Item_EquipmentData_Stat_C_GetTextColor::Value' has a wrong offset!");
static_assert(offsetof(WBP_Item_EquipmentData_Stat_C_GetTextColor, ComparatorValue) == 0x000004, "Member 'WBP_Item_EquipmentData_Stat_C_GetTextColor::ComparatorValue' has a wrong offset!");
static_assert(offsetof(WBP_Item_EquipmentData_Stat_C_GetTextColor, ReturnValue) == 0x000008, "Member 'WBP_Item_EquipmentData_Stat_C_GetTextColor::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Item_EquipmentData_Stat_C_GetTextColor, Temp_bool_Variable) == 0x00001C, "Member 'WBP_Item_EquipmentData_Stat_C_GetTextColor::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Item_EquipmentData_Stat_C_GetTextColor, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001D, "Member 'WBP_Item_EquipmentData_Stat_C_GetTextColor::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Item_EquipmentData_Stat_C_GetTextColor, CallFunc_Greater_IntInt_ReturnValue) == 0x00001E, "Member 'WBP_Item_EquipmentData_Stat_C_GetTextColor::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Item_EquipmentData_Stat_C_GetTextColor, K2Node_MakeStruct_SlateColor) == 0x000020, "Member 'WBP_Item_EquipmentData_Stat_C_GetTextColor::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_Item_EquipmentData_Stat_C_GetTextColor, K2Node_MakeStruct_SlateColor_1) == 0x000034, "Member 'WBP_Item_EquipmentData_Stat_C_GetTextColor::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(WBP_Item_EquipmentData_Stat_C_GetTextColor, K2Node_MakeStruct_SlateColor_2) == 0x000048, "Member 'WBP_Item_EquipmentData_Stat_C_GetTextColor::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(WBP_Item_EquipmentData_Stat_C_GetTextColor, Temp_bool_Variable_1) == 0x00005C, "Member 'WBP_Item_EquipmentData_Stat_C_GetTextColor::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Item_EquipmentData_Stat_C_GetTextColor, K2Node_Select_Default) == 0x000060, "Member 'WBP_Item_EquipmentData_Stat_C_GetTextColor::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Item_EquipmentData_Stat_C_GetTextColor, K2Node_Select_Default_1) == 0x000074, "Member 'WBP_Item_EquipmentData_Stat_C_GetTextColor::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_Item_EquipmentData_Stat.WBP_Item_EquipmentData_Stat_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_Item_EquipmentData_Stat_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Item_EquipmentData_Stat_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_Item_EquipmentData_Stat_C_PreConstruct");
static_assert(sizeof(WBP_Item_EquipmentData_Stat_C_PreConstruct) == 0x000001, "Wrong size on WBP_Item_EquipmentData_Stat_C_PreConstruct");
static_assert(offsetof(WBP_Item_EquipmentData_Stat_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_Item_EquipmentData_Stat_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_Item_EquipmentData_Stat.WBP_Item_EquipmentData_Stat_C.Setup
// 0x0058 (0x0058 - 0x0000)
struct WBP_Item_EquipmentData_Stat_C_Setup final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ComparatorValue;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxValue;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            TextColor;                                         // 0x000C(0x0014)(Edit, BlueprintVisible)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            CallFunc_GetTextColor_ReturnValue;                 // 0x0024(0x0014)()
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Abs_Int_ReturnValue;                      // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0040(0x0010)()
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Item_EquipmentData_Stat_C_Setup) == 0x000008, "Wrong alignment on WBP_Item_EquipmentData_Stat_C_Setup");
static_assert(sizeof(WBP_Item_EquipmentData_Stat_C_Setup) == 0x000058, "Wrong size on WBP_Item_EquipmentData_Stat_C_Setup");
static_assert(offsetof(WBP_Item_EquipmentData_Stat_C_Setup, Value) == 0x000000, "Member 'WBP_Item_EquipmentData_Stat_C_Setup::Value' has a wrong offset!");
static_assert(offsetof(WBP_Item_EquipmentData_Stat_C_Setup, ComparatorValue) == 0x000004, "Member 'WBP_Item_EquipmentData_Stat_C_Setup::ComparatorValue' has a wrong offset!");
static_assert(offsetof(WBP_Item_EquipmentData_Stat_C_Setup, MaxValue) == 0x000008, "Member 'WBP_Item_EquipmentData_Stat_C_Setup::MaxValue' has a wrong offset!");
static_assert(offsetof(WBP_Item_EquipmentData_Stat_C_Setup, TextColor) == 0x00000C, "Member 'WBP_Item_EquipmentData_Stat_C_Setup::TextColor' has a wrong offset!");
static_assert(offsetof(WBP_Item_EquipmentData_Stat_C_Setup, Temp_byte_Variable) == 0x000020, "Member 'WBP_Item_EquipmentData_Stat_C_Setup::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Item_EquipmentData_Stat_C_Setup, CallFunc_GetTextColor_ReturnValue) == 0x000024, "Member 'WBP_Item_EquipmentData_Stat_C_Setup::CallFunc_GetTextColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Item_EquipmentData_Stat_C_Setup, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000038, "Member 'WBP_Item_EquipmentData_Stat_C_Setup::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Item_EquipmentData_Stat_C_Setup, CallFunc_Abs_Int_ReturnValue) == 0x00003C, "Member 'WBP_Item_EquipmentData_Stat_C_Setup::CallFunc_Abs_Int_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Item_EquipmentData_Stat_C_Setup, CallFunc_Conv_IntToText_ReturnValue) == 0x000040, "Member 'WBP_Item_EquipmentData_Stat_C_Setup::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Item_EquipmentData_Stat_C_Setup, Temp_byte_Variable_1) == 0x000050, "Member 'WBP_Item_EquipmentData_Stat_C_Setup::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Item_EquipmentData_Stat_C_Setup, Temp_bool_Variable) == 0x000051, "Member 'WBP_Item_EquipmentData_Stat_C_Setup::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Item_EquipmentData_Stat_C_Setup, K2Node_Select_Default) == 0x000052, "Member 'WBP_Item_EquipmentData_Stat_C_Setup::K2Node_Select_Default' has a wrong offset!");

// Function WBP_Item_EquipmentData_Stat.WBP_Item_EquipmentData_Stat_C.SetupGauge
// 0x0060 (0x0060 - 0x0000)
struct WBP_Item_EquipmentData_Stat_C_SetupGauge final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ComparatorValue;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxValue;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGaugeColor_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast_1;      // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Item_EquipmentData_Stat_C_SetupGauge) == 0x000008, "Wrong alignment on WBP_Item_EquipmentData_Stat_C_SetupGauge");
static_assert(sizeof(WBP_Item_EquipmentData_Stat_C_SetupGauge) == 0x000060, "Wrong size on WBP_Item_EquipmentData_Stat_C_SetupGauge");
static_assert(offsetof(WBP_Item_EquipmentData_Stat_C_SetupGauge, Value) == 0x000000, "Member 'WBP_Item_EquipmentData_Stat_C_SetupGauge::Value' has a wrong offset!");
static_assert(offsetof(WBP_Item_EquipmentData_Stat_C_SetupGauge, ComparatorValue) == 0x000004, "Member 'WBP_Item_EquipmentData_Stat_C_SetupGauge::ComparatorValue' has a wrong offset!");
static_assert(offsetof(WBP_Item_EquipmentData_Stat_C_SetupGauge, MaxValue) == 0x000008, "Member 'WBP_Item_EquipmentData_Stat_C_SetupGauge::MaxValue' has a wrong offset!");
static_assert(offsetof(WBP_Item_EquipmentData_Stat_C_SetupGauge, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000010, "Member 'WBP_Item_EquipmentData_Stat_C_SetupGauge::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Item_EquipmentData_Stat_C_SetupGauge, CallFunc_GetGaugeColor_ReturnValue) == 0x000018, "Member 'WBP_Item_EquipmentData_Stat_C_SetupGauge::CallFunc_GetGaugeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Item_EquipmentData_Stat_C_SetupGauge, CallFunc_Min_ReturnValue) == 0x000028, "Member 'WBP_Item_EquipmentData_Stat_C_SetupGauge::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Item_EquipmentData_Stat_C_SetupGauge, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000030, "Member 'WBP_Item_EquipmentData_Stat_C_SetupGauge::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Item_EquipmentData_Stat_C_SetupGauge, CallFunc_Max_ReturnValue) == 0x000038, "Member 'WBP_Item_EquipmentData_Stat_C_SetupGauge::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Item_EquipmentData_Stat_C_SetupGauge, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000040, "Member 'WBP_Item_EquipmentData_Stat_C_SetupGauge::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Item_EquipmentData_Stat_C_SetupGauge, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000048, "Member 'WBP_Item_EquipmentData_Stat_C_SetupGauge::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Item_EquipmentData_Stat_C_SetupGauge, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000050, "Member 'WBP_Item_EquipmentData_Stat_C_SetupGauge::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Item_EquipmentData_Stat_C_SetupGauge, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x000058, "Member 'WBP_Item_EquipmentData_Stat_C_SetupGauge::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Item_EquipmentData_Stat_C_SetupGauge, CallFunc_SetPercent_InPercent_ImplicitCast_1) == 0x00005C, "Member 'WBP_Item_EquipmentData_Stat_C_SetupGauge::CallFunc_SetPercent_InPercent_ImplicitCast_1' has a wrong offset!");

}

