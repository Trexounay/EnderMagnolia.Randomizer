#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Shop_Entry

#include "Basic.hpp"

#include "Zion_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_Shop_Entry.WBP_Shop_Entry_C.ExecuteUbergraph_WBP_Shop_Entry
// 0x0014 (0x0014 - 0x0000)
struct WBP_Shop_Entry_C_ExecuteUbergraph_WBP_Shop_Entry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFocusEvent                            K2Node_Event_InFocusEvent_1;                       // 0x0004(0x0008)(NoDestructor)
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x000C(0x0008)(NoDestructor)
};
static_assert(alignof(WBP_Shop_Entry_C_ExecuteUbergraph_WBP_Shop_Entry) == 0x000004, "Wrong alignment on WBP_Shop_Entry_C_ExecuteUbergraph_WBP_Shop_Entry");
static_assert(sizeof(WBP_Shop_Entry_C_ExecuteUbergraph_WBP_Shop_Entry) == 0x000014, "Wrong size on WBP_Shop_Entry_C_ExecuteUbergraph_WBP_Shop_Entry");
static_assert(offsetof(WBP_Shop_Entry_C_ExecuteUbergraph_WBP_Shop_Entry, EntryPoint) == 0x000000, "Member 'WBP_Shop_Entry_C_ExecuteUbergraph_WBP_Shop_Entry::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Shop_Entry_C_ExecuteUbergraph_WBP_Shop_Entry, K2Node_Event_InFocusEvent_1) == 0x000004, "Member 'WBP_Shop_Entry_C_ExecuteUbergraph_WBP_Shop_Entry::K2Node_Event_InFocusEvent_1' has a wrong offset!");
static_assert(offsetof(WBP_Shop_Entry_C_ExecuteUbergraph_WBP_Shop_Entry, K2Node_Event_InFocusEvent) == 0x00000C, "Member 'WBP_Shop_Entry_C_ExecuteUbergraph_WBP_Shop_Entry::K2Node_Event_InFocusEvent' has a wrong offset!");

// Function WBP_Shop_Entry.WBP_Shop_Entry_C.Initialize
// 0x01A0 (0x01A0 - 0x0000)
struct WBP_Shop_Entry_C_Initialize final
{
public:
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0010)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0018(0x0010)()
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInventoryItemData                     CallFunc_GetInventoryItemData_out_ItemData;        // 0x0030(0x0168)()
	bool                                          CallFunc_GetInventoryItemData_ReturnValue;         // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Shop_Entry_C_Initialize) == 0x000008, "Wrong alignment on WBP_Shop_Entry_C_Initialize");
static_assert(sizeof(WBP_Shop_Entry_C_Initialize) == 0x0001A0, "Wrong size on WBP_Shop_Entry_C_Initialize");
static_assert(offsetof(WBP_Shop_Entry_C_Initialize, Temp_byte_Variable) == 0x000000, "Member 'WBP_Shop_Entry_C_Initialize::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Shop_Entry_C_Initialize, Temp_byte_Variable_1) == 0x000001, "Member 'WBP_Shop_Entry_C_Initialize::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Shop_Entry_C_Initialize, Temp_bool_Variable) == 0x000002, "Member 'WBP_Shop_Entry_C_Initialize::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Shop_Entry_C_Initialize, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'WBP_Shop_Entry_C_Initialize::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Shop_Entry_C_Initialize, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000018, "Member 'WBP_Shop_Entry_C_Initialize::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Shop_Entry_C_Initialize, K2Node_Select_Default) == 0x000028, "Member 'WBP_Shop_Entry_C_Initialize::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Shop_Entry_C_Initialize, CallFunc_GetInventoryItemData_out_ItemData) == 0x000030, "Member 'WBP_Shop_Entry_C_Initialize::CallFunc_GetInventoryItemData_out_ItemData' has a wrong offset!");
static_assert(offsetof(WBP_Shop_Entry_C_Initialize, CallFunc_GetInventoryItemData_ReturnValue) == 0x000198, "Member 'WBP_Shop_Entry_C_Initialize::CallFunc_GetInventoryItemData_ReturnValue' has a wrong offset!");

// Function WBP_Shop_Entry.WBP_Shop_Entry_C.OnAddedToFocusPath
// 0x0008 (0x0008 - 0x0000)
struct WBP_Shop_Entry_C_OnAddedToFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(WBP_Shop_Entry_C_OnAddedToFocusPath) == 0x000004, "Wrong alignment on WBP_Shop_Entry_C_OnAddedToFocusPath");
static_assert(sizeof(WBP_Shop_Entry_C_OnAddedToFocusPath) == 0x000008, "Wrong size on WBP_Shop_Entry_C_OnAddedToFocusPath");
static_assert(offsetof(WBP_Shop_Entry_C_OnAddedToFocusPath, InFocusEvent) == 0x000000, "Member 'WBP_Shop_Entry_C_OnAddedToFocusPath::InFocusEvent' has a wrong offset!");

// Function WBP_Shop_Entry.WBP_Shop_Entry_C.OnPressConfirm
// 0x01B0 (0x01B0 - 0x0000)
struct WBP_Shop_Entry_C_OnPressConfirm final
{
public:
	struct FKeyEvent                              KeyEvent;                                          // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x00F8(0x00B8)()
};
static_assert(alignof(WBP_Shop_Entry_C_OnPressConfirm) == 0x000008, "Wrong alignment on WBP_Shop_Entry_C_OnPressConfirm");
static_assert(sizeof(WBP_Shop_Entry_C_OnPressConfirm) == 0x0001B0, "Wrong size on WBP_Shop_Entry_C_OnPressConfirm");
static_assert(offsetof(WBP_Shop_Entry_C_OnPressConfirm, KeyEvent) == 0x000000, "Member 'WBP_Shop_Entry_C_OnPressConfirm::KeyEvent' has a wrong offset!");
static_assert(offsetof(WBP_Shop_Entry_C_OnPressConfirm, ReturnValue) == 0x000040, "Member 'WBP_Shop_Entry_C_OnPressConfirm::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Shop_Entry_C_OnPressConfirm, CallFunc_Handled_ReturnValue) == 0x0000F8, "Member 'WBP_Shop_Entry_C_OnPressConfirm::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function WBP_Shop_Entry.WBP_Shop_Entry_C.OnRemovedFromFocusPath
// 0x0008 (0x0008 - 0x0000)
struct WBP_Shop_Entry_C_OnRemovedFromFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(WBP_Shop_Entry_C_OnRemovedFromFocusPath) == 0x000004, "Wrong alignment on WBP_Shop_Entry_C_OnRemovedFromFocusPath");
static_assert(sizeof(WBP_Shop_Entry_C_OnRemovedFromFocusPath) == 0x000008, "Wrong size on WBP_Shop_Entry_C_OnRemovedFromFocusPath");
static_assert(offsetof(WBP_Shop_Entry_C_OnRemovedFromFocusPath, InFocusEvent) == 0x000000, "Member 'WBP_Shop_Entry_C_OnRemovedFromFocusPath::InFocusEvent' has a wrong offset!");

// Function WBP_Shop_Entry.WBP_Shop_Entry_C.Refresh
// 0x0010 (0x0010 - 0x0000)
struct WBP_Shop_Entry_C_Refresh final
{
public:
	struct FCurrencyValue                         CurrencyValue_0;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	int32                                         NewStockCount;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Shop_Entry_C_Refresh) == 0x000004, "Wrong alignment on WBP_Shop_Entry_C_Refresh");
static_assert(sizeof(WBP_Shop_Entry_C_Refresh) == 0x000010, "Wrong size on WBP_Shop_Entry_C_Refresh");
static_assert(offsetof(WBP_Shop_Entry_C_Refresh, CurrencyValue_0) == 0x000000, "Member 'WBP_Shop_Entry_C_Refresh::CurrencyValue_0' has a wrong offset!");
static_assert(offsetof(WBP_Shop_Entry_C_Refresh, NewStockCount) == 0x000008, "Member 'WBP_Shop_Entry_C_Refresh::NewStockCount' has a wrong offset!");
static_assert(offsetof(WBP_Shop_Entry_C_Refresh, CallFunc_Max_ReturnValue) == 0x00000C, "Member 'WBP_Shop_Entry_C_Refresh::CallFunc_Max_ReturnValue' has a wrong offset!");

// Function WBP_Shop_Entry.WBP_Shop_Entry_C.RefreshPrice
// 0x0018 (0x0018 - 0x0000)
struct WBP_Shop_Entry_C_RefreshPrice final
{
public:
	class APlayerControllerZion*                  CallFunc_Get_ReturnValue;                          // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanSpendCurrency_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Shop_Entry_C_RefreshPrice) == 0x000008, "Wrong alignment on WBP_Shop_Entry_C_RefreshPrice");
static_assert(sizeof(WBP_Shop_Entry_C_RefreshPrice) == 0x000018, "Wrong size on WBP_Shop_Entry_C_RefreshPrice");
static_assert(offsetof(WBP_Shop_Entry_C_RefreshPrice, CallFunc_Get_ReturnValue) == 0x000000, "Member 'WBP_Shop_Entry_C_RefreshPrice::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Shop_Entry_C_RefreshPrice, CallFunc_CanSpendCurrency_ReturnValue) == 0x000008, "Member 'WBP_Shop_Entry_C_RefreshPrice::CallFunc_CanSpendCurrency_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Shop_Entry_C_RefreshPrice, CallFunc_SelectInt_ReturnValue) == 0x00000C, "Member 'WBP_Shop_Entry_C_RefreshPrice::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Shop_Entry_C_RefreshPrice, CallFunc_Greater_IntInt_ReturnValue) == 0x000010, "Member 'WBP_Shop_Entry_C_RefreshPrice::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Shop_Entry_C_RefreshPrice, CallFunc_SelectInt_ReturnValue_1) == 0x000014, "Member 'WBP_Shop_Entry_C_RefreshPrice::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");

// Function WBP_Shop_Entry.WBP_Shop_Entry_C.SetFocusedState
// 0x0010 (0x0010 - 0x0000)
struct WBP_Shop_Entry_C_SetFocusedState final
{
public:
	bool                                          Focus;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Shop_Entry_C_SetFocusedState) == 0x000008, "Wrong alignment on WBP_Shop_Entry_C_SetFocusedState");
static_assert(sizeof(WBP_Shop_Entry_C_SetFocusedState) == 0x000010, "Wrong size on WBP_Shop_Entry_C_SetFocusedState");
static_assert(offsetof(WBP_Shop_Entry_C_SetFocusedState, Focus) == 0x000000, "Member 'WBP_Shop_Entry_C_SetFocusedState::Focus' has a wrong offset!");
static_assert(offsetof(WBP_Shop_Entry_C_SetFocusedState, Temp_byte_Variable) == 0x000001, "Member 'WBP_Shop_Entry_C_SetFocusedState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Shop_Entry_C_SetFocusedState, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_Shop_Entry_C_SetFocusedState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Shop_Entry_C_SetFocusedState, Temp_bool_Variable) == 0x000003, "Member 'WBP_Shop_Entry_C_SetFocusedState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Shop_Entry_C_SetFocusedState, K2Node_Select_Default) == 0x000004, "Member 'WBP_Shop_Entry_C_SetFocusedState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Shop_Entry_C_SetFocusedState, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WBP_Shop_Entry_C_SetFocusedState::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

}

