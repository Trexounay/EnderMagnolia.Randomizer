#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_DebugMenu_Element_Choice_Text

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_DebugMenu_Element_Choice_Text.WBP_DebugMenu_Element_Choice_Text_C.SetOptionText
// 0x0010 (0x0010 - 0x0000)
struct WBP_DebugMenu_Element_Choice_Text_C_SetOptionText final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_DebugMenu_Element_Choice_Text_C_SetOptionText) == 0x000008, "Wrong alignment on WBP_DebugMenu_Element_Choice_Text_C_SetOptionText");
static_assert(sizeof(WBP_DebugMenu_Element_Choice_Text_C_SetOptionText) == 0x000010, "Wrong size on WBP_DebugMenu_Element_Choice_Text_C_SetOptionText");
static_assert(offsetof(WBP_DebugMenu_Element_Choice_Text_C_SetOptionText, InText) == 0x000000, "Member 'WBP_DebugMenu_Element_Choice_Text_C_SetOptionText::InText' has a wrong offset!");

// Function WBP_DebugMenu_Element_Choice_Text.WBP_DebugMenu_Element_Choice_Text_C.SetLabel
// 0x0010 (0x0010 - 0x0000)
struct WBP_DebugMenu_Element_Choice_Text_C_SetLabel final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_DebugMenu_Element_Choice_Text_C_SetLabel) == 0x000008, "Wrong alignment on WBP_DebugMenu_Element_Choice_Text_C_SetLabel");
static_assert(sizeof(WBP_DebugMenu_Element_Choice_Text_C_SetLabel) == 0x000010, "Wrong size on WBP_DebugMenu_Element_Choice_Text_C_SetLabel");
static_assert(offsetof(WBP_DebugMenu_Element_Choice_Text_C_SetLabel, InText) == 0x000000, "Member 'WBP_DebugMenu_Element_Choice_Text_C_SetLabel::InText' has a wrong offset!");

// Function WBP_DebugMenu_Element_Choice_Text.WBP_DebugMenu_Element_Choice_Text_C.SetHandleLeftRight
// 0x0001 (0x0001 - 0x0000)
struct WBP_DebugMenu_Element_Choice_Text_C_SetHandleLeftRight final
{
public:
	bool                                          HandleLeftRight_0;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_DebugMenu_Element_Choice_Text_C_SetHandleLeftRight) == 0x000001, "Wrong alignment on WBP_DebugMenu_Element_Choice_Text_C_SetHandleLeftRight");
static_assert(sizeof(WBP_DebugMenu_Element_Choice_Text_C_SetHandleLeftRight) == 0x000001, "Wrong size on WBP_DebugMenu_Element_Choice_Text_C_SetHandleLeftRight");
static_assert(offsetof(WBP_DebugMenu_Element_Choice_Text_C_SetHandleLeftRight, HandleLeftRight_0) == 0x000000, "Member 'WBP_DebugMenu_Element_Choice_Text_C_SetHandleLeftRight::HandleLeftRight_0' has a wrong offset!");

// Function WBP_DebugMenu_Element_Choice_Text.WBP_DebugMenu_Element_Choice_Text_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_DebugMenu_Element_Choice_Text_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_DebugMenu_Element_Choice_Text_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_DebugMenu_Element_Choice_Text_C_PreConstruct");
static_assert(sizeof(WBP_DebugMenu_Element_Choice_Text_C_PreConstruct) == 0x000001, "Wrong size on WBP_DebugMenu_Element_Choice_Text_C_PreConstruct");
static_assert(offsetof(WBP_DebugMenu_Element_Choice_Text_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_DebugMenu_Element_Choice_Text_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_DebugMenu_Element_Choice_Text.WBP_DebugMenu_Element_Choice_Text_C.OnFocusReceived
// 0x01B0 (0x01B0 - 0x0000)
struct WBP_DebugMenu_Element_Choice_Text_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x00F8(0x00B8)()
};
static_assert(alignof(WBP_DebugMenu_Element_Choice_Text_C_OnFocusReceived) == 0x000008, "Wrong alignment on WBP_DebugMenu_Element_Choice_Text_C_OnFocusReceived");
static_assert(sizeof(WBP_DebugMenu_Element_Choice_Text_C_OnFocusReceived) == 0x0001B0, "Wrong size on WBP_DebugMenu_Element_Choice_Text_C_OnFocusReceived");
static_assert(offsetof(WBP_DebugMenu_Element_Choice_Text_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'WBP_DebugMenu_Element_Choice_Text_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_DebugMenu_Element_Choice_Text_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'WBP_DebugMenu_Element_Choice_Text_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(WBP_DebugMenu_Element_Choice_Text_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'WBP_DebugMenu_Element_Choice_Text_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DebugMenu_Element_Choice_Text_C_OnFocusReceived, CallFunc_Handled_ReturnValue) == 0x0000F8, "Member 'WBP_DebugMenu_Element_Choice_Text_C_OnFocusReceived::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function WBP_DebugMenu_Element_Choice_Text.WBP_DebugMenu_Element_Choice_Text_C.ExecuteUbergraph_WBP_DebugMenu_Element_Choice_Text
// 0x0008 (0x0008 - 0x0000)
struct WBP_DebugMenu_Element_Choice_Text_C_ExecuteUbergraph_WBP_DebugMenu_Element_Choice_Text final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_DebugMenu_Element_Choice_Text_C_ExecuteUbergraph_WBP_DebugMenu_Element_Choice_Text) == 0x000004, "Wrong alignment on WBP_DebugMenu_Element_Choice_Text_C_ExecuteUbergraph_WBP_DebugMenu_Element_Choice_Text");
static_assert(sizeof(WBP_DebugMenu_Element_Choice_Text_C_ExecuteUbergraph_WBP_DebugMenu_Element_Choice_Text) == 0x000008, "Wrong size on WBP_DebugMenu_Element_Choice_Text_C_ExecuteUbergraph_WBP_DebugMenu_Element_Choice_Text");
static_assert(offsetof(WBP_DebugMenu_Element_Choice_Text_C_ExecuteUbergraph_WBP_DebugMenu_Element_Choice_Text, EntryPoint) == 0x000000, "Member 'WBP_DebugMenu_Element_Choice_Text_C_ExecuteUbergraph_WBP_DebugMenu_Element_Choice_Text::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_DebugMenu_Element_Choice_Text_C_ExecuteUbergraph_WBP_DebugMenu_Element_Choice_Text, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_DebugMenu_Element_Choice_Text_C_ExecuteUbergraph_WBP_DebugMenu_Element_Choice_Text::K2Node_Event_IsDesignTime' has a wrong offset!");

}

