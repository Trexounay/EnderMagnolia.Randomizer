#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Item_Text

#include "Basic.hpp"

#include "Zion_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_Item_Text.WBP_Item_Text_C.SetupText
// 0x0040 (0x0040 - 0x0000)
struct WBP_Item_Text_C_SetupText final
{
public:
	class URefreshableRichTextBlock*              Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FRichTextInputElement>          FormatElements;                                    // 0x0018(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class FString>                         StringElements;                                    // 0x0028(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Temp_bool_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Item_Text_C_SetupText) == 0x000008, "Wrong alignment on WBP_Item_Text_C_SetupText");
static_assert(sizeof(WBP_Item_Text_C_SetupText) == 0x000040, "Wrong size on WBP_Item_Text_C_SetupText");
static_assert(offsetof(WBP_Item_Text_C_SetupText, Target) == 0x000000, "Member 'WBP_Item_Text_C_SetupText::Target' has a wrong offset!");
static_assert(offsetof(WBP_Item_Text_C_SetupText, Text) == 0x000008, "Member 'WBP_Item_Text_C_SetupText::Text' has a wrong offset!");
static_assert(offsetof(WBP_Item_Text_C_SetupText, FormatElements) == 0x000018, "Member 'WBP_Item_Text_C_SetupText::FormatElements' has a wrong offset!");
static_assert(offsetof(WBP_Item_Text_C_SetupText, StringElements) == 0x000028, "Member 'WBP_Item_Text_C_SetupText::StringElements' has a wrong offset!");
static_assert(offsetof(WBP_Item_Text_C_SetupText, Temp_bool_Variable) == 0x000038, "Member 'WBP_Item_Text_C_SetupText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Item_Text_C_SetupText, CallFunc_TextIsEmpty_ReturnValue) == 0x000039, "Member 'WBP_Item_Text_C_SetupText::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Item_Text_C_SetupText, Temp_byte_Variable) == 0x00003A, "Member 'WBP_Item_Text_C_SetupText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Item_Text_C_SetupText, Temp_byte_Variable_1) == 0x00003B, "Member 'WBP_Item_Text_C_SetupText::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Item_Text_C_SetupText, K2Node_Select_Default) == 0x00003C, "Member 'WBP_Item_Text_C_SetupText::K2Node_Select_Default' has a wrong offset!");

// Function WBP_Item_Text.WBP_Item_Text_C.Setup
// 0x0060 (0x0060 - 0x0000)
struct WBP_Item_Text_C_Setup final
{
public:
	class FText                                   Description;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	TArray<struct FRichTextInputElement>          DescriptionFormatElements;                         // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class FString>                         DescriptionFormatStrings;                          // 0x0020(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   Flavor;                                            // 0x0030(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FRichTextInputElement>          FlavorFormatElements;                              // 0x0040(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class FString>                         FlavorFormatStrings;                               // 0x0050(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_Item_Text_C_Setup) == 0x000008, "Wrong alignment on WBP_Item_Text_C_Setup");
static_assert(sizeof(WBP_Item_Text_C_Setup) == 0x000060, "Wrong size on WBP_Item_Text_C_Setup");
static_assert(offsetof(WBP_Item_Text_C_Setup, Description) == 0x000000, "Member 'WBP_Item_Text_C_Setup::Description' has a wrong offset!");
static_assert(offsetof(WBP_Item_Text_C_Setup, DescriptionFormatElements) == 0x000010, "Member 'WBP_Item_Text_C_Setup::DescriptionFormatElements' has a wrong offset!");
static_assert(offsetof(WBP_Item_Text_C_Setup, DescriptionFormatStrings) == 0x000020, "Member 'WBP_Item_Text_C_Setup::DescriptionFormatStrings' has a wrong offset!");
static_assert(offsetof(WBP_Item_Text_C_Setup, Flavor) == 0x000030, "Member 'WBP_Item_Text_C_Setup::Flavor' has a wrong offset!");
static_assert(offsetof(WBP_Item_Text_C_Setup, FlavorFormatElements) == 0x000040, "Member 'WBP_Item_Text_C_Setup::FlavorFormatElements' has a wrong offset!");
static_assert(offsetof(WBP_Item_Text_C_Setup, FlavorFormatStrings) == 0x000050, "Member 'WBP_Item_Text_C_Setup::FlavorFormatStrings' has a wrong offset!");

}

