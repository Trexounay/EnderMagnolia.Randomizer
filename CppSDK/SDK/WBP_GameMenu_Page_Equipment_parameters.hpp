#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_GameMenu_Page_Equipment

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "Zion_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_GameMenu_Page_Equipment.WBP_GameMenu_Page_Equipment_C.Cancel Equipment Selection
// 0x0040 (0x0040 - 0x0000)
struct WBP_GameMenu_Page_Equipment_C_Cancel_Equipment_Selection final
{
public:
	class UWidget*                                WidgetToFocus;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_EquipSlot_C*                       CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EUINavigation Navigation)>     K2Node_CreateDelegate_OutputDelegate;              // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Equipment_C_Cancel_Equipment_Selection) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Equipment_C_Cancel_Equipment_Selection");
static_assert(sizeof(WBP_GameMenu_Page_Equipment_C_Cancel_Equipment_Selection) == 0x000040, "Wrong size on WBP_GameMenu_Page_Equipment_C_Cancel_Equipment_Selection");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_Cancel_Equipment_Selection, WidgetToFocus) == 0x000000, "Member 'WBP_GameMenu_Page_Equipment_C_Cancel_Equipment_Selection::WidgetToFocus' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_Cancel_Equipment_Selection, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_GameMenu_Page_Equipment_C_Cancel_Equipment_Selection::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_Cancel_Equipment_Selection, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'WBP_GameMenu_Page_Equipment_C_Cancel_Equipment_Selection::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_Cancel_Equipment_Selection, CallFunc_IsValid_ReturnValue_1) == 0x000010, "Member 'WBP_GameMenu_Page_Equipment_C_Cancel_Equipment_Selection::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_Cancel_Equipment_Selection, CallFunc_IsValid_ReturnValue_2) == 0x000011, "Member 'WBP_GameMenu_Page_Equipment_C_Cancel_Equipment_Selection::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_Cancel_Equipment_Selection, CallFunc_Array_Get_Item) == 0x000018, "Member 'WBP_GameMenu_Page_Equipment_C_Cancel_Equipment_Selection::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_Cancel_Equipment_Selection, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WBP_GameMenu_Page_Equipment_C_Cancel_Equipment_Selection::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_Cancel_Equipment_Selection, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'WBP_GameMenu_Page_Equipment_C_Cancel_Equipment_Selection::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_Cancel_Equipment_Selection, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'WBP_GameMenu_Page_Equipment_C_Cancel_Equipment_Selection::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_Cancel_Equipment_Selection, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'WBP_GameMenu_Page_Equipment_C_Cancel_Equipment_Selection::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_Cancel_Equipment_Selection, K2Node_CreateDelegate_OutputDelegate) == 0x000030, "Member 'WBP_GameMenu_Page_Equipment_C_Cancel_Equipment_Selection::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function WBP_GameMenu_Page_Equipment.WBP_GameMenu_Page_Equipment_C.CanChangeLoadout
// 0x0007 (0x0007 - 0x0000)
struct WBP_GameMenu_Page_Equipment_C_CanChangeLoadout final
{
public:
	bool                                          bCanChange;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInEquipmentSelection_ReturnValue;       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanSwitchEquipment_ReturnValue;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Equipment_C_CanChangeLoadout) == 0x000001, "Wrong alignment on WBP_GameMenu_Page_Equipment_C_CanChangeLoadout");
static_assert(sizeof(WBP_GameMenu_Page_Equipment_C_CanChangeLoadout) == 0x000007, "Wrong size on WBP_GameMenu_Page_Equipment_C_CanChangeLoadout");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_CanChangeLoadout, bCanChange) == 0x000000, "Member 'WBP_GameMenu_Page_Equipment_C_CanChangeLoadout::bCanChange' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_CanChangeLoadout, CallFunc_IsInEquipmentSelection_ReturnValue) == 0x000001, "Member 'WBP_GameMenu_Page_Equipment_C_CanChangeLoadout::CallFunc_IsInEquipmentSelection_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_CanChangeLoadout, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'WBP_GameMenu_Page_Equipment_C_CanChangeLoadout::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_CanChangeLoadout, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'WBP_GameMenu_Page_Equipment_C_CanChangeLoadout::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_CanChangeLoadout, CallFunc_CanSwitchEquipment_ReturnValue) == 0x000004, "Member 'WBP_GameMenu_Page_Equipment_C_CanChangeLoadout::CallFunc_CanSwitchEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_CanChangeLoadout, CallFunc_BooleanAND_ReturnValue) == 0x000005, "Member 'WBP_GameMenu_Page_Equipment_C_CanChangeLoadout::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_CanChangeLoadout, CallFunc_BooleanAND_ReturnValue_1) == 0x000006, "Member 'WBP_GameMenu_Page_Equipment_C_CanChangeLoadout::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function WBP_GameMenu_Page_Equipment.WBP_GameMenu_Page_Equipment_C.ChangeEquippedLoadout
// 0x0028 (0x0028 - 0x0000)
struct WBP_GameMenu_Page_Equipment_C_ChangeEquippedLoadout final
{
public:
	int32                                         NewLoadoutIndex;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_EquipSlot_C*                       CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Equipment_C_ChangeEquippedLoadout) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Equipment_C_ChangeEquippedLoadout");
static_assert(sizeof(WBP_GameMenu_Page_Equipment_C_ChangeEquippedLoadout) == 0x000028, "Wrong size on WBP_GameMenu_Page_Equipment_C_ChangeEquippedLoadout");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_ChangeEquippedLoadout, NewLoadoutIndex) == 0x000000, "Member 'WBP_GameMenu_Page_Equipment_C_ChangeEquippedLoadout::NewLoadoutIndex' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_ChangeEquippedLoadout, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WBP_GameMenu_Page_Equipment_C_ChangeEquippedLoadout::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_ChangeEquippedLoadout, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'WBP_GameMenu_Page_Equipment_C_ChangeEquippedLoadout::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_ChangeEquippedLoadout, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_GameMenu_Page_Equipment_C_ChangeEquippedLoadout::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_ChangeEquippedLoadout, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_GameMenu_Page_Equipment_C_ChangeEquippedLoadout::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_ChangeEquippedLoadout, CallFunc_Array_Get_Item) == 0x000018, "Member 'WBP_GameMenu_Page_Equipment_C_ChangeEquippedLoadout::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_ChangeEquippedLoadout, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WBP_GameMenu_Page_Equipment_C_ChangeEquippedLoadout::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_ChangeEquippedLoadout, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'WBP_GameMenu_Page_Equipment_C_ChangeEquippedLoadout::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_GameMenu_Page_Equipment.WBP_GameMenu_Page_Equipment_C.CreateAssistList
// 0x00D0 (0x00D0 - 0x0000)
struct WBP_GameMenu_Page_Equipment_C_CreateAssistList final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_EquipmentEntry_C*                  CallFunc_Create_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWBP_EquipmentEntry_C* EquipmentEntry)> K2Node_CreateDelegate_OutputDelegate; // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWBP_EquipmentEntry_C* EquipmentEntry)> K2Node_CreateDelegate_OutputDelegate_1; // 0x0028(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerControllerZion*                  CallFunc_Get_ReturnValue;                          // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UInventory*                             CallFunc_GetAssistInventory_ReturnValue;           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UDataTable*                       CallFunc_GetDataTable_ReturnValue;                 // 0x0048(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, int32>                      CallFunc_GetAllItems_ReturnValue;                  // 0x0050(0x0050)(ConstParm)
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x00A0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x00B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipped_ReturnValue;                   // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BE[0x2];                                       // 0x00BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle;              // 0x00C0(0x0010)(NoDestructor)
};
static_assert(alignof(WBP_GameMenu_Page_Equipment_C_CreateAssistList) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Equipment_C_CreateAssistList");
static_assert(sizeof(WBP_GameMenu_Page_Equipment_C_CreateAssistList) == 0x0000D0, "Wrong size on WBP_GameMenu_Page_Equipment_C_CreateAssistList");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_CreateAssistList, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_GameMenu_Page_Equipment_C_CreateAssistList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_CreateAssistList, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_GameMenu_Page_Equipment_C_CreateAssistList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_CreateAssistList, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_GameMenu_Page_Equipment_C_CreateAssistList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_CreateAssistList, CallFunc_Create_ReturnValue) == 0x000010, "Member 'WBP_GameMenu_Page_Equipment_C_CreateAssistList::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_CreateAssistList, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'WBP_GameMenu_Page_Equipment_C_CreateAssistList::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_CreateAssistList, K2Node_CreateDelegate_OutputDelegate_1) == 0x000028, "Member 'WBP_GameMenu_Page_Equipment_C_CreateAssistList::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_CreateAssistList, CallFunc_Get_ReturnValue) == 0x000038, "Member 'WBP_GameMenu_Page_Equipment_C_CreateAssistList::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_CreateAssistList, CallFunc_GetAssistInventory_ReturnValue) == 0x000040, "Member 'WBP_GameMenu_Page_Equipment_C_CreateAssistList::CallFunc_GetAssistInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_CreateAssistList, CallFunc_GetDataTable_ReturnValue) == 0x000048, "Member 'WBP_GameMenu_Page_Equipment_C_CreateAssistList::CallFunc_GetDataTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_CreateAssistList, CallFunc_GetAllItems_ReturnValue) == 0x000050, "Member 'WBP_GameMenu_Page_Equipment_C_CreateAssistList::CallFunc_GetAllItems_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_CreateAssistList, CallFunc_Map_Keys_Keys) == 0x0000A0, "Member 'WBP_GameMenu_Page_Equipment_C_CreateAssistList::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_CreateAssistList, CallFunc_Array_Length_ReturnValue) == 0x0000B0, "Member 'WBP_GameMenu_Page_Equipment_C_CreateAssistList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_CreateAssistList, CallFunc_Array_Get_Item) == 0x0000B4, "Member 'WBP_GameMenu_Page_Equipment_C_CreateAssistList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_CreateAssistList, CallFunc_Less_IntInt_ReturnValue) == 0x0000BC, "Member 'WBP_GameMenu_Page_Equipment_C_CreateAssistList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_CreateAssistList, CallFunc_IsEquipped_ReturnValue) == 0x0000BD, "Member 'WBP_GameMenu_Page_Equipment_C_CreateAssistList::CallFunc_IsEquipped_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_CreateAssistList, K2Node_MakeStruct_DataTableRowHandle) == 0x0000C0, "Member 'WBP_GameMenu_Page_Equipment_C_CreateAssistList::K2Node_MakeStruct_DataTableRowHandle' has a wrong offset!");

// Function WBP_GameMenu_Page_Equipment.WBP_GameMenu_Page_Equipment_C.CreateEquipmentList
// 0x02D8 (0x02D8 - 0x0000)
struct WBP_GameMenu_Page_Equipment_C_CreateEquipmentList final
{
public:
	class UWBP_EquipmentEntry_C*                  CallFunc_Create_ReturnValue;                       // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInventoryItemEquipmentData            CallFunc_GetItemEquipmentData_out_ItemData;        // 0x0010(0x01E8)()
	bool                                          CallFunc_GetItemEquipmentData_ReturnValue;         // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F9[0x3];                                      // 0x01F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUniformGridPanelZion*                  Temp_object_Variable;                              // 0x0208(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWBP_EquipmentEntry_C* EquipmentEntry)> K2Node_CreateDelegate_OutputDelegate; // 0x0210(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EEquipmentType                                Temp_byte_Variable;                                // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_221[0x3];                                      // 0x0221(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UWBP_EquipmentEntry_C* EquipmentEntry)> K2Node_CreateDelegate_OutputDelegate_1; // 0x0224(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_234[0x4];                                      // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUniformGridPanelZion*                  K2Node_Select_Default;                             // 0x0238(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerControllerZion*                  CallFunc_Get_ReturnValue;                          // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UInventory*                             CallFunc_GetEquipmentInventory_ReturnValue;        // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, int32>                      CallFunc_GetAllItems_ReturnValue;                  // 0x0250(0x0050)(ConstParm)
	const class UDataTable*                       CallFunc_GetDataTable_ReturnValue;                 // 0x02A0(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x02A8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x02BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipped_ReturnValue;                   // 0x02C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C6[0x2];                                      // 0x02C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle;              // 0x02C8(0x0010)(NoDestructor)
};
static_assert(alignof(WBP_GameMenu_Page_Equipment_C_CreateEquipmentList) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Equipment_C_CreateEquipmentList");
static_assert(sizeof(WBP_GameMenu_Page_Equipment_C_CreateEquipmentList) == 0x0002D8, "Wrong size on WBP_GameMenu_Page_Equipment_C_CreateEquipmentList");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_CreateEquipmentList, CallFunc_Create_ReturnValue) == 0x000000, "Member 'WBP_GameMenu_Page_Equipment_C_CreateEquipmentList::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_CreateEquipmentList, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WBP_GameMenu_Page_Equipment_C_CreateEquipmentList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_CreateEquipmentList, CallFunc_GetItemEquipmentData_out_ItemData) == 0x000010, "Member 'WBP_GameMenu_Page_Equipment_C_CreateEquipmentList::CallFunc_GetItemEquipmentData_out_ItemData' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_CreateEquipmentList, CallFunc_GetItemEquipmentData_ReturnValue) == 0x0001F8, "Member 'WBP_GameMenu_Page_Equipment_C_CreateEquipmentList::CallFunc_GetItemEquipmentData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_CreateEquipmentList, Temp_int_Loop_Counter_Variable) == 0x0001FC, "Member 'WBP_GameMenu_Page_Equipment_C_CreateEquipmentList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_CreateEquipmentList, CallFunc_Add_IntInt_ReturnValue) == 0x000200, "Member 'WBP_GameMenu_Page_Equipment_C_CreateEquipmentList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_CreateEquipmentList, Temp_object_Variable) == 0x000208, "Member 'WBP_GameMenu_Page_Equipment_C_CreateEquipmentList::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_CreateEquipmentList, K2Node_CreateDelegate_OutputDelegate) == 0x000210, "Member 'WBP_GameMenu_Page_Equipment_C_CreateEquipmentList::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_CreateEquipmentList, Temp_byte_Variable) == 0x000220, "Member 'WBP_GameMenu_Page_Equipment_C_CreateEquipmentList::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_CreateEquipmentList, K2Node_CreateDelegate_OutputDelegate_1) == 0x000224, "Member 'WBP_GameMenu_Page_Equipment_C_CreateEquipmentList::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_CreateEquipmentList, K2Node_Select_Default) == 0x000238, "Member 'WBP_GameMenu_Page_Equipment_C_CreateEquipmentList::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_CreateEquipmentList, CallFunc_Get_ReturnValue) == 0x000240, "Member 'WBP_GameMenu_Page_Equipment_C_CreateEquipmentList::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_CreateEquipmentList, CallFunc_GetEquipmentInventory_ReturnValue) == 0x000248, "Member 'WBP_GameMenu_Page_Equipment_C_CreateEquipmentList::CallFunc_GetEquipmentInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_CreateEquipmentList, CallFunc_GetAllItems_ReturnValue) == 0x000250, "Member 'WBP_GameMenu_Page_Equipment_C_CreateEquipmentList::CallFunc_GetAllItems_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_CreateEquipmentList, CallFunc_GetDataTable_ReturnValue) == 0x0002A0, "Member 'WBP_GameMenu_Page_Equipment_C_CreateEquipmentList::CallFunc_GetDataTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_CreateEquipmentList, CallFunc_Map_Keys_Keys) == 0x0002A8, "Member 'WBP_GameMenu_Page_Equipment_C_CreateEquipmentList::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_CreateEquipmentList, CallFunc_Array_Length_ReturnValue) == 0x0002B8, "Member 'WBP_GameMenu_Page_Equipment_C_CreateEquipmentList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_CreateEquipmentList, CallFunc_Array_Get_Item) == 0x0002BC, "Member 'WBP_GameMenu_Page_Equipment_C_CreateEquipmentList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_CreateEquipmentList, CallFunc_Less_IntInt_ReturnValue) == 0x0002C4, "Member 'WBP_GameMenu_Page_Equipment_C_CreateEquipmentList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_CreateEquipmentList, CallFunc_IsEquipped_ReturnValue) == 0x0002C5, "Member 'WBP_GameMenu_Page_Equipment_C_CreateEquipmentList::CallFunc_IsEquipped_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_CreateEquipmentList, K2Node_MakeStruct_DataTableRowHandle) == 0x0002C8, "Member 'WBP_GameMenu_Page_Equipment_C_CreateEquipmentList::K2Node_MakeStruct_DataTableRowHandle' has a wrong offset!");

// Function WBP_GameMenu_Page_Equipment.WBP_GameMenu_Page_Equipment_C.EquipAssistEntry
// 0x0018 (0x0018 - 0x0000)
struct WBP_GameMenu_Page_Equipment_C_EquipAssistEntry final
{
public:
	class UWBP_EquipmentEntry_C*                  EquipmentEntry;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetAssistID_ReturnValue;                  // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Equipment_C_EquipAssistEntry) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Equipment_C_EquipAssistEntry");
static_assert(sizeof(WBP_GameMenu_Page_Equipment_C_EquipAssistEntry) == 0x000018, "Wrong size on WBP_GameMenu_Page_Equipment_C_EquipAssistEntry");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_EquipAssistEntry, EquipmentEntry) == 0x000000, "Member 'WBP_GameMenu_Page_Equipment_C_EquipAssistEntry::EquipmentEntry' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_EquipAssistEntry, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_GameMenu_Page_Equipment_C_EquipAssistEntry::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_EquipAssistEntry, CallFunc_GetAssistID_ReturnValue) == 0x00000C, "Member 'WBP_GameMenu_Page_Equipment_C_EquipAssistEntry::CallFunc_GetAssistID_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_EquipAssistEntry, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000014, "Member 'WBP_GameMenu_Page_Equipment_C_EquipAssistEntry::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_EquipAssistEntry, CallFunc_IsValid_ReturnValue_1) == 0x000015, "Member 'WBP_GameMenu_Page_Equipment_C_EquipAssistEntry::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function WBP_GameMenu_Page_Equipment.WBP_GameMenu_Page_Equipment_C.EquipEntry
// 0x0030 (0x0030 - 0x0000)
struct WBP_GameMenu_Page_Equipment_C_EquipEntry final
{
public:
	class UWBP_EquipmentEntry_C*                  EquipmentEntry;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EEquipmentSlot                                EquipmentSlot;                                     // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_EquipSlot_NewAssist_C*             K2Node_DynamicCast_AsWBP_Equip_Slot_New_Assist;    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_EquipSlot_Equipment_C*             K2Node_DynamicCast_AsWBP_Equip_Slot_Equipment;     // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Equipment_C_EquipEntry) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Equipment_C_EquipEntry");
static_assert(sizeof(WBP_GameMenu_Page_Equipment_C_EquipEntry) == 0x000030, "Wrong size on WBP_GameMenu_Page_Equipment_C_EquipEntry");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_EquipEntry, EquipmentEntry) == 0x000000, "Member 'WBP_GameMenu_Page_Equipment_C_EquipEntry::EquipmentEntry' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_EquipEntry, EquipmentSlot) == 0x000008, "Member 'WBP_GameMenu_Page_Equipment_C_EquipEntry::EquipmentSlot' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_EquipEntry, K2Node_DynamicCast_AsWBP_Equip_Slot_New_Assist) == 0x000010, "Member 'WBP_GameMenu_Page_Equipment_C_EquipEntry::K2Node_DynamicCast_AsWBP_Equip_Slot_New_Assist' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_EquipEntry, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_GameMenu_Page_Equipment_C_EquipEntry::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_EquipEntry, K2Node_DynamicCast_AsWBP_Equip_Slot_Equipment) == 0x000020, "Member 'WBP_GameMenu_Page_Equipment_C_EquipEntry::K2Node_DynamicCast_AsWBP_Equip_Slot_Equipment' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_EquipEntry, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'WBP_GameMenu_Page_Equipment_C_EquipEntry::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function WBP_GameMenu_Page_Equipment.WBP_GameMenu_Page_Equipment_C.EquipEquipmentEntry
// 0x0020 (0x0020 - 0x0000)
struct WBP_GameMenu_Page_Equipment_C_EquipEquipmentEntry final
{
public:
	class UWBP_EquipmentEntry_C*                  EquipmentEntry;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EEquipmentSlot                                EquipmentSlot;                                     // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_EquipSlot_Equipment_C*             K2Node_DynamicCast_AsWBP_Equip_Slot_Equipment;     // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquippedOnSlot_ReturnValue;             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Equipment_C_EquipEquipmentEntry) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Equipment_C_EquipEquipmentEntry");
static_assert(sizeof(WBP_GameMenu_Page_Equipment_C_EquipEquipmentEntry) == 0x000020, "Wrong size on WBP_GameMenu_Page_Equipment_C_EquipEquipmentEntry");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_EquipEquipmentEntry, EquipmentEntry) == 0x000000, "Member 'WBP_GameMenu_Page_Equipment_C_EquipEquipmentEntry::EquipmentEntry' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_EquipEquipmentEntry, EquipmentSlot) == 0x000008, "Member 'WBP_GameMenu_Page_Equipment_C_EquipEquipmentEntry::EquipmentSlot' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_EquipEquipmentEntry, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'WBP_GameMenu_Page_Equipment_C_EquipEquipmentEntry::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_EquipEquipmentEntry, CallFunc_IsValid_ReturnValue_1) == 0x00000A, "Member 'WBP_GameMenu_Page_Equipment_C_EquipEquipmentEntry::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_EquipEquipmentEntry, K2Node_DynamicCast_AsWBP_Equip_Slot_Equipment) == 0x000010, "Member 'WBP_GameMenu_Page_Equipment_C_EquipEquipmentEntry::K2Node_DynamicCast_AsWBP_Equip_Slot_Equipment' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_EquipEquipmentEntry, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_GameMenu_Page_Equipment_C_EquipEquipmentEntry::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_EquipEquipmentEntry, CallFunc_IsEquippedOnSlot_ReturnValue) == 0x000019, "Member 'WBP_GameMenu_Page_Equipment_C_EquipEquipmentEntry::CallFunc_IsEquippedOnSlot_ReturnValue' has a wrong offset!");

// Function WBP_GameMenu_Page_Equipment.WBP_GameMenu_Page_Equipment_C.ExecuteUbergraph_WBP_GameMenu_Page_Equipment
// 0x0148 (0x0148 - 0x0000)
struct WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerControllerZion*                  CallFunc_Get_ReturnValue;                          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentEquipmentLoadoutIndex_ReturnValue; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_EquipmentEntry_C*                  K2Node_CustomEvent_EquipmentEntry_1;               // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_EquipmentEntry_C*                  K2Node_CustomEvent_EquipmentEntry;                 // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_EquipSlot_C*                       K2Node_CustomEvent_SlotEntry_1;                    // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_EquipSlot_C*                       K2Node_CustomEvent_SlotEntry;                      // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUniformGridPanelZion*                  CallFunc_GetEntryHolderForSlotEntry_ReturnValue;   // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPageIndexForEquipmentSlot_ReturnValue; // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerControllerZion*                  CallFunc_Get_ReturnValue_1;                        // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x0058(0x0010)(ConstParm)
	TDelegate<void(class UWBP_EquipSlot_C* EquipmentSlot)> K2Node_CreateDelegate_OutputDelegate;     // 0x0068(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWBP_EquipSlot_C* SlotEntry)> K2Node_CreateDelegate_OutputDelegate_1;       // 0x0078(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UWBP_EquipSlot_C*>               K2Node_MakeArray_Array;                            // 0x0088(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Dialog_OK_C*                       CallFunc_Create_ReturnValue;                       // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Dialog_OK_C*                       CallFunc_Create_ReturnValue_1;                     // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanSwitchEquipment_ReturnValue;           // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanSwitchEquipment_ReturnValue_1;         // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKeyEvent                              K2Node_CustomEvent_KeyEvent;                       // 0x00C8(0x0040)()
	class UWBP_Button_Tab_C*                      K2Node_CustomEvent_PressedButtonTab;               // 0x0108(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInEquipmentSelection_ReturnValue;       // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_112[0x2];                                      // 0x0112(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue;         // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_1;                              // 0x0120(0x0010)(ConstParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_135[0x3];                                      // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_EquipSlot_C*                       CallFunc_Array_Get_Item;                           // 0x0140(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment");
static_assert(sizeof(WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment) == 0x000148, "Wrong size on WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment, EntryPoint) == 0x000000, "Member 'WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment, CallFunc_Get_ReturnValue) == 0x000008, "Member 'WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment, CallFunc_GetCurrentEquipmentLoadoutIndex_ReturnValue) == 0x000010, "Member 'WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment::CallFunc_GetCurrentEquipmentLoadoutIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment, K2Node_CustomEvent_EquipmentEntry_1) == 0x000018, "Member 'WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment::K2Node_CustomEvent_EquipmentEntry_1' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment, K2Node_CustomEvent_EquipmentEntry) == 0x000020, "Member 'WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment::K2Node_CustomEvent_EquipmentEntry' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment, K2Node_CustomEvent_SlotEntry_1) == 0x000028, "Member 'WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment::K2Node_CustomEvent_SlotEntry_1' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment, K2Node_CustomEvent_SlotEntry) == 0x000030, "Member 'WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment::K2Node_CustomEvent_SlotEntry' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment, CallFunc_GetEntryHolderForSlotEntry_ReturnValue) == 0x000038, "Member 'WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment::CallFunc_GetEntryHolderForSlotEntry_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment, CallFunc_GetChildrenCount_ReturnValue) == 0x000040, "Member 'WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment, CallFunc_Greater_IntInt_ReturnValue) == 0x000044, "Member 'WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment, CallFunc_GetPageIndexForEquipmentSlot_ReturnValue) == 0x000048, "Member 'WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment::CallFunc_GetPageIndexForEquipmentSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment, CallFunc_Get_ReturnValue_1) == 0x000050, "Member 'WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment::CallFunc_Get_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment, Temp_text_Variable) == 0x000058, "Member 'WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment, K2Node_CreateDelegate_OutputDelegate) == 0x000068, "Member 'WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment, K2Node_CreateDelegate_OutputDelegate_1) == 0x000078, "Member 'WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment, K2Node_MakeArray_Array) == 0x000088, "Member 'WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment, Temp_int_Loop_Counter_Variable) == 0x000098, "Member 'WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment, CallFunc_IsValid_ReturnValue) == 0x00009C, "Member 'WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment, CallFunc_Add_IntInt_ReturnValue) == 0x0000A0, "Member 'WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment, CallFunc_Create_ReturnValue) == 0x0000A8, "Member 'WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment, CallFunc_IsValid_ReturnValue_1) == 0x0000B0, "Member 'WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment, CallFunc_IsValid_ReturnValue_2) == 0x0000B1, "Member 'WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment, CallFunc_Create_ReturnValue_1) == 0x0000B8, "Member 'WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment, CallFunc_CanSwitchEquipment_ReturnValue) == 0x0000C0, "Member 'WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment::CallFunc_CanSwitchEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment, CallFunc_CanSwitchEquipment_ReturnValue_1) == 0x0000C1, "Member 'WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment::CallFunc_CanSwitchEquipment_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment, K2Node_CustomEvent_KeyEvent) == 0x0000C8, "Member 'WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment::K2Node_CustomEvent_KeyEvent' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment, K2Node_CustomEvent_PressedButtonTab) == 0x000108, "Member 'WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment::K2Node_CustomEvent_PressedButtonTab' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment, CallFunc_IsInEquipmentSelection_ReturnValue) == 0x000110, "Member 'WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment::CallFunc_IsInEquipmentSelection_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment, CallFunc_Not_PreBool_ReturnValue) == 0x000111, "Member 'WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment, CallFunc_GetActiveWidgetIndex_ReturnValue) == 0x000114, "Member 'WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment::CallFunc_GetActiveWidgetIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment, CallFunc_Subtract_IntInt_ReturnValue) == 0x000118, "Member 'WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment, Temp_text_Variable_1) == 0x000120, "Member 'WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment, CallFunc_Array_Length_ReturnValue) == 0x000130, "Member 'WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment, CallFunc_Less_IntInt_ReturnValue) == 0x000134, "Member 'WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment, Temp_int_Array_Index_Variable) == 0x000138, "Member 'WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment, CallFunc_Array_Get_Item) == 0x000140, "Member 'WBP_GameMenu_Page_Equipment_C_ExecuteUbergraph_WBP_GameMenu_Page_Equipment::CallFunc_Array_Get_Item' has a wrong offset!");

// Function WBP_GameMenu_Page_Equipment.WBP_GameMenu_Page_Equipment_C.FocusAssistList
// 0x0010 (0x0010 - 0x0000)
struct WBP_GameMenu_Page_Equipment_C_FocusAssistList final
{
public:
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Equipment_C_FocusAssistList) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Equipment_C_FocusAssistList");
static_assert(sizeof(WBP_GameMenu_Page_Equipment_C_FocusAssistList) == 0x000010, "Wrong size on WBP_GameMenu_Page_Equipment_C_FocusAssistList");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_FocusAssistList, CallFunc_GetChildAt_ReturnValue) == 0x000000, "Member 'WBP_GameMenu_Page_Equipment_C_FocusAssistList::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_FocusAssistList, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_GameMenu_Page_Equipment_C_FocusAssistList::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_GameMenu_Page_Equipment.WBP_GameMenu_Page_Equipment_C.FocusEquipmentList
// 0x0020 (0x0020 - 0x0000)
struct WBP_GameMenu_Page_Equipment_C_FocusEquipmentList final
{
public:
	class UWBP_EquipSlot_C*                       EquipmentSlot;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUniformGridPanelZion*                  CallFunc_GetEntryHolderForSlotEntry_ReturnValue;   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Equipment_C_FocusEquipmentList) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Equipment_C_FocusEquipmentList");
static_assert(sizeof(WBP_GameMenu_Page_Equipment_C_FocusEquipmentList) == 0x000020, "Wrong size on WBP_GameMenu_Page_Equipment_C_FocusEquipmentList");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_FocusEquipmentList, EquipmentSlot) == 0x000000, "Member 'WBP_GameMenu_Page_Equipment_C_FocusEquipmentList::EquipmentSlot' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_FocusEquipmentList, CallFunc_GetEntryHolderForSlotEntry_ReturnValue) == 0x000008, "Member 'WBP_GameMenu_Page_Equipment_C_FocusEquipmentList::CallFunc_GetEntryHolderForSlotEntry_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_FocusEquipmentList, CallFunc_GetChildAt_ReturnValue) == 0x000010, "Member 'WBP_GameMenu_Page_Equipment_C_FocusEquipmentList::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_FocusEquipmentList, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_GameMenu_Page_Equipment_C_FocusEquipmentList::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_GameMenu_Page_Equipment.WBP_GameMenu_Page_Equipment_C.FocusEquipmentSlot
// 0x0030 (0x0030 - 0x0000)
struct WBP_GameMenu_Page_Equipment_C_FocusEquipmentSlot final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_EquipSlot_C*                       CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetActiveWidget_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23[0x1];                                       // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Equipment_C_FocusEquipmentSlot) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Equipment_C_FocusEquipmentSlot");
static_assert(sizeof(WBP_GameMenu_Page_Equipment_C_FocusEquipmentSlot) == 0x000030, "Wrong size on WBP_GameMenu_Page_Equipment_C_FocusEquipmentSlot");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_FocusEquipmentSlot, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_GameMenu_Page_Equipment_C_FocusEquipmentSlot::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_FocusEquipmentSlot, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_GameMenu_Page_Equipment_C_FocusEquipmentSlot::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_FocusEquipmentSlot, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_GameMenu_Page_Equipment_C_FocusEquipmentSlot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_FocusEquipmentSlot, CallFunc_Array_Get_Item) == 0x000010, "Member 'WBP_GameMenu_Page_Equipment_C_FocusEquipmentSlot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_FocusEquipmentSlot, CallFunc_GetActiveWidget_ReturnValue) == 0x000018, "Member 'WBP_GameMenu_Page_Equipment_C_FocusEquipmentSlot::CallFunc_GetActiveWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_FocusEquipmentSlot, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000020, "Member 'WBP_GameMenu_Page_Equipment_C_FocusEquipmentSlot::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_FocusEquipmentSlot, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000021, "Member 'WBP_GameMenu_Page_Equipment_C_FocusEquipmentSlot::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_FocusEquipmentSlot, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x000022, "Member 'WBP_GameMenu_Page_Equipment_C_FocusEquipmentSlot::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_FocusEquipmentSlot, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'WBP_GameMenu_Page_Equipment_C_FocusEquipmentSlot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_FocusEquipmentSlot, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'WBP_GameMenu_Page_Equipment_C_FocusEquipmentSlot::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_GameMenu_Page_Equipment.WBP_GameMenu_Page_Equipment_C.GetEntryHolderForSlot
// 0x0020 (0x0020 - 0x0000)
struct WBP_GameMenu_Page_Equipment_C_GetEntryHolderForSlot final
{
public:
	EEquipmentSlot                                EquipmentSlot;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUniformGridPanelZion*                  EquipmentHolder;                                   // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EEquipmentSlot                                Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUniformGridPanelZion*                  K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Equipment_C_GetEntryHolderForSlot) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Equipment_C_GetEntryHolderForSlot");
static_assert(sizeof(WBP_GameMenu_Page_Equipment_C_GetEntryHolderForSlot) == 0x000020, "Wrong size on WBP_GameMenu_Page_Equipment_C_GetEntryHolderForSlot");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_GetEntryHolderForSlot, EquipmentSlot) == 0x000000, "Member 'WBP_GameMenu_Page_Equipment_C_GetEntryHolderForSlot::EquipmentSlot' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_GetEntryHolderForSlot, EquipmentHolder) == 0x000008, "Member 'WBP_GameMenu_Page_Equipment_C_GetEntryHolderForSlot::EquipmentHolder' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_GetEntryHolderForSlot, Temp_byte_Variable) == 0x000010, "Member 'WBP_GameMenu_Page_Equipment_C_GetEntryHolderForSlot::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_GetEntryHolderForSlot, K2Node_Select_Default) == 0x000018, "Member 'WBP_GameMenu_Page_Equipment_C_GetEntryHolderForSlot::K2Node_Select_Default' has a wrong offset!");

// Function WBP_GameMenu_Page_Equipment.WBP_GameMenu_Page_Equipment_C.GetEntryHolderForSlotEntry
// 0x0028 (0x0028 - 0x0000)
struct WBP_GameMenu_Page_Equipment_C_GetEntryHolderForSlotEntry final
{
public:
	class UWBP_EquipSlot_C*                       EquipmentSlot;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUniformGridPanelZion*                  ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_EquipSlot_Equipment_C*             K2Node_DynamicCast_AsWBP_Equip_Slot_Equipment;     // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUniformGridPanelZion*                  CallFunc_GetEntryHolderForSlot_EquipmentHolder;    // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Equipment_C_GetEntryHolderForSlotEntry) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Equipment_C_GetEntryHolderForSlotEntry");
static_assert(sizeof(WBP_GameMenu_Page_Equipment_C_GetEntryHolderForSlotEntry) == 0x000028, "Wrong size on WBP_GameMenu_Page_Equipment_C_GetEntryHolderForSlotEntry");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_GetEntryHolderForSlotEntry, EquipmentSlot) == 0x000000, "Member 'WBP_GameMenu_Page_Equipment_C_GetEntryHolderForSlotEntry::EquipmentSlot' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_GetEntryHolderForSlotEntry, ReturnValue) == 0x000008, "Member 'WBP_GameMenu_Page_Equipment_C_GetEntryHolderForSlotEntry::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_GetEntryHolderForSlotEntry, K2Node_DynamicCast_AsWBP_Equip_Slot_Equipment) == 0x000010, "Member 'WBP_GameMenu_Page_Equipment_C_GetEntryHolderForSlotEntry::K2Node_DynamicCast_AsWBP_Equip_Slot_Equipment' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_GetEntryHolderForSlotEntry, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_GameMenu_Page_Equipment_C_GetEntryHolderForSlotEntry::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_GetEntryHolderForSlotEntry, CallFunc_GetEntryHolderForSlot_EquipmentHolder) == 0x000020, "Member 'WBP_GameMenu_Page_Equipment_C_GetEntryHolderForSlotEntry::CallFunc_GetEntryHolderForSlot_EquipmentHolder' has a wrong offset!");

// Function WBP_GameMenu_Page_Equipment.WBP_GameMenu_Page_Equipment_C.GetEquipmentSlotForEntryHolder
// 0x0018 (0x0018 - 0x0000)
struct WBP_GameMenu_Page_Equipment_C_GetEquipmentSlotForEntryHolder final
{
public:
	class UObject*                                EntryHolder;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_EquipSlot_C*                       EquipSlot;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Equipment_C_GetEquipmentSlotForEntryHolder) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Equipment_C_GetEquipmentSlotForEntryHolder");
static_assert(sizeof(WBP_GameMenu_Page_Equipment_C_GetEquipmentSlotForEntryHolder) == 0x000018, "Wrong size on WBP_GameMenu_Page_Equipment_C_GetEquipmentSlotForEntryHolder");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_GetEquipmentSlotForEntryHolder, EntryHolder) == 0x000000, "Member 'WBP_GameMenu_Page_Equipment_C_GetEquipmentSlotForEntryHolder::EntryHolder' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_GetEquipmentSlotForEntryHolder, EquipSlot) == 0x000008, "Member 'WBP_GameMenu_Page_Equipment_C_GetEquipmentSlotForEntryHolder::EquipSlot' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_GetEquipmentSlotForEntryHolder, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000010, "Member 'WBP_GameMenu_Page_Equipment_C_GetEquipmentSlotForEntryHolder::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_GetEquipmentSlotForEntryHolder, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000011, "Member 'WBP_GameMenu_Page_Equipment_C_GetEquipmentSlotForEntryHolder::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_GetEquipmentSlotForEntryHolder, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x000012, "Member 'WBP_GameMenu_Page_Equipment_C_GetEquipmentSlotForEntryHolder::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");

// Function WBP_GameMenu_Page_Equipment.WBP_GameMenu_Page_Equipment_C.GetPageIndexForEquipmentSlot
// 0x0020 (0x0020 - 0x0000)
struct WBP_GameMenu_Page_Equipment_C_GetPageIndexForEquipmentSlot final
{
public:
	class UWBP_EquipSlot_C*                       EquipmentSlot;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUniformGridPanelZion*                  CallFunc_GetEntryHolderForSlotEntry_ReturnValue;   // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildIndex_ReturnValue;                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Equipment_C_GetPageIndexForEquipmentSlot) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Equipment_C_GetPageIndexForEquipmentSlot");
static_assert(sizeof(WBP_GameMenu_Page_Equipment_C_GetPageIndexForEquipmentSlot) == 0x000020, "Wrong size on WBP_GameMenu_Page_Equipment_C_GetPageIndexForEquipmentSlot");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_GetPageIndexForEquipmentSlot, EquipmentSlot) == 0x000000, "Member 'WBP_GameMenu_Page_Equipment_C_GetPageIndexForEquipmentSlot::EquipmentSlot' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_GetPageIndexForEquipmentSlot, ReturnValue) == 0x000008, "Member 'WBP_GameMenu_Page_Equipment_C_GetPageIndexForEquipmentSlot::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_GetPageIndexForEquipmentSlot, CallFunc_GetEntryHolderForSlotEntry_ReturnValue) == 0x000010, "Member 'WBP_GameMenu_Page_Equipment_C_GetPageIndexForEquipmentSlot::CallFunc_GetEntryHolderForSlotEntry_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_GetPageIndexForEquipmentSlot, CallFunc_GetChildIndex_ReturnValue) == 0x000018, "Member 'WBP_GameMenu_Page_Equipment_C_GetPageIndexForEquipmentSlot::CallFunc_GetChildIndex_ReturnValue' has a wrong offset!");

// Function WBP_GameMenu_Page_Equipment.WBP_GameMenu_Page_Equipment_C.GoToPage
// 0x0050 (0x0050 - 0x0000)
struct WBP_GameMenu_Page_Equipment_C_GoToPage final
{
public:
	int32                                         PageOffset;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetActiveWidget_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetActiveWidget_ReturnValue_1;            // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_EquipSlot_C*                       CallFunc_GetEquipmentSlotForEntryHolder_EquipSlot; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPanelWidget*                           K2Node_DynamicCast_AsPanel_Widget;                 // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue;         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue_1;           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_LoopAround_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Equipment_C_GoToPage) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Equipment_C_GoToPage");
static_assert(sizeof(WBP_GameMenu_Page_Equipment_C_GoToPage) == 0x000050, "Wrong size on WBP_GameMenu_Page_Equipment_C_GoToPage");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_GoToPage, PageOffset) == 0x000000, "Member 'WBP_GameMenu_Page_Equipment_C_GoToPage::PageOffset' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_GoToPage, CallFunc_GetActiveWidget_ReturnValue) == 0x000008, "Member 'WBP_GameMenu_Page_Equipment_C_GoToPage::CallFunc_GetActiveWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_GoToPage, CallFunc_GetActiveWidget_ReturnValue_1) == 0x000010, "Member 'WBP_GameMenu_Page_Equipment_C_GoToPage::CallFunc_GetActiveWidget_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_GoToPage, CallFunc_GetEquipmentSlotForEntryHolder_EquipSlot) == 0x000018, "Member 'WBP_GameMenu_Page_Equipment_C_GoToPage::CallFunc_GetEquipmentSlotForEntryHolder_EquipSlot' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_GoToPage, K2Node_DynamicCast_AsPanel_Widget) == 0x000020, "Member 'WBP_GameMenu_Page_Equipment_C_GoToPage::K2Node_DynamicCast_AsPanel_Widget' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_GoToPage, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WBP_GameMenu_Page_Equipment_C_GoToPage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_GoToPage, CallFunc_GetChildrenCount_ReturnValue) == 0x00002C, "Member 'WBP_GameMenu_Page_Equipment_C_GoToPage::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_GoToPage, CallFunc_GetChildAt_ReturnValue) == 0x000030, "Member 'WBP_GameMenu_Page_Equipment_C_GoToPage::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_GoToPage, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'WBP_GameMenu_Page_Equipment_C_GoToPage::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_GoToPage, CallFunc_GetActiveWidgetIndex_ReturnValue) == 0x00003C, "Member 'WBP_GameMenu_Page_Equipment_C_GoToPage::CallFunc_GetActiveWidgetIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_GoToPage, CallFunc_GetChildrenCount_ReturnValue_1) == 0x000040, "Member 'WBP_GameMenu_Page_Equipment_C_GoToPage::CallFunc_GetChildrenCount_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_GoToPage, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'WBP_GameMenu_Page_Equipment_C_GoToPage::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_GoToPage, CallFunc_Subtract_IntInt_ReturnValue) == 0x000048, "Member 'WBP_GameMenu_Page_Equipment_C_GoToPage::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_GoToPage, CallFunc_LoopAround_ReturnValue) == 0x00004C, "Member 'WBP_GameMenu_Page_Equipment_C_GoToPage::CallFunc_LoopAround_ReturnValue' has a wrong offset!");

// Function WBP_GameMenu_Page_Equipment.WBP_GameMenu_Page_Equipment_C.IsInEquipmentSelection
// 0x0004 (0x0004 - 0x0000)
struct WBP_GameMenu_Page_Equipment_C_IsInEquipmentSelection final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Equipment_C_IsInEquipmentSelection) == 0x000001, "Wrong alignment on WBP_GameMenu_Page_Equipment_C_IsInEquipmentSelection");
static_assert(sizeof(WBP_GameMenu_Page_Equipment_C_IsInEquipmentSelection) == 0x000004, "Wrong size on WBP_GameMenu_Page_Equipment_C_IsInEquipmentSelection");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_IsInEquipmentSelection, ReturnValue) == 0x000000, "Member 'WBP_GameMenu_Page_Equipment_C_IsInEquipmentSelection::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_IsInEquipmentSelection, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'WBP_GameMenu_Page_Equipment_C_IsInEquipmentSelection::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_IsInEquipmentSelection, CallFunc_IsValid_ReturnValue_1) == 0x000002, "Member 'WBP_GameMenu_Page_Equipment_C_IsInEquipmentSelection::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_IsInEquipmentSelection, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'WBP_GameMenu_Page_Equipment_C_IsInEquipmentSelection::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WBP_GameMenu_Page_Equipment.WBP_GameMenu_Page_Equipment_C.Nav_ToEquipmentList
// 0x0078 (0x0078 - 0x0000)
struct WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentList final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetActiveWidget_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUniformGridPanelZion*                  K2Node_DynamicCast_AsUniform_Grid_Panel_Zion;      // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetActiveWidget_ReturnValue_1;            // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetElementCountPerRow_ReturnValue;        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelWidget*                           K2Node_DynamicCast_AsPanel_Widget;                 // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue_1;                 // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue_1;           // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentList) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentList");
static_assert(sizeof(WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentList) == 0x000078, "Wrong size on WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentList");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentList, Navigation_0) == 0x000000, "Member 'WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentList::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentList, ReturnValue) == 0x000008, "Member 'WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentList::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentList, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentList::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentList, CallFunc_GetActiveWidget_ReturnValue) == 0x000018, "Member 'WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentList::CallFunc_GetActiveWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentList, K2Node_DynamicCast_AsUniform_Grid_Panel_Zion) == 0x000020, "Member 'WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentList::K2Node_DynamicCast_AsUniform_Grid_Panel_Zion' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentList, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentList::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentList, CallFunc_GetActiveWidget_ReturnValue_1) == 0x000030, "Member 'WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentList::CallFunc_GetActiveWidget_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentList, CallFunc_GetElementCountPerRow_ReturnValue) == 0x000038, "Member 'WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentList::CallFunc_GetElementCountPerRow_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentList, K2Node_DynamicCast_AsPanel_Widget) == 0x000040, "Member 'WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentList::K2Node_DynamicCast_AsPanel_Widget' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentList, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentList::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentList, CallFunc_GetChildrenCount_ReturnValue) == 0x00004C, "Member 'WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentList::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentList, CallFunc_GetChildAt_ReturnValue) == 0x000050, "Member 'WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentList::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentList, CallFunc_Subtract_IntInt_ReturnValue) == 0x000058, "Member 'WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentList::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentList, CallFunc_Percent_IntInt_ReturnValue) == 0x00005C, "Member 'WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentList::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentList, CallFunc_Greater_IntInt_ReturnValue) == 0x000060, "Member 'WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentList::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentList, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000064, "Member 'WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentList::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentList, CallFunc_GetChildAt_ReturnValue_1) == 0x000068, "Member 'WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentList::CallFunc_GetChildAt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentList, CallFunc_GetChildrenCount_ReturnValue_1) == 0x000070, "Member 'WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentList::CallFunc_GetChildrenCount_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentList, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000074, "Member 'WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentList::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");

// Function WBP_GameMenu_Page_Equipment.WBP_GameMenu_Page_Equipment_C.Nav_ToEquipmentSlot
// 0x0020 (0x0020 - 0x0000)
struct WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentSlot final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetActiveWidget_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_EquipSlot_C*                       CallFunc_GetEquipmentSlotForEntryHolder_EquipSlot; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentSlot) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentSlot");
static_assert(sizeof(WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentSlot) == 0x000020, "Wrong size on WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentSlot");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentSlot, Navigation_0) == 0x000000, "Member 'WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentSlot::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentSlot, ReturnValue) == 0x000008, "Member 'WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentSlot::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentSlot, CallFunc_GetActiveWidget_ReturnValue) == 0x000010, "Member 'WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentSlot::CallFunc_GetActiveWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentSlot, CallFunc_GetEquipmentSlotForEntryHolder_EquipSlot) == 0x000018, "Member 'WBP_GameMenu_Page_Equipment_C_Nav_ToEquipmentSlot::CallFunc_GetEquipmentSlotForEntryHolder_EquipSlot' has a wrong offset!");

// Function WBP_GameMenu_Page_Equipment.WBP_GameMenu_Page_Equipment_C.OnEquipmentEntryFocused
// 0x0008 (0x0008 - 0x0000)
struct WBP_GameMenu_Page_Equipment_C_OnEquipmentEntryFocused final
{
public:
	class UWBP_EquipmentEntry_C*                  EquipmentEntry;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Equipment_C_OnEquipmentEntryFocused) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Equipment_C_OnEquipmentEntryFocused");
static_assert(sizeof(WBP_GameMenu_Page_Equipment_C_OnEquipmentEntryFocused) == 0x000008, "Wrong size on WBP_GameMenu_Page_Equipment_C_OnEquipmentEntryFocused");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_OnEquipmentEntryFocused, EquipmentEntry) == 0x000000, "Member 'WBP_GameMenu_Page_Equipment_C_OnEquipmentEntryFocused::EquipmentEntry' has a wrong offset!");

// Function WBP_GameMenu_Page_Equipment.WBP_GameMenu_Page_Equipment_C.OnEquipmentEntryPressed
// 0x0008 (0x0008 - 0x0000)
struct WBP_GameMenu_Page_Equipment_C_OnEquipmentEntryPressed final
{
public:
	class UWBP_EquipmentEntry_C*                  EquipmentEntry;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Equipment_C_OnEquipmentEntryPressed) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Equipment_C_OnEquipmentEntryPressed");
static_assert(sizeof(WBP_GameMenu_Page_Equipment_C_OnEquipmentEntryPressed) == 0x000008, "Wrong size on WBP_GameMenu_Page_Equipment_C_OnEquipmentEntryPressed");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_OnEquipmentEntryPressed, EquipmentEntry) == 0x000000, "Member 'WBP_GameMenu_Page_Equipment_C_OnEquipmentEntryPressed::EquipmentEntry' has a wrong offset!");

// Function WBP_GameMenu_Page_Equipment.WBP_GameMenu_Page_Equipment_C.OnFocusReceived
// 0x01B0 (0x01B0 - 0x0000)
struct WBP_GameMenu_Page_Equipment_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x00F8(0x00B8)()
};
static_assert(alignof(WBP_GameMenu_Page_Equipment_C_OnFocusReceived) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Equipment_C_OnFocusReceived");
static_assert(sizeof(WBP_GameMenu_Page_Equipment_C_OnFocusReceived) == 0x0001B0, "Wrong size on WBP_GameMenu_Page_Equipment_C_OnFocusReceived");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'WBP_GameMenu_Page_Equipment_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'WBP_GameMenu_Page_Equipment_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'WBP_GameMenu_Page_Equipment_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_OnFocusReceived, CallFunc_Handled_ReturnValue) == 0x0000F8, "Member 'WBP_GameMenu_Page_Equipment_C_OnFocusReceived::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function WBP_GameMenu_Page_Equipment.WBP_GameMenu_Page_Equipment_C.OnPressCancel
// 0x0278 (0x0278 - 0x0000)
struct WBP_GameMenu_Page_Equipment_C_OnPressCancel final
{
public:
	struct FKeyEvent                              KeyEvent;                                          // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInEquipmentSelection_ReturnValue;       // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FB[0x5];                                       // 0x00FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default;                             // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0108(0x00B8)()
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x01C0(0x00B8)()
};
static_assert(alignof(WBP_GameMenu_Page_Equipment_C_OnPressCancel) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Equipment_C_OnPressCancel");
static_assert(sizeof(WBP_GameMenu_Page_Equipment_C_OnPressCancel) == 0x000278, "Wrong size on WBP_GameMenu_Page_Equipment_C_OnPressCancel");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_OnPressCancel, KeyEvent) == 0x000000, "Member 'WBP_GameMenu_Page_Equipment_C_OnPressCancel::KeyEvent' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_OnPressCancel, ReturnValue) == 0x000040, "Member 'WBP_GameMenu_Page_Equipment_C_OnPressCancel::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_OnPressCancel, Temp_bool_Variable) == 0x0000F8, "Member 'WBP_GameMenu_Page_Equipment_C_OnPressCancel::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_OnPressCancel, CallFunc_IsValid_ReturnValue) == 0x0000F9, "Member 'WBP_GameMenu_Page_Equipment_C_OnPressCancel::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_OnPressCancel, CallFunc_IsInEquipmentSelection_ReturnValue) == 0x0000FA, "Member 'WBP_GameMenu_Page_Equipment_C_OnPressCancel::CallFunc_IsInEquipmentSelection_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_OnPressCancel, K2Node_Select_Default) == 0x000100, "Member 'WBP_GameMenu_Page_Equipment_C_OnPressCancel::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_OnPressCancel, CallFunc_Unhandled_ReturnValue) == 0x000108, "Member 'WBP_GameMenu_Page_Equipment_C_OnPressCancel::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_OnPressCancel, CallFunc_Handled_ReturnValue) == 0x0001C0, "Member 'WBP_GameMenu_Page_Equipment_C_OnPressCancel::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function WBP_GameMenu_Page_Equipment.WBP_GameMenu_Page_Equipment_C.OnPressContext
// 0x0270 (0x0270 - 0x0000)
struct WBP_GameMenu_Page_Equipment_C_OnPressContext final
{
public:
	struct FKeyEvent                              KeyEvent;                                          // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x00F8(0x00B8)()
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x01B0(0x00B8)()
	bool                                          CallFunc_IsInEquipmentSelection_ReturnValue;       // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanSwitchEquipment_ReturnValue;           // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x026A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x026B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Equipment_C_OnPressContext) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Equipment_C_OnPressContext");
static_assert(sizeof(WBP_GameMenu_Page_Equipment_C_OnPressContext) == 0x000270, "Wrong size on WBP_GameMenu_Page_Equipment_C_OnPressContext");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_OnPressContext, KeyEvent) == 0x000000, "Member 'WBP_GameMenu_Page_Equipment_C_OnPressContext::KeyEvent' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_OnPressContext, ReturnValue) == 0x000040, "Member 'WBP_GameMenu_Page_Equipment_C_OnPressContext::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_OnPressContext, CallFunc_Unhandled_ReturnValue) == 0x0000F8, "Member 'WBP_GameMenu_Page_Equipment_C_OnPressContext::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_OnPressContext, CallFunc_Handled_ReturnValue) == 0x0001B0, "Member 'WBP_GameMenu_Page_Equipment_C_OnPressContext::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_OnPressContext, CallFunc_IsInEquipmentSelection_ReturnValue) == 0x000268, "Member 'WBP_GameMenu_Page_Equipment_C_OnPressContext::CallFunc_IsInEquipmentSelection_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_OnPressContext, CallFunc_CanSwitchEquipment_ReturnValue) == 0x000269, "Member 'WBP_GameMenu_Page_Equipment_C_OnPressContext::CallFunc_CanSwitchEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_OnPressContext, CallFunc_Not_PreBool_ReturnValue) == 0x00026A, "Member 'WBP_GameMenu_Page_Equipment_C_OnPressContext::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_OnPressContext, CallFunc_BooleanAND_ReturnValue) == 0x00026B, "Member 'WBP_GameMenu_Page_Equipment_C_OnPressContext::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_GameMenu_Page_Equipment.WBP_GameMenu_Page_Equipment_C.OnPressedTab
// 0x0048 (0x0048 - 0x0000)
struct WBP_GameMenu_Page_Equipment_C_OnPressedTab final
{
public:
	struct FKeyEvent                              KeyEvent;                                          // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UWBP_Button_Tab_C*                      PressedButtonTab;                                  // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Equipment_C_OnPressedTab) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Equipment_C_OnPressedTab");
static_assert(sizeof(WBP_GameMenu_Page_Equipment_C_OnPressedTab) == 0x000048, "Wrong size on WBP_GameMenu_Page_Equipment_C_OnPressedTab");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_OnPressedTab, KeyEvent) == 0x000000, "Member 'WBP_GameMenu_Page_Equipment_C_OnPressedTab::KeyEvent' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_OnPressedTab, PressedButtonTab) == 0x000040, "Member 'WBP_GameMenu_Page_Equipment_C_OnPressedTab::PressedButtonTab' has a wrong offset!");

// Function WBP_GameMenu_Page_Equipment.WBP_GameMenu_Page_Equipment_C.OnPressNextAlt
// 0x01C8 (0x01C8 - 0x0000)
struct WBP_GameMenu_Page_Equipment_C_OnPressNextAlt final
{
public:
	struct FKeyEvent                              KeyEvent;                                          // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_CanChangeLoadout_bCanChange;              // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNextEntryIndex_NextIndex;              // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInEquipmentSelection_ReturnValue;       // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0108(0x00B8)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Equipment_C_OnPressNextAlt) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Equipment_C_OnPressNextAlt");
static_assert(sizeof(WBP_GameMenu_Page_Equipment_C_OnPressNextAlt) == 0x0001C8, "Wrong size on WBP_GameMenu_Page_Equipment_C_OnPressNextAlt");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_OnPressNextAlt, KeyEvent) == 0x000000, "Member 'WBP_GameMenu_Page_Equipment_C_OnPressNextAlt::KeyEvent' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_OnPressNextAlt, ReturnValue) == 0x000040, "Member 'WBP_GameMenu_Page_Equipment_C_OnPressNextAlt::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_OnPressNextAlt, CallFunc_CanChangeLoadout_bCanChange) == 0x0000F8, "Member 'WBP_GameMenu_Page_Equipment_C_OnPressNextAlt::CallFunc_CanChangeLoadout_bCanChange' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_OnPressNextAlt, CallFunc_GetNextEntryIndex_NextIndex) == 0x0000FC, "Member 'WBP_GameMenu_Page_Equipment_C_OnPressNextAlt::CallFunc_GetNextEntryIndex_NextIndex' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_OnPressNextAlt, CallFunc_IsInEquipmentSelection_ReturnValue) == 0x000100, "Member 'WBP_GameMenu_Page_Equipment_C_OnPressNextAlt::CallFunc_IsInEquipmentSelection_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_OnPressNextAlt, CallFunc_Handled_ReturnValue) == 0x000108, "Member 'WBP_GameMenu_Page_Equipment_C_OnPressNextAlt::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_OnPressNextAlt, CallFunc_Not_PreBool_ReturnValue) == 0x0001C0, "Member 'WBP_GameMenu_Page_Equipment_C_OnPressNextAlt::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WBP_GameMenu_Page_Equipment.WBP_GameMenu_Page_Equipment_C.OnPressPreviousAlt
// 0x01C8 (0x01C8 - 0x0000)
struct WBP_GameMenu_Page_Equipment_C_OnPressPreviousAlt final
{
public:
	struct FKeyEvent                              KeyEvent;                                          // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_CanChangeLoadout_bCanChange;              // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPreviousEntryIndex_NextIndex;          // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInEquipmentSelection_ReturnValue;       // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0108(0x00B8)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Equipment_C_OnPressPreviousAlt) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Equipment_C_OnPressPreviousAlt");
static_assert(sizeof(WBP_GameMenu_Page_Equipment_C_OnPressPreviousAlt) == 0x0001C8, "Wrong size on WBP_GameMenu_Page_Equipment_C_OnPressPreviousAlt");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_OnPressPreviousAlt, KeyEvent) == 0x000000, "Member 'WBP_GameMenu_Page_Equipment_C_OnPressPreviousAlt::KeyEvent' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_OnPressPreviousAlt, ReturnValue) == 0x000040, "Member 'WBP_GameMenu_Page_Equipment_C_OnPressPreviousAlt::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_OnPressPreviousAlt, CallFunc_CanChangeLoadout_bCanChange) == 0x0000F8, "Member 'WBP_GameMenu_Page_Equipment_C_OnPressPreviousAlt::CallFunc_CanChangeLoadout_bCanChange' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_OnPressPreviousAlt, CallFunc_GetPreviousEntryIndex_NextIndex) == 0x0000FC, "Member 'WBP_GameMenu_Page_Equipment_C_OnPressPreviousAlt::CallFunc_GetPreviousEntryIndex_NextIndex' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_OnPressPreviousAlt, CallFunc_IsInEquipmentSelection_ReturnValue) == 0x000100, "Member 'WBP_GameMenu_Page_Equipment_C_OnPressPreviousAlt::CallFunc_IsInEquipmentSelection_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_OnPressPreviousAlt, CallFunc_Handled_ReturnValue) == 0x000108, "Member 'WBP_GameMenu_Page_Equipment_C_OnPressPreviousAlt::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_OnPressPreviousAlt, CallFunc_Not_PreBool_ReturnValue) == 0x0001C0, "Member 'WBP_GameMenu_Page_Equipment_C_OnPressPreviousAlt::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WBP_GameMenu_Page_Equipment.WBP_GameMenu_Page_Equipment_C.OnSlotEntryFocused
// 0x0008 (0x0008 - 0x0000)
struct WBP_GameMenu_Page_Equipment_C_OnSlotEntryFocused final
{
public:
	class UWBP_EquipSlot_C*                       SlotEntry;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Equipment_C_OnSlotEntryFocused) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Equipment_C_OnSlotEntryFocused");
static_assert(sizeof(WBP_GameMenu_Page_Equipment_C_OnSlotEntryFocused) == 0x000008, "Wrong size on WBP_GameMenu_Page_Equipment_C_OnSlotEntryFocused");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_OnSlotEntryFocused, SlotEntry) == 0x000000, "Member 'WBP_GameMenu_Page_Equipment_C_OnSlotEntryFocused::SlotEntry' has a wrong offset!");

// Function WBP_GameMenu_Page_Equipment.WBP_GameMenu_Page_Equipment_C.OnSlotEntryPressed
// 0x0008 (0x0008 - 0x0000)
struct WBP_GameMenu_Page_Equipment_C_OnSlotEntryPressed final
{
public:
	class UWBP_EquipSlot_C*                       SlotEntry;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Equipment_C_OnSlotEntryPressed) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Equipment_C_OnSlotEntryPressed");
static_assert(sizeof(WBP_GameMenu_Page_Equipment_C_OnSlotEntryPressed) == 0x000008, "Wrong size on WBP_GameMenu_Page_Equipment_C_OnSlotEntryPressed");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_OnSlotEntryPressed, SlotEntry) == 0x000000, "Member 'WBP_GameMenu_Page_Equipment_C_OnSlotEntryPressed::SlotEntry' has a wrong offset!");

// Function WBP_GameMenu_Page_Equipment.WBP_GameMenu_Page_Equipment_C.RefreshEquippedVisibility
// 0x0060 (0x0060 - 0x0000)
struct WBP_GameMenu_Page_Equipment_C_RefreshEquippedVisibility final
{
public:
	class UWBP_EquipSlot_C*                       EquipmentSlot;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUniformGridPanelZion*                  CallFunc_GetEntryHolderForSlotEntry_ReturnValue;   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_EquipmentEntry_C*                  K2Node_DynamicCast_AsWBP_Equipment_Entry;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetAssistID_ReturnValue;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipped_ReturnValue;                   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Equipment_C_RefreshEquippedVisibility) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Equipment_C_RefreshEquippedVisibility");
static_assert(sizeof(WBP_GameMenu_Page_Equipment_C_RefreshEquippedVisibility) == 0x000060, "Wrong size on WBP_GameMenu_Page_Equipment_C_RefreshEquippedVisibility");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_RefreshEquippedVisibility, EquipmentSlot) == 0x000000, "Member 'WBP_GameMenu_Page_Equipment_C_RefreshEquippedVisibility::EquipmentSlot' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_RefreshEquippedVisibility, CallFunc_GetEntryHolderForSlotEntry_ReturnValue) == 0x000008, "Member 'WBP_GameMenu_Page_Equipment_C_RefreshEquippedVisibility::CallFunc_GetEntryHolderForSlotEntry_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_RefreshEquippedVisibility, Temp_int_Array_Index_Variable) == 0x000010, "Member 'WBP_GameMenu_Page_Equipment_C_RefreshEquippedVisibility::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_RefreshEquippedVisibility, CallFunc_GetAllChildren_ReturnValue) == 0x000018, "Member 'WBP_GameMenu_Page_Equipment_C_RefreshEquippedVisibility::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_RefreshEquippedVisibility, CallFunc_Array_Get_Item) == 0x000028, "Member 'WBP_GameMenu_Page_Equipment_C_RefreshEquippedVisibility::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_RefreshEquippedVisibility, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'WBP_GameMenu_Page_Equipment_C_RefreshEquippedVisibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_RefreshEquippedVisibility, K2Node_DynamicCast_AsWBP_Equipment_Entry) == 0x000038, "Member 'WBP_GameMenu_Page_Equipment_C_RefreshEquippedVisibility::K2Node_DynamicCast_AsWBP_Equipment_Entry' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_RefreshEquippedVisibility, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WBP_GameMenu_Page_Equipment_C_RefreshEquippedVisibility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_RefreshEquippedVisibility, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'WBP_GameMenu_Page_Equipment_C_RefreshEquippedVisibility::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_RefreshEquippedVisibility, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'WBP_GameMenu_Page_Equipment_C_RefreshEquippedVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_RefreshEquippedVisibility, CallFunc_Less_IntInt_ReturnValue) == 0x000049, "Member 'WBP_GameMenu_Page_Equipment_C_RefreshEquippedVisibility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_RefreshEquippedVisibility, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'WBP_GameMenu_Page_Equipment_C_RefreshEquippedVisibility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_RefreshEquippedVisibility, CallFunc_GetAssistID_ReturnValue) == 0x000050, "Member 'WBP_GameMenu_Page_Equipment_C_RefreshEquippedVisibility::CallFunc_GetAssistID_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_RefreshEquippedVisibility, CallFunc_IsEquipped_ReturnValue) == 0x000058, "Member 'WBP_GameMenu_Page_Equipment_C_RefreshEquippedVisibility::CallFunc_IsEquipped_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_RefreshEquippedVisibility, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000059, "Member 'WBP_GameMenu_Page_Equipment_C_RefreshEquippedVisibility::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_RefreshEquippedVisibility, CallFunc_BooleanOR_ReturnValue) == 0x00005A, "Member 'WBP_GameMenu_Page_Equipment_C_RefreshEquippedVisibility::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_RefreshEquippedVisibility, CallFunc_BooleanAND_ReturnValue) == 0x00005B, "Member 'WBP_GameMenu_Page_Equipment_C_RefreshEquippedVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_GameMenu_Page_Equipment.WBP_GameMenu_Page_Equipment_C.RefreshLoadoutVisibility
// 0x0001 (0x0001 - 0x0000)
struct WBP_GameMenu_Page_Equipment_C_RefreshLoadoutVisibility final
{
public:
	bool                                          CallFunc_CanChangeLoadout_bCanChange;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Equipment_C_RefreshLoadoutVisibility) == 0x000001, "Wrong alignment on WBP_GameMenu_Page_Equipment_C_RefreshLoadoutVisibility");
static_assert(sizeof(WBP_GameMenu_Page_Equipment_C_RefreshLoadoutVisibility) == 0x000001, "Wrong size on WBP_GameMenu_Page_Equipment_C_RefreshLoadoutVisibility");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_RefreshLoadoutVisibility, CallFunc_CanChangeLoadout_bCanChange) == 0x000000, "Member 'WBP_GameMenu_Page_Equipment_C_RefreshLoadoutVisibility::CallFunc_CanChangeLoadout_bCanChange' has a wrong offset!");

// Function WBP_GameMenu_Page_Equipment.WBP_GameMenu_Page_Equipment_C.RefreshStatsTextsForEquipmentEntry
// 0x0030 (0x0030 - 0x0000)
struct WBP_GameMenu_Page_Equipment_C_RefreshStatsTextsForEquipmentEntry final
{
public:
	class UWBP_EquipmentEntry_C*                  EquipmentEntry;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_EquipSlot_NewAssist_C*             K2Node_DynamicCast_AsWBP_Equip_Slot_New_Assist;    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_EquipSlot_Equipment_C*             K2Node_DynamicCast_AsWBP_Equip_Slot_Equipment;     // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Equipment_C_RefreshStatsTextsForEquipmentEntry) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Equipment_C_RefreshStatsTextsForEquipmentEntry");
static_assert(sizeof(WBP_GameMenu_Page_Equipment_C_RefreshStatsTextsForEquipmentEntry) == 0x000030, "Wrong size on WBP_GameMenu_Page_Equipment_C_RefreshStatsTextsForEquipmentEntry");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_RefreshStatsTextsForEquipmentEntry, EquipmentEntry) == 0x000000, "Member 'WBP_GameMenu_Page_Equipment_C_RefreshStatsTextsForEquipmentEntry::EquipmentEntry' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_RefreshStatsTextsForEquipmentEntry, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_GameMenu_Page_Equipment_C_RefreshStatsTextsForEquipmentEntry::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_RefreshStatsTextsForEquipmentEntry, K2Node_DynamicCast_AsWBP_Equip_Slot_New_Assist) == 0x000010, "Member 'WBP_GameMenu_Page_Equipment_C_RefreshStatsTextsForEquipmentEntry::K2Node_DynamicCast_AsWBP_Equip_Slot_New_Assist' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_RefreshStatsTextsForEquipmentEntry, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_GameMenu_Page_Equipment_C_RefreshStatsTextsForEquipmentEntry::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_RefreshStatsTextsForEquipmentEntry, K2Node_DynamicCast_AsWBP_Equip_Slot_Equipment) == 0x000020, "Member 'WBP_GameMenu_Page_Equipment_C_RefreshStatsTextsForEquipmentEntry::K2Node_DynamicCast_AsWBP_Equip_Slot_Equipment' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_RefreshStatsTextsForEquipmentEntry, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'WBP_GameMenu_Page_Equipment_C_RefreshStatsTextsForEquipmentEntry::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_RefreshStatsTextsForEquipmentEntry, CallFunc_IsValid_ReturnValue_1) == 0x000029, "Member 'WBP_GameMenu_Page_Equipment_C_RefreshStatsTextsForEquipmentEntry::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function WBP_GameMenu_Page_Equipment.WBP_GameMenu_Page_Equipment_C.RefreshTabButtonVisibility
// 0x000C (0x000C - 0x0000)
struct WBP_GameMenu_Page_Equipment_C_RefreshTabButtonVisibility final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanSwitchEquipment_ReturnValue;           // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInEquipmentSelection_ReturnValue;       // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Equipment_C_RefreshTabButtonVisibility) == 0x000001, "Wrong alignment on WBP_GameMenu_Page_Equipment_C_RefreshTabButtonVisibility");
static_assert(sizeof(WBP_GameMenu_Page_Equipment_C_RefreshTabButtonVisibility) == 0x00000C, "Wrong size on WBP_GameMenu_Page_Equipment_C_RefreshTabButtonVisibility");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_RefreshTabButtonVisibility, Temp_bool_Variable) == 0x000000, "Member 'WBP_GameMenu_Page_Equipment_C_RefreshTabButtonVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_RefreshTabButtonVisibility, Temp_byte_Variable) == 0x000001, "Member 'WBP_GameMenu_Page_Equipment_C_RefreshTabButtonVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_RefreshTabButtonVisibility, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_GameMenu_Page_Equipment_C_RefreshTabButtonVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_RefreshTabButtonVisibility, CallFunc_CanSwitchEquipment_ReturnValue) == 0x000003, "Member 'WBP_GameMenu_Page_Equipment_C_RefreshTabButtonVisibility::CallFunc_CanSwitchEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_RefreshTabButtonVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'WBP_GameMenu_Page_Equipment_C_RefreshTabButtonVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_RefreshTabButtonVisibility, CallFunc_IsValid_ReturnValue) == 0x000005, "Member 'WBP_GameMenu_Page_Equipment_C_RefreshTabButtonVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_RefreshTabButtonVisibility, CallFunc_IsInEquipmentSelection_ReturnValue) == 0x000006, "Member 'WBP_GameMenu_Page_Equipment_C_RefreshTabButtonVisibility::CallFunc_IsInEquipmentSelection_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_RefreshTabButtonVisibility, CallFunc_Not_PreBool_ReturnValue_1) == 0x000007, "Member 'WBP_GameMenu_Page_Equipment_C_RefreshTabButtonVisibility::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_RefreshTabButtonVisibility, CallFunc_Not_PreBool_ReturnValue_2) == 0x000008, "Member 'WBP_GameMenu_Page_Equipment_C_RefreshTabButtonVisibility::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_RefreshTabButtonVisibility, CallFunc_BooleanAND_ReturnValue) == 0x000009, "Member 'WBP_GameMenu_Page_Equipment_C_RefreshTabButtonVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_RefreshTabButtonVisibility, CallFunc_BooleanOR_ReturnValue) == 0x00000A, "Member 'WBP_GameMenu_Page_Equipment_C_RefreshTabButtonVisibility::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_RefreshTabButtonVisibility, K2Node_Select_Default) == 0x00000B, "Member 'WBP_GameMenu_Page_Equipment_C_RefreshTabButtonVisibility::K2Node_Select_Default' has a wrong offset!");

// Function WBP_GameMenu_Page_Equipment.WBP_GameMenu_Page_Equipment_C.SetLockVisibility
// 0x0005 (0x0005 - 0x0000)
struct WBP_GameMenu_Page_Equipment_C_SetLockVisibility final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanSwitchEquipment_ReturnValue;           // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Equipment_C_SetLockVisibility) == 0x000001, "Wrong alignment on WBP_GameMenu_Page_Equipment_C_SetLockVisibility");
static_assert(sizeof(WBP_GameMenu_Page_Equipment_C_SetLockVisibility) == 0x000005, "Wrong size on WBP_GameMenu_Page_Equipment_C_SetLockVisibility");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_SetLockVisibility, Temp_bool_Variable) == 0x000000, "Member 'WBP_GameMenu_Page_Equipment_C_SetLockVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_SetLockVisibility, Temp_byte_Variable) == 0x000001, "Member 'WBP_GameMenu_Page_Equipment_C_SetLockVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_SetLockVisibility, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_GameMenu_Page_Equipment_C_SetLockVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_SetLockVisibility, CallFunc_CanSwitchEquipment_ReturnValue) == 0x000003, "Member 'WBP_GameMenu_Page_Equipment_C_SetLockVisibility::CallFunc_CanSwitchEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_SetLockVisibility, K2Node_Select_Default) == 0x000004, "Member 'WBP_GameMenu_Page_Equipment_C_SetLockVisibility::K2Node_Select_Default' has a wrong offset!");

// Function WBP_GameMenu_Page_Equipment.WBP_GameMenu_Page_Equipment_C.SetupFooter
// 0x0058 (0x0058 - 0x0000)
struct WBP_GameMenu_Page_Equipment_C_SetupFooter final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidgetFooter*                      CallFunc_GetFooter_ReturnValue;                    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInEquipmentSelection_ReturnValue;       // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanSwitchEquipment_ReturnValue;           // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidgetFooter*                      CallFunc_GetFooter_ReturnValue_1;                  // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFooterData>                    CallFunc_GetDefaultFooterEntries_ReturnValue;      // 0x0020(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsInEquipmentSelection_ReturnValue_1;     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFooterData>                    K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FFooterData>                    K2Node_Select_Default;                             // 0x0048(0x0010)(ConstParm, ReferenceParm)
};
static_assert(alignof(WBP_GameMenu_Page_Equipment_C_SetupFooter) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Equipment_C_SetupFooter");
static_assert(sizeof(WBP_GameMenu_Page_Equipment_C_SetupFooter) == 0x000058, "Wrong size on WBP_GameMenu_Page_Equipment_C_SetupFooter");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_SetupFooter, Temp_bool_Variable) == 0x000000, "Member 'WBP_GameMenu_Page_Equipment_C_SetupFooter::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_SetupFooter, CallFunc_GetFooter_ReturnValue) == 0x000008, "Member 'WBP_GameMenu_Page_Equipment_C_SetupFooter::CallFunc_GetFooter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_SetupFooter, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_GameMenu_Page_Equipment_C_SetupFooter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_SetupFooter, CallFunc_IsInEquipmentSelection_ReturnValue) == 0x000011, "Member 'WBP_GameMenu_Page_Equipment_C_SetupFooter::CallFunc_IsInEquipmentSelection_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_SetupFooter, CallFunc_IsValid_ReturnValue_1) == 0x000012, "Member 'WBP_GameMenu_Page_Equipment_C_SetupFooter::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_SetupFooter, CallFunc_Not_PreBool_ReturnValue) == 0x000013, "Member 'WBP_GameMenu_Page_Equipment_C_SetupFooter::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_SetupFooter, CallFunc_CanSwitchEquipment_ReturnValue) == 0x000014, "Member 'WBP_GameMenu_Page_Equipment_C_SetupFooter::CallFunc_CanSwitchEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_SetupFooter, CallFunc_BooleanAND_ReturnValue) == 0x000015, "Member 'WBP_GameMenu_Page_Equipment_C_SetupFooter::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_SetupFooter, CallFunc_GetFooter_ReturnValue_1) == 0x000018, "Member 'WBP_GameMenu_Page_Equipment_C_SetupFooter::CallFunc_GetFooter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_SetupFooter, CallFunc_GetDefaultFooterEntries_ReturnValue) == 0x000020, "Member 'WBP_GameMenu_Page_Equipment_C_SetupFooter::CallFunc_GetDefaultFooterEntries_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_SetupFooter, CallFunc_IsInEquipmentSelection_ReturnValue_1) == 0x000030, "Member 'WBP_GameMenu_Page_Equipment_C_SetupFooter::CallFunc_IsInEquipmentSelection_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_SetupFooter, K2Node_MakeArray_Array) == 0x000038, "Member 'WBP_GameMenu_Page_Equipment_C_SetupFooter::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_SetupFooter, K2Node_Select_Default) == 0x000048, "Member 'WBP_GameMenu_Page_Equipment_C_SetupFooter::K2Node_Select_Default' has a wrong offset!");

// Function WBP_GameMenu_Page_Equipment.WBP_GameMenu_Page_Equipment_C.SetupTabs
// 0x0040 (0x0040 - 0x0000)
struct WBP_GameMenu_Page_Equipment_C_SetupTabs final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Button_Tab_C*                      CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWBP_Button_Tab_C*>              K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	TDelegate<void(const struct FKeyEvent& KeyEvent, class UWBP_Button_Tab_C* PressedButtonTab)> K2Node_CreateDelegate_OutputDelegate; // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Equipment_C_SetupTabs) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Equipment_C_SetupTabs");
static_assert(sizeof(WBP_GameMenu_Page_Equipment_C_SetupTabs) == 0x000040, "Wrong size on WBP_GameMenu_Page_Equipment_C_SetupTabs");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_SetupTabs, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_GameMenu_Page_Equipment_C_SetupTabs::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_SetupTabs, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_GameMenu_Page_Equipment_C_SetupTabs::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_SetupTabs, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_GameMenu_Page_Equipment_C_SetupTabs::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_SetupTabs, CallFunc_Array_Get_Item) == 0x000010, "Member 'WBP_GameMenu_Page_Equipment_C_SetupTabs::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_SetupTabs, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'WBP_GameMenu_Page_Equipment_C_SetupTabs::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_SetupTabs, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'WBP_GameMenu_Page_Equipment_C_SetupTabs::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_SetupTabs, K2Node_MakeArray_Array) == 0x000020, "Member 'WBP_GameMenu_Page_Equipment_C_SetupTabs::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_SetupTabs, K2Node_CreateDelegate_OutputDelegate) == 0x000030, "Member 'WBP_GameMenu_Page_Equipment_C_SetupTabs::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function WBP_GameMenu_Page_Equipment.WBP_GameMenu_Page_Equipment_C.ShowPage
// 0x0028 (0x0028 - 0x0000)
struct WBP_GameMenu_Page_Equipment_C_ShowPage final
{
public:
	int32                                         PageIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_Button_Tab_C*                      CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Equipment_C_ShowPage) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Equipment_C_ShowPage");
static_assert(sizeof(WBP_GameMenu_Page_Equipment_C_ShowPage) == 0x000028, "Wrong size on WBP_GameMenu_Page_Equipment_C_ShowPage");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_ShowPage, PageIndex) == 0x000000, "Member 'WBP_GameMenu_Page_Equipment_C_ShowPage::PageIndex' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_ShowPage, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WBP_GameMenu_Page_Equipment_C_ShowPage::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_ShowPage, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'WBP_GameMenu_Page_Equipment_C_ShowPage::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_ShowPage, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_GameMenu_Page_Equipment_C_ShowPage::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_ShowPage, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WBP_GameMenu_Page_Equipment_C_ShowPage::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_ShowPage, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'WBP_GameMenu_Page_Equipment_C_ShowPage::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_ShowPage, CallFunc_Array_Get_Item) == 0x000018, "Member 'WBP_GameMenu_Page_Equipment_C_ShowPage::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_ShowPage, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'WBP_GameMenu_Page_Equipment_C_ShowPage::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_GameMenu_Page_Equipment.WBP_GameMenu_Page_Equipment_C.UnequipFromEquipSlot
// 0x0028 (0x0028 - 0x0000)
struct WBP_GameMenu_Page_Equipment_C_UnequipFromEquipSlot final
{
public:
	class UWBP_EquipSlot_C*                       EquipSlot;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_EquipSlot_Equipment_C*             K2Node_DynamicCast_AsWBP_Equip_Slot_Equipment;     // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_EquipSlot_NewAssist_C*             K2Node_DynamicCast_AsWBP_Equip_Slot_New_Assist;    // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Equipment_C_UnequipFromEquipSlot) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Equipment_C_UnequipFromEquipSlot");
static_assert(sizeof(WBP_GameMenu_Page_Equipment_C_UnequipFromEquipSlot) == 0x000028, "Wrong size on WBP_GameMenu_Page_Equipment_C_UnequipFromEquipSlot");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_UnequipFromEquipSlot, EquipSlot) == 0x000000, "Member 'WBP_GameMenu_Page_Equipment_C_UnequipFromEquipSlot::EquipSlot' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_UnequipFromEquipSlot, K2Node_DynamicCast_AsWBP_Equip_Slot_Equipment) == 0x000008, "Member 'WBP_GameMenu_Page_Equipment_C_UnequipFromEquipSlot::K2Node_DynamicCast_AsWBP_Equip_Slot_Equipment' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_UnequipFromEquipSlot, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WBP_GameMenu_Page_Equipment_C_UnequipFromEquipSlot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_UnequipFromEquipSlot, K2Node_DynamicCast_AsWBP_Equip_Slot_New_Assist) == 0x000018, "Member 'WBP_GameMenu_Page_Equipment_C_UnequipFromEquipSlot::K2Node_DynamicCast_AsWBP_Equip_Slot_New_Assist' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_UnequipFromEquipSlot, K2Node_DynamicCast_bSuccess_1) == 0x000020, "Member 'WBP_GameMenu_Page_Equipment_C_UnequipFromEquipSlot::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_UnequipFromEquipSlot, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'WBP_GameMenu_Page_Equipment_C_UnequipFromEquipSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_UnequipFromEquipSlot, CallFunc_IsValid_ReturnValue_1) == 0x000022, "Member 'WBP_GameMenu_Page_Equipment_C_UnequipFromEquipSlot::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function WBP_GameMenu_Page_Equipment.WBP_GameMenu_Page_Equipment_C.UnequipIDFromAnySlot
// 0x0040 (0x0040 - 0x0000)
struct WBP_GameMenu_Page_Equipment_C_UnequipIDFromAnySlot final
{
public:
	class FName                                   EquipmentID;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_EquipSlot_C*                       CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_EquipSlot_Equipment_C*             K2Node_DynamicCast_AsWBP_Equip_Slot_Equipment;     // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetEquipmentIDFromSlot_ReturnValue;       // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Equipment_C_UnequipIDFromAnySlot) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Equipment_C_UnequipIDFromAnySlot");
static_assert(sizeof(WBP_GameMenu_Page_Equipment_C_UnequipIDFromAnySlot) == 0x000040, "Wrong size on WBP_GameMenu_Page_Equipment_C_UnequipIDFromAnySlot");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_UnequipIDFromAnySlot, EquipmentID) == 0x000000, "Member 'WBP_GameMenu_Page_Equipment_C_UnequipIDFromAnySlot::EquipmentID' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_UnequipIDFromAnySlot, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WBP_GameMenu_Page_Equipment_C_UnequipIDFromAnySlot::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_UnequipIDFromAnySlot, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'WBP_GameMenu_Page_Equipment_C_UnequipIDFromAnySlot::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_UnequipIDFromAnySlot, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WBP_GameMenu_Page_Equipment_C_UnequipIDFromAnySlot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_UnequipIDFromAnySlot, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'WBP_GameMenu_Page_Equipment_C_UnequipIDFromAnySlot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_UnequipIDFromAnySlot, CallFunc_Array_Get_Item) == 0x000018, "Member 'WBP_GameMenu_Page_Equipment_C_UnequipIDFromAnySlot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_UnequipIDFromAnySlot, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'WBP_GameMenu_Page_Equipment_C_UnequipIDFromAnySlot::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_UnequipIDFromAnySlot, K2Node_DynamicCast_AsWBP_Equip_Slot_Equipment) == 0x000028, "Member 'WBP_GameMenu_Page_Equipment_C_UnequipIDFromAnySlot::K2Node_DynamicCast_AsWBP_Equip_Slot_Equipment' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_UnequipIDFromAnySlot, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WBP_GameMenu_Page_Equipment_C_UnequipIDFromAnySlot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_UnequipIDFromAnySlot, CallFunc_GetEquipmentIDFromSlot_ReturnValue) == 0x000034, "Member 'WBP_GameMenu_Page_Equipment_C_UnequipIDFromAnySlot::CallFunc_GetEquipmentIDFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Equipment_C_UnequipIDFromAnySlot, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00003C, "Member 'WBP_GameMenu_Page_Equipment_C_UnequipIDFromAnySlot::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

}

