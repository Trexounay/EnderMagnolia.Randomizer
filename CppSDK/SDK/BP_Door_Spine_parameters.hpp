#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Door_Spine

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_Door_Spine.BP_Door_Spine_C.ExecuteUbergraph_BP_Door_Spine
// 0x0038 (0x0038 - 0x0000)
struct BP_Door_Spine_C_ExecuteUbergraph_BP_Door_Spine final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_RequestInstant_1;                     // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_RequestInstant;                       // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_1;                           // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UTrackEntry*                            CallFunc_SetAnimation_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTrackEntry*                            CallFunc_SetAnimation_ReturnValue_1;               // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_Spine_C_ExecuteUbergraph_BP_Door_Spine) == 0x000008, "Wrong alignment on BP_Door_Spine_C_ExecuteUbergraph_BP_Door_Spine");
static_assert(sizeof(BP_Door_Spine_C_ExecuteUbergraph_BP_Door_Spine) == 0x000038, "Wrong size on BP_Door_Spine_C_ExecuteUbergraph_BP_Door_Spine");
static_assert(offsetof(BP_Door_Spine_C_ExecuteUbergraph_BP_Door_Spine, EntryPoint) == 0x000000, "Member 'BP_Door_Spine_C_ExecuteUbergraph_BP_Door_Spine::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Door_Spine_C_ExecuteUbergraph_BP_Door_Spine, Temp_bool_Variable) == 0x000004, "Member 'BP_Door_Spine_C_ExecuteUbergraph_BP_Door_Spine::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Door_Spine_C_ExecuteUbergraph_BP_Door_Spine, Temp_bool_Variable_1) == 0x000005, "Member 'BP_Door_Spine_C_ExecuteUbergraph_BP_Door_Spine::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Door_Spine_C_ExecuteUbergraph_BP_Door_Spine, K2Node_Event_RequestInstant_1) == 0x000006, "Member 'BP_Door_Spine_C_ExecuteUbergraph_BP_Door_Spine::K2Node_Event_RequestInstant_1' has a wrong offset!");
static_assert(offsetof(BP_Door_Spine_C_ExecuteUbergraph_BP_Door_Spine, K2Node_Event_RequestInstant) == 0x000007, "Member 'BP_Door_Spine_C_ExecuteUbergraph_BP_Door_Spine::K2Node_Event_RequestInstant' has a wrong offset!");
static_assert(offsetof(BP_Door_Spine_C_ExecuteUbergraph_BP_Door_Spine, K2Node_Select_Default) == 0x000008, "Member 'BP_Door_Spine_C_ExecuteUbergraph_BP_Door_Spine::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Door_Spine_C_ExecuteUbergraph_BP_Door_Spine, K2Node_Select_Default_1) == 0x000018, "Member 'BP_Door_Spine_C_ExecuteUbergraph_BP_Door_Spine::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Door_Spine_C_ExecuteUbergraph_BP_Door_Spine, CallFunc_SetAnimation_ReturnValue) == 0x000028, "Member 'BP_Door_Spine_C_ExecuteUbergraph_BP_Door_Spine::CallFunc_SetAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_Spine_C_ExecuteUbergraph_BP_Door_Spine, CallFunc_SetAnimation_ReturnValue_1) == 0x000030, "Member 'BP_Door_Spine_C_ExecuteUbergraph_BP_Door_Spine::CallFunc_SetAnimation_ReturnValue_1' has a wrong offset!");

// Function BP_Door_Spine.BP_Door_Spine_C.OnClose
// 0x0001 (0x0001 - 0x0000)
struct BP_Door_Spine_C_OnClose final
{
public:
	bool                                          RequestInstant;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_Spine_C_OnClose) == 0x000001, "Wrong alignment on BP_Door_Spine_C_OnClose");
static_assert(sizeof(BP_Door_Spine_C_OnClose) == 0x000001, "Wrong size on BP_Door_Spine_C_OnClose");
static_assert(offsetof(BP_Door_Spine_C_OnClose, RequestInstant) == 0x000000, "Member 'BP_Door_Spine_C_OnClose::RequestInstant' has a wrong offset!");

// Function BP_Door_Spine.BP_Door_Spine_C.OnOpen
// 0x0001 (0x0001 - 0x0000)
struct BP_Door_Spine_C_OnOpen final
{
public:
	bool                                          RequestInstant;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_Spine_C_OnOpen) == 0x000001, "Wrong alignment on BP_Door_Spine_C_OnOpen");
static_assert(sizeof(BP_Door_Spine_C_OnOpen) == 0x000001, "Wrong size on BP_Door_Spine_C_OnOpen");
static_assert(offsetof(BP_Door_Spine_C_OnOpen, RequestInstant) == 0x000000, "Member 'BP_Door_Spine_C_OnOpen::RequestInstant' has a wrong offset!");

// Function BP_Door_Spine.BP_Door_Spine_C.UserConstructionScript
// 0x0018 (0x0018 - 0x0000)
struct BP_Door_Spine_C_UserConstructionScript final
{
public:
	struct FVector                                CallFunc_GetUnscaledBoxExtent_ReturnValue;         // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_Spine_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_Door_Spine_C_UserConstructionScript");
static_assert(sizeof(BP_Door_Spine_C_UserConstructionScript) == 0x000018, "Wrong size on BP_Door_Spine_C_UserConstructionScript");
static_assert(offsetof(BP_Door_Spine_C_UserConstructionScript, CallFunc_GetUnscaledBoxExtent_ReturnValue) == 0x000000, "Member 'BP_Door_Spine_C_UserConstructionScript::CallFunc_GetUnscaledBoxExtent_ReturnValue' has a wrong offset!");

}

