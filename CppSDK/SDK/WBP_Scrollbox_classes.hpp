#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Scrollbox

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "Zion_classes.hpp"
#include "Slate_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Scrollbox.WBP_Scrollbox_C
// 0x0040 (0x04A0 - 0x0460)
class UWBP_Scrollbox_C final : public UUserWidgetZion
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0460(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNamedSlot*                             Content;                                           // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URetainerBox*                           RetainerBox_218;                                   // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBoxZion*                         ScrollBoxZion;                                     // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FMargin                                ContentPadding;                                    // 0x0480(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor)
	EHorizontalAlignment                          ContentHorizontalAlignement;                       // 0x0490(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerticalAlignment                            ContentVerticalAlignement;                         // 0x0491(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EConsumeMouseWheel                            ConsumeMouseWheel;                                 // 0x0492(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_493[0x1];                                      // 0x0493(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ElementCountPerLine;                               // 0x0494(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrientation                                  NavigationOrientation;                             // 0x0498(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_Scrollbox(int32 EntryPoint);
	void OnChildFocused(class UNativeWidgetHost* FocusedWidgetHost, const struct FFocusEvent& FocusEvent);
	void PreConstruct(bool IsDesignTime);
	void ScrollToStart();
	void ScrollWidgetIntoView(class UWidget* WidgetToFind, bool AnimateScroll, EDescendantScrollDestination ScrollDestination, double Padding_0);
	void SetScrollNavigationCustomBoundary(EUINavigation Direction, TDelegate<void(EUINavigation Navigation)> InCustomDelegate);
	void SetScrollNavigationRuleBase(EUINavigation Direction, EUINavigationRule Rule);
	void SetupNavigation();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Scrollbox_C">();
	}
	static class UWBP_Scrollbox_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Scrollbox_C>();
	}
};
static_assert(alignof(UWBP_Scrollbox_C) == 0x000008, "Wrong alignment on UWBP_Scrollbox_C");
static_assert(sizeof(UWBP_Scrollbox_C) == 0x0004A0, "Wrong size on UWBP_Scrollbox_C");
static_assert(offsetof(UWBP_Scrollbox_C, UberGraphFrame) == 0x000460, "Member 'UWBP_Scrollbox_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Scrollbox_C, Content) == 0x000468, "Member 'UWBP_Scrollbox_C::Content' has a wrong offset!");
static_assert(offsetof(UWBP_Scrollbox_C, RetainerBox_218) == 0x000470, "Member 'UWBP_Scrollbox_C::RetainerBox_218' has a wrong offset!");
static_assert(offsetof(UWBP_Scrollbox_C, ScrollBoxZion) == 0x000478, "Member 'UWBP_Scrollbox_C::ScrollBoxZion' has a wrong offset!");
static_assert(offsetof(UWBP_Scrollbox_C, ContentPadding) == 0x000480, "Member 'UWBP_Scrollbox_C::ContentPadding' has a wrong offset!");
static_assert(offsetof(UWBP_Scrollbox_C, ContentHorizontalAlignement) == 0x000490, "Member 'UWBP_Scrollbox_C::ContentHorizontalAlignement' has a wrong offset!");
static_assert(offsetof(UWBP_Scrollbox_C, ContentVerticalAlignement) == 0x000491, "Member 'UWBP_Scrollbox_C::ContentVerticalAlignement' has a wrong offset!");
static_assert(offsetof(UWBP_Scrollbox_C, ConsumeMouseWheel) == 0x000492, "Member 'UWBP_Scrollbox_C::ConsumeMouseWheel' has a wrong offset!");
static_assert(offsetof(UWBP_Scrollbox_C, ElementCountPerLine) == 0x000494, "Member 'UWBP_Scrollbox_C::ElementCountPerLine' has a wrong offset!");
static_assert(offsetof(UWBP_Scrollbox_C, NavigationOrientation) == 0x000498, "Member 'UWBP_Scrollbox_C::NavigationOrientation' has a wrong offset!");

}

