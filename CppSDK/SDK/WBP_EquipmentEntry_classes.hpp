#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_EquipmentEntry

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Zion_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_EquipmentEntry.WBP_EquipmentEntry_C
// 0x0068 (0x04C8 - 0x0460)
class UWBP_EquipmentEntry_C final : public UUserWidgetZion
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0460(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UOverlay*                               Overlay_Equipped;                                  // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Selected;                                  // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Button_Item_C*                     WBP_Button_Item;                                   // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FDataTableRowHandle                    DataHandle;                                        // 0x0480(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, ExposeOnSpawn)
	TMulticastInlineDelegate<void(class UWBP_EquipmentEntry_C* EquipmentEntry)> OnPressed;           // 0x0490(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsEquipped;                                        // 0x04A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_4A1[0x7];                                      // 0x04A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class UWBP_EquipmentEntry_C* EquipmentEntry)> OnFocused;           // 0x04A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FText                                   FallbackText;                                      // 0x04B8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ExposeOnSpawn)

public:
	void BndEvt__WBP_EquipmentEntry_WBP_Button_Item_K2Node_ComponentBoundEvent_2_OnPressed__DelegateSignature(const struct FKeyEvent& KeyEvent, class UWBP_Button_Item_C* Item);
	void BndEvt__WBP_EquipmentEntry_WBP_Button_Item_K2Node_ComponentBoundEvent_3_OnFocused__DelegateSignature(class UWBP_Button_Item_C* Item);
	void Construct();
	void ExecuteUbergraph_WBP_EquipmentEntry(int32 EntryPoint);
	struct FEventReply OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent);
	void SetEquippedVisiblity(bool IsEquipped_0);
	void SetSelected(bool bSelected);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_EquipmentEntry_C">();
	}
	static class UWBP_EquipmentEntry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_EquipmentEntry_C>();
	}
};
static_assert(alignof(UWBP_EquipmentEntry_C) == 0x000008, "Wrong alignment on UWBP_EquipmentEntry_C");
static_assert(sizeof(UWBP_EquipmentEntry_C) == 0x0004C8, "Wrong size on UWBP_EquipmentEntry_C");
static_assert(offsetof(UWBP_EquipmentEntry_C, UberGraphFrame) == 0x000460, "Member 'UWBP_EquipmentEntry_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_EquipmentEntry_C, Overlay_Equipped) == 0x000468, "Member 'UWBP_EquipmentEntry_C::Overlay_Equipped' has a wrong offset!");
static_assert(offsetof(UWBP_EquipmentEntry_C, Overlay_Selected) == 0x000470, "Member 'UWBP_EquipmentEntry_C::Overlay_Selected' has a wrong offset!");
static_assert(offsetof(UWBP_EquipmentEntry_C, WBP_Button_Item) == 0x000478, "Member 'UWBP_EquipmentEntry_C::WBP_Button_Item' has a wrong offset!");
static_assert(offsetof(UWBP_EquipmentEntry_C, DataHandle) == 0x000480, "Member 'UWBP_EquipmentEntry_C::DataHandle' has a wrong offset!");
static_assert(offsetof(UWBP_EquipmentEntry_C, OnPressed) == 0x000490, "Member 'UWBP_EquipmentEntry_C::OnPressed' has a wrong offset!");
static_assert(offsetof(UWBP_EquipmentEntry_C, IsEquipped) == 0x0004A0, "Member 'UWBP_EquipmentEntry_C::IsEquipped' has a wrong offset!");
static_assert(offsetof(UWBP_EquipmentEntry_C, OnFocused) == 0x0004A8, "Member 'UWBP_EquipmentEntry_C::OnFocused' has a wrong offset!");
static_assert(offsetof(UWBP_EquipmentEntry_C, FallbackText) == 0x0004B8, "Member 'UWBP_EquipmentEntry_C::FallbackText' has a wrong offset!");

}

