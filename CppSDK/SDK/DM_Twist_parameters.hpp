#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DM_Twist

#include "Basic.hpp"

#include "Zion_structs.hpp"


namespace SDK::Params
{

// Function DM_Twist.DM_Twist_C.ToggleModule
// 0x0040 (0x0040 - 0x0000)
struct DM_Twist_C_ToggleModule final
{
public:
	EFaction                                      Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFaction                                      Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFaction                                      Temp_byte_Variable_2;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFaction                                      Temp_byte_Variable_3;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFaction                                      Temp_byte_Variable_4;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFaction                                      Temp_byte_Variable_5;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFaction                                      Temp_byte_Variable_6;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFaction                                      Temp_byte_Variable_7;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFaction                                      Temp_byte_Variable_8;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_CharacterZion_Boss_C*>       CallFunc_GetAllActorsOfClass_OutActors;            // 0x0018(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CharacterZion_Boss_C*               CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFaction                                      K2Node_Select_Default;                             // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DM_Twist_C_ToggleModule) == 0x000008, "Wrong alignment on DM_Twist_C_ToggleModule");
static_assert(sizeof(DM_Twist_C_ToggleModule) == 0x000040, "Wrong size on DM_Twist_C_ToggleModule");
static_assert(offsetof(DM_Twist_C_ToggleModule, Temp_byte_Variable) == 0x000000, "Member 'DM_Twist_C_ToggleModule::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(DM_Twist_C_ToggleModule, Temp_byte_Variable_1) == 0x000001, "Member 'DM_Twist_C_ToggleModule::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(DM_Twist_C_ToggleModule, Temp_byte_Variable_2) == 0x000002, "Member 'DM_Twist_C_ToggleModule::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(DM_Twist_C_ToggleModule, Temp_byte_Variable_3) == 0x000003, "Member 'DM_Twist_C_ToggleModule::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(DM_Twist_C_ToggleModule, Temp_byte_Variable_4) == 0x000004, "Member 'DM_Twist_C_ToggleModule::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(DM_Twist_C_ToggleModule, Temp_byte_Variable_5) == 0x000005, "Member 'DM_Twist_C_ToggleModule::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(DM_Twist_C_ToggleModule, Temp_byte_Variable_6) == 0x000006, "Member 'DM_Twist_C_ToggleModule::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(DM_Twist_C_ToggleModule, Temp_byte_Variable_7) == 0x000007, "Member 'DM_Twist_C_ToggleModule::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(DM_Twist_C_ToggleModule, Temp_byte_Variable_8) == 0x000008, "Member 'DM_Twist_C_ToggleModule::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(DM_Twist_C_ToggleModule, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'DM_Twist_C_ToggleModule::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(DM_Twist_C_ToggleModule, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'DM_Twist_C_ToggleModule::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(DM_Twist_C_ToggleModule, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'DM_Twist_C_ToggleModule::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DM_Twist_C_ToggleModule, CallFunc_GetAllActorsOfClass_OutActors) == 0x000018, "Member 'DM_Twist_C_ToggleModule::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(DM_Twist_C_ToggleModule, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'DM_Twist_C_ToggleModule::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DM_Twist_C_ToggleModule, CallFunc_Array_Get_Item) == 0x000030, "Member 'DM_Twist_C_ToggleModule::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DM_Twist_C_ToggleModule, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'DM_Twist_C_ToggleModule::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DM_Twist_C_ToggleModule, K2Node_Select_Default) == 0x000039, "Member 'DM_Twist_C_ToggleModule::K2Node_Select_Default' has a wrong offset!");

}

