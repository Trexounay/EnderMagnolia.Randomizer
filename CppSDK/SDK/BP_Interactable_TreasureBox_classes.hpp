#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Interactable_TreasureBox

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_Interactable_Event_classes.hpp"
#include "Zion_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Interactable_TreasureBox.BP_Interactable_TreasureBox_C
// 0x0060 (0x0630 - 0x05D0)
class ABP_Interactable_TreasureBox_C  : public ABP_Interactable_Event_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class URenderStateComponent*                  RenderState;                                       // 0x05D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpineBoneComponent*                    SpineBone;                                         // 0x05E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpineFXComponent*                      SpineFX;                                           // 0x05E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpineSkeletonAnimationExComponent*     SpineSkeletonAnimationEx;                          // 0x05F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpineSkeletonRendererComponent*        SpineSkeletonRenderer;                             // 0x05F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    Item;                                              // 0x0600(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor)
	int32                                         Count;                                             // 0x0610(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_614[0x4];                                      // 0x0614(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    ItemNG_;                                           // 0x0618(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor)
	int32                                         CountNG_;                                          // 0x0628(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SetupAdditionalBlackboardValues(struct FEventBlackboardInit& EventBlackboardInit);
	void OnInteract(class APlayerController* Controller);
	void ExecuteUbergraph_BP_Interactable_TreasureBox(int32 EntryPoint);
	void BndEvt__BP_Interactable_TreasureBox_ClearComponent_K2Node_ComponentBoundEvent_0_ClearableDelegate__DelegateSignature(EClearStatus ClearStatus);

	bool ShouldUseNGPlusVariant() const;
	void GetItem(struct FDataTableRowHandle* Item_0) const;
	void GetCount(int32* Count_0) const;
	bool CanBeInteracted() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Interactable_TreasureBox_C">();
	}
	static class ABP_Interactable_TreasureBox_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Interactable_TreasureBox_C>();
	}
};
static_assert(alignof(ABP_Interactable_TreasureBox_C) == 0x000008, "Wrong alignment on ABP_Interactable_TreasureBox_C");
static_assert(sizeof(ABP_Interactable_TreasureBox_C) == 0x000630, "Wrong size on ABP_Interactable_TreasureBox_C");
static_assert(offsetof(ABP_Interactable_TreasureBox_C, UberGraphFrame) == 0x0005D0, "Member 'ABP_Interactable_TreasureBox_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Interactable_TreasureBox_C, RenderState) == 0x0005D8, "Member 'ABP_Interactable_TreasureBox_C::RenderState' has a wrong offset!");
static_assert(offsetof(ABP_Interactable_TreasureBox_C, SpineBone) == 0x0005E0, "Member 'ABP_Interactable_TreasureBox_C::SpineBone' has a wrong offset!");
static_assert(offsetof(ABP_Interactable_TreasureBox_C, SpineFX) == 0x0005E8, "Member 'ABP_Interactable_TreasureBox_C::SpineFX' has a wrong offset!");
static_assert(offsetof(ABP_Interactable_TreasureBox_C, SpineSkeletonAnimationEx) == 0x0005F0, "Member 'ABP_Interactable_TreasureBox_C::SpineSkeletonAnimationEx' has a wrong offset!");
static_assert(offsetof(ABP_Interactable_TreasureBox_C, SpineSkeletonRenderer) == 0x0005F8, "Member 'ABP_Interactable_TreasureBox_C::SpineSkeletonRenderer' has a wrong offset!");
static_assert(offsetof(ABP_Interactable_TreasureBox_C, Item) == 0x000600, "Member 'ABP_Interactable_TreasureBox_C::Item' has a wrong offset!");
static_assert(offsetof(ABP_Interactable_TreasureBox_C, Count) == 0x000610, "Member 'ABP_Interactable_TreasureBox_C::Count' has a wrong offset!");
static_assert(offsetof(ABP_Interactable_TreasureBox_C, ItemNG_) == 0x000618, "Member 'ABP_Interactable_TreasureBox_C::ItemNG_' has a wrong offset!");
static_assert(offsetof(ABP_Interactable_TreasureBox_C, CountNG_) == 0x000628, "Member 'ABP_Interactable_TreasureBox_C::CountNG_' has a wrong offset!");

}

