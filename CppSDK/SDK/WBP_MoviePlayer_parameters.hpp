#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MoviePlayer

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_MoviePlayer.WBP_MoviePlayer_C.BindApplicationEvents
// 0x0020 (0x0020 - 0x0000)
struct WBP_MoviePlayer_C_BindApplicationEvents final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameEngineZion*                        CallFunc_Get_ReturnValue;                          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MoviePlayer_C_BindApplicationEvents) == 0x000008, "Wrong alignment on WBP_MoviePlayer_C_BindApplicationEvents");
static_assert(sizeof(WBP_MoviePlayer_C_BindApplicationEvents) == 0x000020, "Wrong size on WBP_MoviePlayer_C_BindApplicationEvents");
static_assert(offsetof(WBP_MoviePlayer_C_BindApplicationEvents, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WBP_MoviePlayer_C_BindApplicationEvents::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_BindApplicationEvents, CallFunc_Get_ReturnValue) == 0x000010, "Member 'WBP_MoviePlayer_C_BindApplicationEvents::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_BindApplicationEvents, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_MoviePlayer_C_BindApplicationEvents::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_MoviePlayer.WBP_MoviePlayer_C.ComputeSoundVolume
// 0x0050 (0x0050 - 0x0000)
struct WBP_MoviePlayer_C_ComputeSoundVolume final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundSubsystem*                        CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetVolume_ReturnValue;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetVolume_ReturnValue_1;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_A_ImplicitCast;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MoviePlayer_C_ComputeSoundVolume) == 0x000008, "Wrong alignment on WBP_MoviePlayer_C_ComputeSoundVolume");
static_assert(sizeof(WBP_MoviePlayer_C_ComputeSoundVolume) == 0x000050, "Wrong size on WBP_MoviePlayer_C_ComputeSoundVolume");
static_assert(offsetof(WBP_MoviePlayer_C_ComputeSoundVolume, ReturnValue) == 0x000000, "Member 'WBP_MoviePlayer_C_ComputeSoundVolume::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_ComputeSoundVolume, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'WBP_MoviePlayer_C_ComputeSoundVolume::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_ComputeSoundVolume, CallFunc_GetVolume_ReturnValue) == 0x000010, "Member 'WBP_MoviePlayer_C_ComputeSoundVolume::CallFunc_GetVolume_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_ComputeSoundVolume, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000014, "Member 'WBP_MoviePlayer_C_ComputeSoundVolume::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_ComputeSoundVolume, CallFunc_GetVolume_ReturnValue_1) == 0x000018, "Member 'WBP_MoviePlayer_C_ComputeSoundVolume::CallFunc_GetVolume_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_ComputeSoundVolume, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'WBP_MoviePlayer_C_ComputeSoundVolume::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_ComputeSoundVolume, CallFunc_SelectFloat_ReturnValue) == 0x000028, "Member 'WBP_MoviePlayer_C_ComputeSoundVolume::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_ComputeSoundVolume, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'WBP_MoviePlayer_C_ComputeSoundVolume::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_ComputeSoundVolume, CallFunc_SelectFloat_A_ImplicitCast) == 0x000038, "Member 'WBP_MoviePlayer_C_ComputeSoundVolume::CallFunc_SelectFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_ComputeSoundVolume, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000040, "Member 'WBP_MoviePlayer_C_ComputeSoundVolume::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_ComputeSoundVolume, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000048, "Member 'WBP_MoviePlayer_C_ComputeSoundVolume::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function WBP_MoviePlayer.WBP_MoviePlayer_C.ConditionalRHIDisable
// 0x0001 (0x0001 - 0x0000)
struct WBP_MoviePlayer_C_ConditionalRHIDisable final
{
public:
	bool                                          CallFunc_IsSwitchBuild_ReturnValue;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MoviePlayer_C_ConditionalRHIDisable) == 0x000001, "Wrong alignment on WBP_MoviePlayer_C_ConditionalRHIDisable");
static_assert(sizeof(WBP_MoviePlayer_C_ConditionalRHIDisable) == 0x000001, "Wrong size on WBP_MoviePlayer_C_ConditionalRHIDisable");
static_assert(offsetof(WBP_MoviePlayer_C_ConditionalRHIDisable, CallFunc_IsSwitchBuild_ReturnValue) == 0x000000, "Member 'WBP_MoviePlayer_C_ConditionalRHIDisable::CallFunc_IsSwitchBuild_ReturnValue' has a wrong offset!");

// Function WBP_MoviePlayer.WBP_MoviePlayer_C.ExecuteUbergraph_WBP_MoviePlayer
// 0x0130 (0x0130 - 0x0000)
struct WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSubsystem*                          CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSubsystem*                          CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundSubsystem*                        CallFunc_GetGameInstanceSubsystem_ReturnValue_2;   // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundSubsystem*                        CallFunc_GetGameInstanceSubsystem_ReturnValue_3;   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x0028(0x0010)(ConstParm)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0038(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0048(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x0058(0x0008)(NoDestructor)
	bool                                          CallFunc_Pause_ReturnValue;                        // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetUMGZOrder_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0068(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0078(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Play_ReturnValue;                         // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetBinkURLFromPlatformMediaSource_ReturnValue; // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x00A0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable_1;                              // 0x00B0(0x0010)(ConstParm)
	class UPlayUMGAnimationAsyncAction*           CallFunc_PlayUMGAnimation_ReturnValue;             // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Play_ReturnValue_1;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OpenUrl_ReturnValue;                      // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetGamePaused_ReturnValue;                // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_Subtitle;                       // 0x00D0(0x0010)(ConstParm)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x00E0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FText& Subtitle)>  K2Node_CreateDelegate_OutputDelegate_6;            // 0x00F0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FText& Subtitle)>  K2Node_CreateDelegate_OutputDelegate_7;            // 0x0100(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_Dialog_YesNo_C*                    CallFunc_Create_ReturnValue;                       // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ComputeSoundVolume_ReturnValue;           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayUMGAnimationAsyncAction*           CallFunc_PlayUMGAnimation_ReturnValue_1;           // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetGamePaused_ReturnValue_1;              // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12A[0x2];                                      // 0x012A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetVolume_Rate_ImplicitCast;              // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer) == 0x000008, "Wrong alignment on WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer");
static_assert(sizeof(WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer) == 0x000130, "Wrong size on WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer");
static_assert(offsetof(WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer, EntryPoint) == 0x000000, "Member 'WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x000010, "Member 'WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer, CallFunc_GetGameInstanceSubsystem_ReturnValue_2) == 0x000018, "Member 'WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer::CallFunc_GetGameInstanceSubsystem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer, CallFunc_GetGameInstanceSubsystem_ReturnValue_3) == 0x000020, "Member 'WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer::CallFunc_GetGameInstanceSubsystem_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer, Temp_text_Variable) == 0x000028, "Member 'WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer, K2Node_CreateDelegate_OutputDelegate) == 0x000038, "Member 'WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer, K2Node_CreateDelegate_OutputDelegate_1) == 0x000048, "Member 'WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer, K2Node_Event_InFocusEvent) == 0x000058, "Member 'WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer::K2Node_Event_InFocusEvent' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer, CallFunc_Pause_ReturnValue) == 0x000060, "Member 'WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer::CallFunc_Pause_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer, CallFunc_IsPlaying_ReturnValue) == 0x000061, "Member 'WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer, CallFunc_GetUMGZOrder_ReturnValue) == 0x000064, "Member 'WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer::CallFunc_GetUMGZOrder_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer, K2Node_CreateDelegate_OutputDelegate_2) == 0x000068, "Member 'WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer, K2Node_CreateDelegate_OutputDelegate_3) == 0x000078, "Member 'WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer, CallFunc_Play_ReturnValue) == 0x000088, "Member 'WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer::CallFunc_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer, CallFunc_GetBinkURLFromPlatformMediaSource_ReturnValue) == 0x000090, "Member 'WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer::CallFunc_GetBinkURLFromPlatformMediaSource_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000A0, "Member 'WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer, Temp_text_Variable_1) == 0x0000B0, "Member 'WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer, CallFunc_PlayUMGAnimation_ReturnValue) == 0x0000C0, "Member 'WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer::CallFunc_PlayUMGAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer, CallFunc_Play_ReturnValue_1) == 0x0000C8, "Member 'WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer::CallFunc_Play_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer, CallFunc_IsValid_ReturnValue) == 0x0000C9, "Member 'WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer, CallFunc_OpenUrl_ReturnValue) == 0x0000CA, "Member 'WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer::CallFunc_OpenUrl_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer, CallFunc_SetGamePaused_ReturnValue) == 0x0000CB, "Member 'WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer::CallFunc_SetGamePaused_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer, K2Node_CustomEvent_Subtitle) == 0x0000D0, "Member 'WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer::K2Node_CustomEvent_Subtitle' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer, K2Node_CreateDelegate_OutputDelegate_5) == 0x0000E0, "Member 'WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer, K2Node_CreateDelegate_OutputDelegate_6) == 0x0000F0, "Member 'WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer, K2Node_CreateDelegate_OutputDelegate_7) == 0x000100, "Member 'WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer, CallFunc_Create_ReturnValue) == 0x000110, "Member 'WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer, CallFunc_ComputeSoundVolume_ReturnValue) == 0x000118, "Member 'WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer::CallFunc_ComputeSoundVolume_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer, CallFunc_PlayUMGAnimation_ReturnValue_1) == 0x000120, "Member 'WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer::CallFunc_PlayUMGAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer, CallFunc_IsValid_ReturnValue_1) == 0x000128, "Member 'WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer, CallFunc_SetGamePaused_ReturnValue_1) == 0x000129, "Member 'WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer::CallFunc_SetGamePaused_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer, CallFunc_SetVolume_Rate_ImplicitCast) == 0x00012C, "Member 'WBP_MoviePlayer_C_ExecuteUbergraph_WBP_MoviePlayer::CallFunc_SetVolume_Rate_ImplicitCast' has a wrong offset!");

// Function WBP_MoviePlayer.WBP_MoviePlayer_C.OnFocusLost
// 0x0008 (0x0008 - 0x0000)
struct WBP_MoviePlayer_C_OnFocusLost final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(WBP_MoviePlayer_C_OnFocusLost) == 0x000004, "Wrong alignment on WBP_MoviePlayer_C_OnFocusLost");
static_assert(sizeof(WBP_MoviePlayer_C_OnFocusLost) == 0x000008, "Wrong size on WBP_MoviePlayer_C_OnFocusLost");
static_assert(offsetof(WBP_MoviePlayer_C_OnFocusLost, InFocusEvent) == 0x000000, "Member 'WBP_MoviePlayer_C_OnFocusLost::InFocusEvent' has a wrong offset!");

// Function WBP_MoviePlayer.WBP_MoviePlayer_C.OnKeyDown
// 0x02D0 (0x02D0 - 0x0000)
struct WBP_MoviePlayer_C_OnKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0078(0x00B8)(Parm, OutParm, ReturnParm)
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x0130(0x0018)(HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0148(0x00B8)()
	bool                                          CallFunc_IsActionInputTypeKey_ReturnValue;         // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0210(0x00B8)()
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MoviePlayer_C_OnKeyDown) == 0x000008, "Wrong alignment on WBP_MoviePlayer_C_OnKeyDown");
static_assert(sizeof(WBP_MoviePlayer_C_OnKeyDown) == 0x0002D0, "Wrong size on WBP_MoviePlayer_C_OnKeyDown");
static_assert(offsetof(WBP_MoviePlayer_C_OnKeyDown, MyGeometry) == 0x000000, "Member 'WBP_MoviePlayer_C_OnKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_OnKeyDown, InKeyEvent) == 0x000038, "Member 'WBP_MoviePlayer_C_OnKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_OnKeyDown, ReturnValue) == 0x000078, "Member 'WBP_MoviePlayer_C_OnKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_OnKeyDown, CallFunc_GetKey_ReturnValue) == 0x000130, "Member 'WBP_MoviePlayer_C_OnKeyDown::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_OnKeyDown, CallFunc_Handled_ReturnValue) == 0x000148, "Member 'WBP_MoviePlayer_C_OnKeyDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_OnKeyDown, CallFunc_IsActionInputTypeKey_ReturnValue) == 0x000200, "Member 'WBP_MoviePlayer_C_OnKeyDown::CallFunc_IsActionInputTypeKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_OnKeyDown, CallFunc_PlayAnimationForward_ReturnValue) == 0x000208, "Member 'WBP_MoviePlayer_C_OnKeyDown::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_OnKeyDown, CallFunc_Unhandled_ReturnValue) == 0x000210, "Member 'WBP_MoviePlayer_C_OnKeyDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_OnKeyDown, CallFunc_IsAnimationPlaying_ReturnValue) == 0x0002C8, "Member 'WBP_MoviePlayer_C_OnKeyDown::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");

// Function WBP_MoviePlayer.WBP_MoviePlayer_C.OnPressCancel
// 0x00F8 (0x00F8 - 0x0000)
struct WBP_MoviePlayer_C_OnPressCancel final
{
public:
	struct FKeyEvent                              KeyEvent;                                          // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(WBP_MoviePlayer_C_OnPressCancel) == 0x000008, "Wrong alignment on WBP_MoviePlayer_C_OnPressCancel");
static_assert(sizeof(WBP_MoviePlayer_C_OnPressCancel) == 0x0000F8, "Wrong size on WBP_MoviePlayer_C_OnPressCancel");
static_assert(offsetof(WBP_MoviePlayer_C_OnPressCancel, KeyEvent) == 0x000000, "Member 'WBP_MoviePlayer_C_OnPressCancel::KeyEvent' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_OnPressCancel, ReturnValue) == 0x000040, "Member 'WBP_MoviePlayer_C_OnPressCancel::ReturnValue' has a wrong offset!");

// Function WBP_MoviePlayer.WBP_MoviePlayer_C.OnSetSubtitle_Event
// 0x0010 (0x0010 - 0x0000)
struct WBP_MoviePlayer_C_OnSetSubtitle_Event final
{
public:
	class FText                                   Subtitle_0;                                        // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_MoviePlayer_C_OnSetSubtitle_Event) == 0x000008, "Wrong alignment on WBP_MoviePlayer_C_OnSetSubtitle_Event");
static_assert(sizeof(WBP_MoviePlayer_C_OnSetSubtitle_Event) == 0x000010, "Wrong size on WBP_MoviePlayer_C_OnSetSubtitle_Event");
static_assert(offsetof(WBP_MoviePlayer_C_OnSetSubtitle_Event, Subtitle_0) == 0x000000, "Member 'WBP_MoviePlayer_C_OnSetSubtitle_Event::Subtitle_0' has a wrong offset!");

// Function WBP_MoviePlayer.WBP_MoviePlayer_C.SetupSubtitle
// 0x0058 (0x0058 - 0x0000)
struct WBP_MoviePlayer_C_SetupSubtitle final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          bForce;                                            // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_ProcessSubtitle_Name;                     // 0x0018(0x0010)()
	class FText                                   CallFunc_ProcessSubtitle_Message;                  // 0x0028(0x0010)()
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue;          // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0040(0x0010)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MoviePlayer_C_SetupSubtitle) == 0x000008, "Wrong alignment on WBP_MoviePlayer_C_SetupSubtitle");
static_assert(sizeof(WBP_MoviePlayer_C_SetupSubtitle) == 0x000058, "Wrong size on WBP_MoviePlayer_C_SetupSubtitle");
static_assert(offsetof(WBP_MoviePlayer_C_SetupSubtitle, Text) == 0x000000, "Member 'WBP_MoviePlayer_C_SetupSubtitle::Text' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_SetupSubtitle, bForce) == 0x000010, "Member 'WBP_MoviePlayer_C_SetupSubtitle::bForce' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_SetupSubtitle, CallFunc_ProcessSubtitle_Name) == 0x000018, "Member 'WBP_MoviePlayer_C_SetupSubtitle::CallFunc_ProcessSubtitle_Name' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_SetupSubtitle, CallFunc_ProcessSubtitle_Message) == 0x000028, "Member 'WBP_MoviePlayer_C_SetupSubtitle::CallFunc_ProcessSubtitle_Message' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_SetupSubtitle, Temp_byte_Variable) == 0x000038, "Member 'WBP_MoviePlayer_C_SetupSubtitle::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_SetupSubtitle, Temp_byte_Variable_1) == 0x000039, "Member 'WBP_MoviePlayer_C_SetupSubtitle::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_SetupSubtitle, Temp_bool_Variable) == 0x00003A, "Member 'WBP_MoviePlayer_C_SetupSubtitle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_SetupSubtitle, CallFunc_EqualEqual_TextText_ReturnValue) == 0x00003B, "Member 'WBP_MoviePlayer_C_SetupSubtitle::CallFunc_EqualEqual_TextText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_SetupSubtitle, CallFunc_GetText_ReturnValue) == 0x000040, "Member 'WBP_MoviePlayer_C_SetupSubtitle::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_SetupSubtitle, CallFunc_Not_PreBool_ReturnValue) == 0x000050, "Member 'WBP_MoviePlayer_C_SetupSubtitle::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_SetupSubtitle, CallFunc_TextIsEmpty_ReturnValue) == 0x000051, "Member 'WBP_MoviePlayer_C_SetupSubtitle::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_SetupSubtitle, CallFunc_BooleanOR_ReturnValue) == 0x000052, "Member 'WBP_MoviePlayer_C_SetupSubtitle::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_SetupSubtitle, K2Node_Select_Default) == 0x000053, "Member 'WBP_MoviePlayer_C_SetupSubtitle::K2Node_Select_Default' has a wrong offset!");

// Function WBP_MoviePlayer.WBP_MoviePlayer_C.SetWorldRenderingEnable
// 0x0010 (0x0010 - 0x0000)
struct WBP_MoviePlayer_C_SetWorldRenderingEnable final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameViewportZion*                      CallFunc_Get_ReturnValue;                          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MoviePlayer_C_SetWorldRenderingEnable) == 0x000008, "Wrong alignment on WBP_MoviePlayer_C_SetWorldRenderingEnable");
static_assert(sizeof(WBP_MoviePlayer_C_SetWorldRenderingEnable) == 0x000010, "Wrong size on WBP_MoviePlayer_C_SetWorldRenderingEnable");
static_assert(offsetof(WBP_MoviePlayer_C_SetWorldRenderingEnable, bEnable) == 0x000000, "Member 'WBP_MoviePlayer_C_SetWorldRenderingEnable::bEnable' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_SetWorldRenderingEnable, CallFunc_Get_ReturnValue) == 0x000008, "Member 'WBP_MoviePlayer_C_SetWorldRenderingEnable::CallFunc_Get_ReturnValue' has a wrong offset!");

// Function WBP_MoviePlayer.WBP_MoviePlayer_C.UnbindApplicationEvents
// 0x0020 (0x0020 - 0x0000)
struct WBP_MoviePlayer_C_UnbindApplicationEvents final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameEngineZion*                        CallFunc_Get_ReturnValue;                          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MoviePlayer_C_UnbindApplicationEvents) == 0x000008, "Wrong alignment on WBP_MoviePlayer_C_UnbindApplicationEvents");
static_assert(sizeof(WBP_MoviePlayer_C_UnbindApplicationEvents) == 0x000020, "Wrong size on WBP_MoviePlayer_C_UnbindApplicationEvents");
static_assert(offsetof(WBP_MoviePlayer_C_UnbindApplicationEvents, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WBP_MoviePlayer_C_UnbindApplicationEvents::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_UnbindApplicationEvents, CallFunc_Get_ReturnValue) == 0x000010, "Member 'WBP_MoviePlayer_C_UnbindApplicationEvents::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MoviePlayer_C_UnbindApplicationEvents, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_MoviePlayer_C_UnbindApplicationEvents::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

