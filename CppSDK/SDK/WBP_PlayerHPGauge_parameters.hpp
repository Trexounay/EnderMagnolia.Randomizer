#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PlayerHPGauge

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_PlayerHPGauge.WBP_PlayerHPGauge_C.SetDelayedGaugeVisible
// 0x0005 (0x0005 - 0x0000)
struct WBP_PlayerHPGauge_C_SetDelayedGaugeVisible final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerHPGauge_C_SetDelayedGaugeVisible) == 0x000001, "Wrong alignment on WBP_PlayerHPGauge_C_SetDelayedGaugeVisible");
static_assert(sizeof(WBP_PlayerHPGauge_C_SetDelayedGaugeVisible) == 0x000005, "Wrong size on WBP_PlayerHPGauge_C_SetDelayedGaugeVisible");
static_assert(offsetof(WBP_PlayerHPGauge_C_SetDelayedGaugeVisible, Visible) == 0x000000, "Member 'WBP_PlayerHPGauge_C_SetDelayedGaugeVisible::Visible' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_SetDelayedGaugeVisible, Temp_bool_Variable) == 0x000001, "Member 'WBP_PlayerHPGauge_C_SetDelayedGaugeVisible::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_SetDelayedGaugeVisible, Temp_byte_Variable) == 0x000002, "Member 'WBP_PlayerHPGauge_C_SetDelayedGaugeVisible::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_SetDelayedGaugeVisible, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_PlayerHPGauge_C_SetDelayedGaugeVisible::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_SetDelayedGaugeVisible, K2Node_Select_Default) == 0x000004, "Member 'WBP_PlayerHPGauge_C_SetDelayedGaugeVisible::K2Node_Select_Default' has a wrong offset!");

// Function WBP_PlayerHPGauge.WBP_PlayerHPGauge_C.RefreshHPTextVisibility
// 0x0018 (0x0018 - 0x0000)
struct WBP_PlayerHPGauge_C_RefreshHPTextVisibility final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameSettingsSubsystem*                 CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDisplayHPAboveGauge_ReturnValue;       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerHPGauge_C_RefreshHPTextVisibility) == 0x000008, "Wrong alignment on WBP_PlayerHPGauge_C_RefreshHPTextVisibility");
static_assert(sizeof(WBP_PlayerHPGauge_C_RefreshHPTextVisibility) == 0x000018, "Wrong size on WBP_PlayerHPGauge_C_RefreshHPTextVisibility");
static_assert(offsetof(WBP_PlayerHPGauge_C_RefreshHPTextVisibility, Temp_bool_Variable) == 0x000000, "Member 'WBP_PlayerHPGauge_C_RefreshHPTextVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_RefreshHPTextVisibility, Temp_byte_Variable) == 0x000001, "Member 'WBP_PlayerHPGauge_C_RefreshHPTextVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_RefreshHPTextVisibility, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_PlayerHPGauge_C_RefreshHPTextVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_RefreshHPTextVisibility, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'WBP_PlayerHPGauge_C_RefreshHPTextVisibility::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_RefreshHPTextVisibility, CallFunc_GetDisplayHPAboveGauge_ReturnValue) == 0x000010, "Member 'WBP_PlayerHPGauge_C_RefreshHPTextVisibility::CallFunc_GetDisplayHPAboveGauge_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_RefreshHPTextVisibility, K2Node_Select_Default) == 0x000011, "Member 'WBP_PlayerHPGauge_C_RefreshHPTextVisibility::K2Node_Select_Default' has a wrong offset!");

// Function WBP_PlayerHPGauge.WBP_PlayerHPGauge_C.RefreshHPText
// 0x00D0 (0x00D0 - 0x0000)
struct WBP_PlayerHPGauge_C_RefreshHPText final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMaxValue_ReturnValue;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrValue_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0018(0x0048)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0068(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00C0(0x0010)()
};
static_assert(alignof(WBP_PlayerHPGauge_C_RefreshHPText) == 0x000008, "Wrong alignment on WBP_PlayerHPGauge_C_RefreshHPText");
static_assert(sizeof(WBP_PlayerHPGauge_C_RefreshHPText) == 0x0000D0, "Wrong size on WBP_PlayerHPGauge_C_RefreshHPText");
static_assert(offsetof(WBP_PlayerHPGauge_C_RefreshHPText, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_PlayerHPGauge_C_RefreshHPText::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_RefreshHPText, CallFunc_GetMaxValue_ReturnValue) == 0x000004, "Member 'WBP_PlayerHPGauge_C_RefreshHPText::CallFunc_GetMaxValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_RefreshHPText, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000008, "Member 'WBP_PlayerHPGauge_C_RefreshHPText::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_RefreshHPText, CallFunc_GetCurrValue_ReturnValue) == 0x000010, "Member 'WBP_PlayerHPGauge_C_RefreshHPText::CallFunc_GetCurrValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_RefreshHPText, K2Node_MakeStruct_FormatArgumentData) == 0x000018, "Member 'WBP_PlayerHPGauge_C_RefreshHPText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_RefreshHPText, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000060, "Member 'WBP_PlayerHPGauge_C_RefreshHPText::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_RefreshHPText, K2Node_MakeStruct_FormatArgumentData_1) == 0x000068, "Member 'WBP_PlayerHPGauge_C_RefreshHPText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_RefreshHPText, K2Node_MakeArray_Array) == 0x0000B0, "Member 'WBP_PlayerHPGauge_C_RefreshHPText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_RefreshHPText, CallFunc_Format_ReturnValue) == 0x0000C0, "Member 'WBP_PlayerHPGauge_C_RefreshHPText::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WBP_PlayerHPGauge.WBP_PlayerHPGauge_C.RefreshHPGaugeWidth
// 0x0028 (0x0028 - 0x0000)
struct WBP_PlayerHPGauge_C_RefreshHPGaugeWidth final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMaxValue_ReturnValue;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerHPGauge_C_RefreshHPGaugeWidth) == 0x000008, "Wrong alignment on WBP_PlayerHPGauge_C_RefreshHPGaugeWidth");
static_assert(sizeof(WBP_PlayerHPGauge_C_RefreshHPGaugeWidth) == 0x000028, "Wrong size on WBP_PlayerHPGauge_C_RefreshHPGaugeWidth");
static_assert(offsetof(WBP_PlayerHPGauge_C_RefreshHPGaugeWidth, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_PlayerHPGauge_C_RefreshHPGaugeWidth::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_RefreshHPGaugeWidth, CallFunc_GetMaxValue_ReturnValue) == 0x000004, "Member 'WBP_PlayerHPGauge_C_RefreshHPGaugeWidth::CallFunc_GetMaxValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_RefreshHPGaugeWidth, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000008, "Member 'WBP_PlayerHPGauge_C_RefreshHPGaugeWidth::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_RefreshHPGaugeWidth, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'WBP_PlayerHPGauge_C_RefreshHPGaugeWidth::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_RefreshHPGaugeWidth, CallFunc_FClamp_ReturnValue) == 0x000018, "Member 'WBP_PlayerHPGauge_C_RefreshHPGaugeWidth::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_RefreshHPGaugeWidth, CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast) == 0x000020, "Member 'WBP_PlayerHPGauge_C_RefreshHPGaugeWidth::CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast' has a wrong offset!");

// Function WBP_PlayerHPGauge.WBP_PlayerHPGauge_C.RefreshHPGauge
// 0x0030 (0x0030 - 0x0000)
struct WBP_PlayerHPGauge_C_RefreshHPGauge final
{
public:
	bool                                          RefreshDelayedGauge;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetHPRatio_HPRatio;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetValue_InValue_ImplicitCast;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast_1;      // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerHPGauge_C_RefreshHPGauge) == 0x000008, "Wrong alignment on WBP_PlayerHPGauge_C_RefreshHPGauge");
static_assert(sizeof(WBP_PlayerHPGauge_C_RefreshHPGauge) == 0x000030, "Wrong size on WBP_PlayerHPGauge_C_RefreshHPGauge");
static_assert(offsetof(WBP_PlayerHPGauge_C_RefreshHPGauge, RefreshDelayedGauge) == 0x000000, "Member 'WBP_PlayerHPGauge_C_RefreshHPGauge::RefreshDelayedGauge' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_RefreshHPGauge, CallFunc_GetHPRatio_HPRatio) == 0x000008, "Member 'WBP_PlayerHPGauge_C_RefreshHPGauge::CallFunc_GetHPRatio_HPRatio' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_RefreshHPGauge, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000010, "Member 'WBP_PlayerHPGauge_C_RefreshHPGauge::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_RefreshHPGauge, CallFunc_BooleanOR_ReturnValue) == 0x000011, "Member 'WBP_PlayerHPGauge_C_RefreshHPGauge::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_RefreshHPGauge, CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast) == 0x000018, "Member 'WBP_PlayerHPGauge_C_RefreshHPGauge::CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_RefreshHPGauge, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x000020, "Member 'WBP_PlayerHPGauge_C_RefreshHPGauge::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_RefreshHPGauge, CallFunc_SetValue_InValue_ImplicitCast) == 0x000024, "Member 'WBP_PlayerHPGauge_C_RefreshHPGauge::CallFunc_SetValue_InValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_RefreshHPGauge, CallFunc_SetPercent_InPercent_ImplicitCast_1) == 0x000028, "Member 'WBP_PlayerHPGauge_C_RefreshHPGauge::CallFunc_SetPercent_InPercent_ImplicitCast_1' has a wrong offset!");

// Function WBP_PlayerHPGauge.WBP_PlayerHPGauge_C.OnReceiveDamage
// 0x0010 (0x0010 - 0x0000)
struct WBP_PlayerHPGauge_C_OnReceiveDamage final
{
public:
	class AActor*                                 Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Value;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerHPGauge_C_OnReceiveDamage) == 0x000008, "Wrong alignment on WBP_PlayerHPGauge_C_OnReceiveDamage");
static_assert(sizeof(WBP_PlayerHPGauge_C_OnReceiveDamage) == 0x000010, "Wrong size on WBP_PlayerHPGauge_C_OnReceiveDamage");
static_assert(offsetof(WBP_PlayerHPGauge_C_OnReceiveDamage, Source) == 0x000000, "Member 'WBP_PlayerHPGauge_C_OnReceiveDamage::Source' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_OnReceiveDamage, Value) == 0x000008, "Member 'WBP_PlayerHPGauge_C_OnReceiveDamage::Value' has a wrong offset!");

// Function WBP_PlayerHPGauge.WBP_PlayerHPGauge_C.Initialize
// 0x0040 (0x0040 - 0x0000)
struct WBP_PlayerHPGauge_C_Initialize final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStatHPComponent*                       CallFunc_GetComponentByClass_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* Source, int32 Value)> K2Node_CreateDelegate_OutputDelegate_1;       // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerHPGauge_C_Initialize) == 0x000008, "Wrong alignment on WBP_PlayerHPGauge_C_Initialize");
static_assert(sizeof(WBP_PlayerHPGauge_C_Initialize) == 0x000040, "Wrong size on WBP_PlayerHPGauge_C_Initialize");
static_assert(offsetof(WBP_PlayerHPGauge_C_Initialize, Pawn) == 0x000000, "Member 'WBP_PlayerHPGauge_C_Initialize::Pawn' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_Initialize, CallFunc_GetComponentByClass_ReturnValue) == 0x000008, "Member 'WBP_PlayerHPGauge_C_Initialize::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_Initialize, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'WBP_PlayerHPGauge_C_Initialize::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_Initialize, K2Node_CreateDelegate_OutputDelegate_1) == 0x000020, "Member 'WBP_PlayerHPGauge_C_Initialize::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_Initialize, K2Node_CreateDelegate_OutputDelegate_2) == 0x000030, "Member 'WBP_PlayerHPGauge_C_Initialize::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");

// Function WBP_PlayerHPGauge.WBP_PlayerHPGauge_C.GetHPRatio
// 0x0018 (0x0018 - 0x0000)
struct WBP_PlayerHPGauge_C_GetHPRatio final
{
public:
	double                                        HPRatio;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurrRatio_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_HPRatio_ImplicitCast;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerHPGauge_C_GetHPRatio) == 0x000008, "Wrong alignment on WBP_PlayerHPGauge_C_GetHPRatio");
static_assert(sizeof(WBP_PlayerHPGauge_C_GetHPRatio) == 0x000018, "Wrong size on WBP_PlayerHPGauge_C_GetHPRatio");
static_assert(offsetof(WBP_PlayerHPGauge_C_GetHPRatio, HPRatio) == 0x000000, "Member 'WBP_PlayerHPGauge_C_GetHPRatio::HPRatio' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_GetHPRatio, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_PlayerHPGauge_C_GetHPRatio::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_GetHPRatio, CallFunc_GetCurrRatio_ReturnValue) == 0x00000C, "Member 'WBP_PlayerHPGauge_C_GetHPRatio::CallFunc_GetCurrRatio_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_GetHPRatio, K2Node_FunctionResult_HPRatio_ImplicitCast) == 0x000010, "Member 'WBP_PlayerHPGauge_C_GetHPRatio::K2Node_FunctionResult_HPRatio_ImplicitCast' has a wrong offset!");

// Function WBP_PlayerHPGauge.WBP_PlayerHPGauge_C.ExecuteUbergraph_WBP_PlayerHPGauge
// 0x00E8 (0x00E8 - 0x0000)
struct WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B[0x5];                                       // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Source;                         // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Value;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFadeSubsystem*                         CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0068(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnyFadeVisible_ReturnValue;             // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameSettingsSubsystem*                 CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0088(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameSettingsSubsystem*                 CallFunc_GetGameInstanceSubsystem_ReturnValue_2;   // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_A_ImplicitCast;                      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_B_ImplicitCast;                      // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast;    // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NearlyEqual_FloatFloat_B_ImplicitCast;    // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge) == 0x000008, "Wrong alignment on WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge");
static_assert(sizeof(WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge) == 0x0000E8, "Wrong size on WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge");
static_assert(offsetof(WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge, EntryPoint) == 0x000000, "Member 'WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000020, "Member 'WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000028, "Member 'WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000030, "Member 'WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge, CallFunc_Lerp_ReturnValue) == 0x000040, "Member 'WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000048, "Member 'WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x000049, "Member 'WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge, CallFunc_Not_PreBool_ReturnValue) == 0x00004A, "Member 'WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge, K2Node_CustomEvent_Source) == 0x000050, "Member 'WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge::K2Node_CustomEvent_Source' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge, K2Node_CustomEvent_Value) == 0x000058, "Member 'WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge::K2Node_CustomEvent_Value' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000060, "Member 'WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge, K2Node_CreateDelegate_OutputDelegate_1) == 0x000068, "Member 'WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge, CallFunc_IsAnyFadeVisible_ReturnValue) == 0x000078, "Member 'WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge::CallFunc_IsAnyFadeVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge, CallFunc_Not_PreBool_ReturnValue_1) == 0x000079, "Member 'WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x000080, "Member 'WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge, K2Node_CreateDelegate_OutputDelegate_2) == 0x000088, "Member 'WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge, CallFunc_PlayAnimation_ReturnValue) == 0x000098, "Member 'WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge, CallFunc_PlayAnimation_ReturnValue_1) == 0x0000A0, "Member 'WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge, CallFunc_PlayAnimation_ReturnValue_2) == 0x0000A8, "Member 'WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge, CallFunc_GetGameInstanceSubsystem_ReturnValue_2) == 0x0000B0, "Member 'WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge::CallFunc_GetGameInstanceSubsystem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0000B8, "Member 'WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge, CallFunc_Lerp_A_ImplicitCast) == 0x0000C0, "Member 'WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge::CallFunc_Lerp_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge, CallFunc_Lerp_B_ImplicitCast) == 0x0000C8, "Member 'WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge::CallFunc_Lerp_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x0000D0, "Member 'WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge, CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast) == 0x0000D8, "Member 'WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge::CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge, CallFunc_NearlyEqual_FloatFloat_B_ImplicitCast) == 0x0000E0, "Member 'WBP_PlayerHPGauge_C_ExecuteUbergraph_WBP_PlayerHPGauge::CallFunc_NearlyEqual_FloatFloat_B_ImplicitCast' has a wrong offset!");

}

