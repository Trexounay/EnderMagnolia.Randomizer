#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SpineMeshPlugin

#include "Basic.hpp"


namespace SDK::Params
{

// Function SpineMeshPlugin.SpineMeshComponent.ClearMeshSection
// 0x0008 (0x0008 - 0x0000)
struct SpineMeshComponent_ClearMeshSection final
{
public:
	int32                                         SectionIndex;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUpdateBounds;                                     // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SpineMeshComponent_ClearMeshSection) == 0x000004, "Wrong alignment on SpineMeshComponent_ClearMeshSection");
static_assert(sizeof(SpineMeshComponent_ClearMeshSection) == 0x000008, "Wrong size on SpineMeshComponent_ClearMeshSection");
static_assert(offsetof(SpineMeshComponent_ClearMeshSection, SectionIndex) == 0x000000, "Member 'SpineMeshComponent_ClearMeshSection::SectionIndex' has a wrong offset!");
static_assert(offsetof(SpineMeshComponent_ClearMeshSection, bUpdateBounds) == 0x000004, "Member 'SpineMeshComponent_ClearMeshSection::bUpdateBounds' has a wrong offset!");

// Function SpineMeshPlugin.SpineMeshComponent.SetMeshSectionVisible
// 0x0008 (0x0008 - 0x0000)
struct SpineMeshComponent_SetMeshSectionVisible final
{
public:
	int32                                         SectionIndex;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNewVisibility;                                    // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SpineMeshComponent_SetMeshSectionVisible) == 0x000004, "Wrong alignment on SpineMeshComponent_SetMeshSectionVisible");
static_assert(sizeof(SpineMeshComponent_SetMeshSectionVisible) == 0x000008, "Wrong size on SpineMeshComponent_SetMeshSectionVisible");
static_assert(offsetof(SpineMeshComponent_SetMeshSectionVisible, SectionIndex) == 0x000000, "Member 'SpineMeshComponent_SetMeshSectionVisible::SectionIndex' has a wrong offset!");
static_assert(offsetof(SpineMeshComponent_SetMeshSectionVisible, bNewVisibility) == 0x000004, "Member 'SpineMeshComponent_SetMeshSectionVisible::bNewVisibility' has a wrong offset!");

// Function SpineMeshPlugin.SpineMeshComponent.GetNumSections
// 0x0004 (0x0004 - 0x0000)
struct SpineMeshComponent_GetNumSections final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SpineMeshComponent_GetNumSections) == 0x000004, "Wrong alignment on SpineMeshComponent_GetNumSections");
static_assert(sizeof(SpineMeshComponent_GetNumSections) == 0x000004, "Wrong size on SpineMeshComponent_GetNumSections");
static_assert(offsetof(SpineMeshComponent_GetNumSections, ReturnValue) == 0x000000, "Member 'SpineMeshComponent_GetNumSections::ReturnValue' has a wrong offset!");

// Function SpineMeshPlugin.SpineMeshComponent.IsMeshSectionVisible
// 0x0008 (0x0008 - 0x0000)
struct SpineMeshComponent_IsMeshSectionVisible final
{
public:
	int32                                         SectionIndex;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SpineMeshComponent_IsMeshSectionVisible) == 0x000004, "Wrong alignment on SpineMeshComponent_IsMeshSectionVisible");
static_assert(sizeof(SpineMeshComponent_IsMeshSectionVisible) == 0x000008, "Wrong size on SpineMeshComponent_IsMeshSectionVisible");
static_assert(offsetof(SpineMeshComponent_IsMeshSectionVisible, SectionIndex) == 0x000000, "Member 'SpineMeshComponent_IsMeshSectionVisible::SectionIndex' has a wrong offset!");
static_assert(offsetof(SpineMeshComponent_IsMeshSectionVisible, ReturnValue) == 0x000004, "Member 'SpineMeshComponent_IsMeshSectionVisible::ReturnValue' has a wrong offset!");

// Function SpineMeshPlugin.SpineMeshMaskComponent.SetScaleOffset
// 0x0004 (0x0004 - 0x0000)
struct SpineMeshMaskComponent_SetScaleOffset final
{
public:
	float                                         InScaleOffset;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SpineMeshMaskComponent_SetScaleOffset) == 0x000004, "Wrong alignment on SpineMeshMaskComponent_SetScaleOffset");
static_assert(sizeof(SpineMeshMaskComponent_SetScaleOffset) == 0x000004, "Wrong size on SpineMeshMaskComponent_SetScaleOffset");
static_assert(offsetof(SpineMeshMaskComponent_SetScaleOffset, InScaleOffset) == 0x000000, "Member 'SpineMeshMaskComponent_SetScaleOffset::InScaleOffset' has a wrong offset!");

}

