#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Settings_Page_Gamepad

#include "Basic.hpp"

#include "WBP_Settings_Page_Gamepad_classes.hpp"
#include "WBP_Settings_Page_Gamepad_parameters.hpp"


namespace SDK
{

// Function WBP_Settings_Page_Gamepad.WBP_Settings_Page_Gamepad_C.BndEvt__WBP_Settings_Page_Gamepad_WBP_Settings_Entry_Slider_K2Node_ComponentBoundEvent_1_OnSliderValueChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// double                                  Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Settings_Page_Gamepad_C::BndEvt__WBP_Settings_Page_Gamepad_WBP_Settings_Entry_Slider_K2Node_ComponentBoundEvent_1_OnSliderValueChanged__DelegateSignature(double Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_Page_Gamepad_C", "BndEvt__WBP_Settings_Page_Gamepad_WBP_Settings_Entry_Slider_K2Node_ComponentBoundEvent_1_OnSliderValueChanged__DelegateSignature");

	Params::WBP_Settings_Page_Gamepad_C_BndEvt__WBP_Settings_Page_Gamepad_WBP_Settings_Entry_Slider_K2Node_ComponentBoundEvent_1_OnSliderValueChanged__DelegateSignature Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Settings_Page_Gamepad.WBP_Settings_Page_Gamepad_C.BndEvt__WBP_Settings_Page_Keyboard_WBP_Button_Generic_RevertToDefault_K2Node_ComponentBoundEvent_0_OnPressed__DelegateSignature
// (BlueprintEvent)
// Parameters:
// const struct FKeyEvent&                 KeyEvent                                               (BlueprintVisible, BlueprintReadOnly, Parm)

void UWBP_Settings_Page_Gamepad_C::BndEvt__WBP_Settings_Page_Keyboard_WBP_Button_Generic_RevertToDefault_K2Node_ComponentBoundEvent_0_OnPressed__DelegateSignature(const struct FKeyEvent& KeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_Page_Gamepad_C", "BndEvt__WBP_Settings_Page_Keyboard_WBP_Button_Generic_RevertToDefault_K2Node_ComponentBoundEvent_0_OnPressed__DelegateSignature");

	Params::WBP_Settings_Page_Gamepad_C_BndEvt__WBP_Settings_Page_Keyboard_WBP_Button_Generic_RevertToDefault_K2Node_ComponentBoundEvent_0_OnPressed__DelegateSignature Parms{};

	Parms.KeyEvent = std::move(KeyEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Settings_Page_Gamepad.WBP_Settings_Page_Gamepad_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_Settings_Page_Gamepad_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_Page_Gamepad_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Settings_Page_Gamepad.WBP_Settings_Page_Gamepad_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_Settings_Page_Gamepad_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_Page_Gamepad_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Settings_Page_Gamepad.WBP_Settings_Page_Gamepad_C.ExecuteUbergraph_WBP_Settings_Page_Gamepad
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Settings_Page_Gamepad_C::ExecuteUbergraph_WBP_Settings_Page_Gamepad(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_Page_Gamepad_C", "ExecuteUbergraph_WBP_Settings_Page_Gamepad");

	Params::WBP_Settings_Page_Gamepad_C_ExecuteUbergraph_WBP_Settings_Page_Gamepad Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Settings_Page_Gamepad.WBP_Settings_Page_Gamepad_C.OnAddedToFocusPath
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FFocusEvent&               InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UWBP_Settings_Page_Gamepad_C::OnAddedToFocusPath(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_Page_Gamepad_C", "OnAddedToFocusPath");

	Params::WBP_Settings_Page_Gamepad_C_OnAddedToFocusPath Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Settings_Page_Gamepad.WBP_Settings_Page_Gamepad_C.OnConfirmResetToDefault
// (BlueprintCallable, BlueprintEvent)

void UWBP_Settings_Page_Gamepad_C::OnConfirmResetToDefault()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_Page_Gamepad_C", "OnConfirmResetToDefault");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Settings_Page_Gamepad.WBP_Settings_Page_Gamepad_C.OnFocusReceived
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FFocusEvent&               InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWBP_Settings_Page_Gamepad_C::OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_Page_Gamepad_C", "OnFocusReceived");

	Params::WBP_Settings_Page_Gamepad_C_OnFocusReceived Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_Settings_Page_Gamepad.WBP_Settings_Page_Gamepad_C.OnGamepadConnectionChanged
// (BlueprintCallable, BlueprintEvent)

void UWBP_Settings_Page_Gamepad_C::OnGamepadConnectionChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_Page_Gamepad_C", "OnGamepadConnectionChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Settings_Page_Gamepad.WBP_Settings_Page_Gamepad_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Settings_Page_Gamepad_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_Page_Gamepad_C", "PreConstruct");

	Params::WBP_Settings_Page_Gamepad_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Settings_Page_Gamepad.WBP_Settings_Page_Gamepad_C.RefreshWidgetSwitcher
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ForceFocus                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Settings_Page_Gamepad_C::RefreshWidgetSwitcher(bool ForceFocus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_Page_Gamepad_C", "RefreshWidgetSwitcher");

	Params::WBP_Settings_Page_Gamepad_C_RefreshWidgetSwitcher Parms{};

	Parms.ForceFocus = ForceFocus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Settings_Page_Gamepad.WBP_Settings_Page_Gamepad_C.ResetToDefault
// (Private, BlueprintCallable, BlueprintEvent)

void UWBP_Settings_Page_Gamepad_C::ResetToDefault()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_Page_Gamepad_C", "ResetToDefault");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Settings_Page_Gamepad.WBP_Settings_Page_Gamepad_C.SetNoGamepadExplanation
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_Settings_Page_Gamepad_C::SetNoGamepadExplanation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_Page_Gamepad_C", "SetNoGamepadExplanation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Settings_Page_Gamepad.WBP_Settings_Page_Gamepad_C.SetupCustomNavigation
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPanelWidget*                     Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   ElementPerLine                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Settings_Page_Gamepad_C::SetupCustomNavigation(class UPanelWidget* Target, int32 ElementPerLine)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_Page_Gamepad_C", "SetupCustomNavigation");

	Params::WBP_Settings_Page_Gamepad_C_SetupCustomNavigation Parms{};

	Parms.Target = Target;
	Parms.ElementPerLine = ElementPerLine;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Settings_Page_Gamepad.WBP_Settings_Page_Gamepad_C.SetupPage
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_Settings_Page_Gamepad_C::SetupPage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_Page_Gamepad_C", "SetupPage");

	UObject::ProcessEvent(Func, nullptr);
}

}

