#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DM_ShowTrigger

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function DM_ShowTrigger.DM_ShowTrigger_C.ServiceTick
// 0x0130 (0x0130 - 0x0000)
struct DM_ShowTrigger_C_ServiceTick final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ConstParm, ReferenceParm)
	class APlayerCameraManagerZion*               CallFunc_Get_ReturnValue;                          // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameplayCamera*                        CallFunc_GetGameplayCamera_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x0038(0x0010)(ConstParm, ReferenceParm)
	uint8                                         Pad_48[0x8];                                       // 0x0048(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0050(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UPrimitiveComponent*>            CallFunc_BoxOverlapComponents_OutComponents;       // 0x00F8(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_BoxOverlapComponents_ReturnValue;         // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item;                           // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetGenerateOverlapEvents_ReturnValue;     // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             CallFunc_GetCollisionEnabled_ReturnValue;          // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11B[0x5];                                      // 0x011B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DM_ShowTrigger_C_ServiceTick) == 0x000010, "Wrong alignment on DM_ShowTrigger_C_ServiceTick");
static_assert(sizeof(DM_ShowTrigger_C_ServiceTick) == 0x000130, "Wrong size on DM_ShowTrigger_C_ServiceTick");
static_assert(offsetof(DM_ShowTrigger_C_ServiceTick, Temp_int_Array_Index_Variable) == 0x000000, "Member 'DM_ShowTrigger_C_ServiceTick::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(DM_ShowTrigger_C_ServiceTick, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'DM_ShowTrigger_C_ServiceTick::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(DM_ShowTrigger_C_ServiceTick, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'DM_ShowTrigger_C_ServiceTick::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DM_ShowTrigger_C_ServiceTick, K2Node_MakeArray_Array) == 0x000010, "Member 'DM_ShowTrigger_C_ServiceTick::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(DM_ShowTrigger_C_ServiceTick, CallFunc_Get_ReturnValue) == 0x000020, "Member 'DM_ShowTrigger_C_ServiceTick::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(DM_ShowTrigger_C_ServiceTick, CallFunc_GetGameplayCamera_ReturnValue) == 0x000028, "Member 'DM_ShowTrigger_C_ServiceTick::CallFunc_GetGameplayCamera_ReturnValue' has a wrong offset!");
static_assert(offsetof(DM_ShowTrigger_C_ServiceTick, CallFunc_GetPlayerPawn_ReturnValue) == 0x000030, "Member 'DM_ShowTrigger_C_ServiceTick::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(DM_ShowTrigger_C_ServiceTick, K2Node_MakeArray_Array_1) == 0x000038, "Member 'DM_ShowTrigger_C_ServiceTick::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(DM_ShowTrigger_C_ServiceTick, CallFunc_GetTransform_ReturnValue) == 0x000050, "Member 'DM_ShowTrigger_C_ServiceTick::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(DM_ShowTrigger_C_ServiceTick, CallFunc_BreakTransform_Location) == 0x0000B0, "Member 'DM_ShowTrigger_C_ServiceTick::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(DM_ShowTrigger_C_ServiceTick, CallFunc_BreakTransform_Rotation) == 0x0000C8, "Member 'DM_ShowTrigger_C_ServiceTick::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(DM_ShowTrigger_C_ServiceTick, CallFunc_BreakTransform_Scale) == 0x0000E0, "Member 'DM_ShowTrigger_C_ServiceTick::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(DM_ShowTrigger_C_ServiceTick, CallFunc_BoxOverlapComponents_OutComponents) == 0x0000F8, "Member 'DM_ShowTrigger_C_ServiceTick::CallFunc_BoxOverlapComponents_OutComponents' has a wrong offset!");
static_assert(offsetof(DM_ShowTrigger_C_ServiceTick, CallFunc_BoxOverlapComponents_ReturnValue) == 0x000108, "Member 'DM_ShowTrigger_C_ServiceTick::CallFunc_BoxOverlapComponents_ReturnValue' has a wrong offset!");
static_assert(offsetof(DM_ShowTrigger_C_ServiceTick, CallFunc_Array_Length_ReturnValue) == 0x00010C, "Member 'DM_ShowTrigger_C_ServiceTick::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DM_ShowTrigger_C_ServiceTick, CallFunc_Array_Get_Item) == 0x000110, "Member 'DM_ShowTrigger_C_ServiceTick::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DM_ShowTrigger_C_ServiceTick, CallFunc_Less_IntInt_ReturnValue) == 0x000118, "Member 'DM_ShowTrigger_C_ServiceTick::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DM_ShowTrigger_C_ServiceTick, CallFunc_GetGenerateOverlapEvents_ReturnValue) == 0x000119, "Member 'DM_ShowTrigger_C_ServiceTick::CallFunc_GetGenerateOverlapEvents_ReturnValue' has a wrong offset!");
static_assert(offsetof(DM_ShowTrigger_C_ServiceTick, CallFunc_GetCollisionEnabled_ReturnValue) == 0x00011A, "Member 'DM_ShowTrigger_C_ServiceTick::CallFunc_GetCollisionEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(DM_ShowTrigger_C_ServiceTick, CallFunc_GetOwner_ReturnValue) == 0x000120, "Member 'DM_ShowTrigger_C_ServiceTick::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(DM_ShowTrigger_C_ServiceTick, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000128, "Member 'DM_ShowTrigger_C_ServiceTick::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(DM_ShowTrigger_C_ServiceTick, CallFunc_BooleanAND_ReturnValue) == 0x000129, "Member 'DM_ShowTrigger_C_ServiceTick::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function DM_ShowTrigger.DM_ShowTrigger_C.ToggleModule
// 0x0120 (0x0120 - 0x0000)
struct DM_ShowTrigger_C_ToggleModule final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManagerZion*               CallFunc_Get_ReturnValue;                          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameplayCamera*                        CallFunc_GetGameplayCamera_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x0030(0x0010)(ConstParm, ReferenceParm)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48[0x8];                                       // 0x0048(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0050(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UPrimitiveComponent*>            CallFunc_BoxOverlapComponents_OutComponents;       // 0x00F8(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_BoxOverlapComponents_ReturnValue;         // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item;                           // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DM_ShowTrigger_C_ToggleModule) == 0x000010, "Wrong alignment on DM_ShowTrigger_C_ToggleModule");
static_assert(sizeof(DM_ShowTrigger_C_ToggleModule) == 0x000120, "Wrong size on DM_ShowTrigger_C_ToggleModule");
static_assert(offsetof(DM_ShowTrigger_C_ToggleModule, Temp_int_Array_Index_Variable) == 0x000000, "Member 'DM_ShowTrigger_C_ToggleModule::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(DM_ShowTrigger_C_ToggleModule, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'DM_ShowTrigger_C_ToggleModule::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(DM_ShowTrigger_C_ToggleModule, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'DM_ShowTrigger_C_ToggleModule::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DM_ShowTrigger_C_ToggleModule, CallFunc_Get_ReturnValue) == 0x000010, "Member 'DM_ShowTrigger_C_ToggleModule::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(DM_ShowTrigger_C_ToggleModule, CallFunc_GetGameplayCamera_ReturnValue) == 0x000018, "Member 'DM_ShowTrigger_C_ToggleModule::CallFunc_GetGameplayCamera_ReturnValue' has a wrong offset!");
static_assert(offsetof(DM_ShowTrigger_C_ToggleModule, K2Node_MakeArray_Array) == 0x000020, "Member 'DM_ShowTrigger_C_ToggleModule::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(DM_ShowTrigger_C_ToggleModule, K2Node_MakeArray_Array_1) == 0x000030, "Member 'DM_ShowTrigger_C_ToggleModule::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(DM_ShowTrigger_C_ToggleModule, CallFunc_GetPlayerPawn_ReturnValue) == 0x000040, "Member 'DM_ShowTrigger_C_ToggleModule::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(DM_ShowTrigger_C_ToggleModule, CallFunc_GetTransform_ReturnValue) == 0x000050, "Member 'DM_ShowTrigger_C_ToggleModule::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(DM_ShowTrigger_C_ToggleModule, CallFunc_BreakTransform_Location) == 0x0000B0, "Member 'DM_ShowTrigger_C_ToggleModule::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(DM_ShowTrigger_C_ToggleModule, CallFunc_BreakTransform_Rotation) == 0x0000C8, "Member 'DM_ShowTrigger_C_ToggleModule::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(DM_ShowTrigger_C_ToggleModule, CallFunc_BreakTransform_Scale) == 0x0000E0, "Member 'DM_ShowTrigger_C_ToggleModule::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(DM_ShowTrigger_C_ToggleModule, CallFunc_BoxOverlapComponents_OutComponents) == 0x0000F8, "Member 'DM_ShowTrigger_C_ToggleModule::CallFunc_BoxOverlapComponents_OutComponents' has a wrong offset!");
static_assert(offsetof(DM_ShowTrigger_C_ToggleModule, CallFunc_BoxOverlapComponents_ReturnValue) == 0x000108, "Member 'DM_ShowTrigger_C_ToggleModule::CallFunc_BoxOverlapComponents_ReturnValue' has a wrong offset!");
static_assert(offsetof(DM_ShowTrigger_C_ToggleModule, CallFunc_Array_Length_ReturnValue) == 0x00010C, "Member 'DM_ShowTrigger_C_ToggleModule::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DM_ShowTrigger_C_ToggleModule, CallFunc_Array_Get_Item) == 0x000110, "Member 'DM_ShowTrigger_C_ToggleModule::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DM_ShowTrigger_C_ToggleModule, CallFunc_Less_IntInt_ReturnValue) == 0x000118, "Member 'DM_ShowTrigger_C_ToggleModule::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}

