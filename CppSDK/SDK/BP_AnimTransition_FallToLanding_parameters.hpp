#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AnimTransition_FallToLanding

#include "Basic.hpp"

#include "Zion_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_AnimTransition_FallToLanding.BP_AnimTransition_FallToLanding_C.Evaluate
// 0x0080 (0x0080 - 0x0000)
struct BP_AnimTransition_FallToLanding_C_Evaluate final
{
public:
	const class USpineAnimatorComponent*          Animator;                                          // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 CurrAnimationName;                                 // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 NextAnimationName;                                 // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpineAnimatorHistoryData              LastHistoryData;                                   // 0x0030(0x0018)(Edit, BlueprintVisible)
	struct FVector                                CallFunc_GetLastVelocity_ReturnValue;              // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AnimTransition_FallToLanding_C_Evaluate) == 0x000008, "Wrong alignment on BP_AnimTransition_FallToLanding_C_Evaluate");
static_assert(sizeof(BP_AnimTransition_FallToLanding_C_Evaluate) == 0x000080, "Wrong size on BP_AnimTransition_FallToLanding_C_Evaluate");
static_assert(offsetof(BP_AnimTransition_FallToLanding_C_Evaluate, Animator) == 0x000000, "Member 'BP_AnimTransition_FallToLanding_C_Evaluate::Animator' has a wrong offset!");
static_assert(offsetof(BP_AnimTransition_FallToLanding_C_Evaluate, CurrAnimationName) == 0x000008, "Member 'BP_AnimTransition_FallToLanding_C_Evaluate::CurrAnimationName' has a wrong offset!");
static_assert(offsetof(BP_AnimTransition_FallToLanding_C_Evaluate, NextAnimationName) == 0x000018, "Member 'BP_AnimTransition_FallToLanding_C_Evaluate::NextAnimationName' has a wrong offset!");
static_assert(offsetof(BP_AnimTransition_FallToLanding_C_Evaluate, ReturnValue) == 0x000028, "Member 'BP_AnimTransition_FallToLanding_C_Evaluate::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AnimTransition_FallToLanding_C_Evaluate, LastHistoryData) == 0x000030, "Member 'BP_AnimTransition_FallToLanding_C_Evaluate::LastHistoryData' has a wrong offset!");
static_assert(offsetof(BP_AnimTransition_FallToLanding_C_Evaluate, CallFunc_GetLastVelocity_ReturnValue) == 0x000048, "Member 'BP_AnimTransition_FallToLanding_C_Evaluate::CallFunc_GetLastVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AnimTransition_FallToLanding_C_Evaluate, CallFunc_BreakVector_X) == 0x000060, "Member 'BP_AnimTransition_FallToLanding_C_Evaluate::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_AnimTransition_FallToLanding_C_Evaluate, CallFunc_BreakVector_Y) == 0x000068, "Member 'BP_AnimTransition_FallToLanding_C_Evaluate::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_AnimTransition_FallToLanding_C_Evaluate, CallFunc_BreakVector_Z) == 0x000070, "Member 'BP_AnimTransition_FallToLanding_C_Evaluate::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_AnimTransition_FallToLanding_C_Evaluate, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000078, "Member 'BP_AnimTransition_FallToLanding_C_Evaluate::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");

}

