#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Interactable_GameMapChange

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Zion_structs.hpp"
#include "BP_Interactable_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Interactable_GameMapChange.BP_Interactable_GameMapChange_C
// 0x0060 (0x0388 - 0x0328)
class ABP_Interactable_GameMapChange_C : public ABP_Interactable_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Interactable_GameMapChange_C;    // 0x0328(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class URenderStateComponent*                  RenderState;                                       // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPaperSpriteComponent*                  PaperSprite;                                       // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FFadeDescriptionData                   FadeDescription;                                   // 0x0340(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FDataTableRowHandle                    GameMapHandle;                                     // 0x0360(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor)
	class FName                                   PlayerStartTag;                                    // 0x0370(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DelayBeforeTravel;                                 // 0x0378(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37C[0x4];                                      // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerControllerZion*                  InteractionController;                             // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Interactable_GameMapChange(int32 EntryPoint);
	void GetGameMapChangeProviderData(struct FGameMapChangeProviderData* OutGameMapChangeProviderData);
	void GetTargetMapData(struct FDataTableRowHandle* GameMapHandle_0, class FName* PlayerStartTag_0);
	void OnInteract(class APlayerController* Controller);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Interactable_GameMapChange_C">();
	}
	static class ABP_Interactable_GameMapChange_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Interactable_GameMapChange_C>();
	}
};
static_assert(alignof(ABP_Interactable_GameMapChange_C) == 0x000008, "Wrong alignment on ABP_Interactable_GameMapChange_C");
static_assert(sizeof(ABP_Interactable_GameMapChange_C) == 0x000388, "Wrong size on ABP_Interactable_GameMapChange_C");
static_assert(offsetof(ABP_Interactable_GameMapChange_C, UberGraphFrame_BP_Interactable_GameMapChange_C) == 0x000328, "Member 'ABP_Interactable_GameMapChange_C::UberGraphFrame_BP_Interactable_GameMapChange_C' has a wrong offset!");
static_assert(offsetof(ABP_Interactable_GameMapChange_C, RenderState) == 0x000330, "Member 'ABP_Interactable_GameMapChange_C::RenderState' has a wrong offset!");
static_assert(offsetof(ABP_Interactable_GameMapChange_C, PaperSprite) == 0x000338, "Member 'ABP_Interactable_GameMapChange_C::PaperSprite' has a wrong offset!");
static_assert(offsetof(ABP_Interactable_GameMapChange_C, FadeDescription) == 0x000340, "Member 'ABP_Interactable_GameMapChange_C::FadeDescription' has a wrong offset!");
static_assert(offsetof(ABP_Interactable_GameMapChange_C, GameMapHandle) == 0x000360, "Member 'ABP_Interactable_GameMapChange_C::GameMapHandle' has a wrong offset!");
static_assert(offsetof(ABP_Interactable_GameMapChange_C, PlayerStartTag) == 0x000370, "Member 'ABP_Interactable_GameMapChange_C::PlayerStartTag' has a wrong offset!");
static_assert(offsetof(ABP_Interactable_GameMapChange_C, DelayBeforeTravel) == 0x000378, "Member 'ABP_Interactable_GameMapChange_C::DelayBeforeTravel' has a wrong offset!");
static_assert(offsetof(ABP_Interactable_GameMapChange_C, InteractionController) == 0x000380, "Member 'ABP_Interactable_GameMapChange_C::InteractionController' has a wrong offset!");

}

