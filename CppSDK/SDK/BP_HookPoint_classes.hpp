#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HookPoint

#include "Basic.hpp"

#include "Zion_structs.hpp"
#include "Zion_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_HookPoint.BP_HookPoint_C
// 0x0030 (0x02F8 - 0x02C8)
class ABP_HookPoint_C : public AHookPoint
{
public:
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPaperSpriteComponent*                  DummyRender;                                       // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPaperSpriteComponent*                  EDITOR_Visual;                                     // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   HookText;                                          // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EAptitudeType                                 NecessaryAptitudeType;                             // 0x02E8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         FXSystem;                                          // 0x02F0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HookPoint_C">();
	}
	static class ABP_HookPoint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_HookPoint_C>();
	}
};
static_assert(alignof(ABP_HookPoint_C) == 0x000008, "Wrong alignment on ABP_HookPoint_C");
static_assert(sizeof(ABP_HookPoint_C) == 0x0002F8, "Wrong size on ABP_HookPoint_C");
static_assert(offsetof(ABP_HookPoint_C, StaticMesh) == 0x0002C8, "Member 'ABP_HookPoint_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_HookPoint_C, DummyRender) == 0x0002D0, "Member 'ABP_HookPoint_C::DummyRender' has a wrong offset!");
static_assert(offsetof(ABP_HookPoint_C, EDITOR_Visual) == 0x0002D8, "Member 'ABP_HookPoint_C::EDITOR_Visual' has a wrong offset!");
static_assert(offsetof(ABP_HookPoint_C, HookText) == 0x0002E0, "Member 'ABP_HookPoint_C::HookText' has a wrong offset!");
static_assert(offsetof(ABP_HookPoint_C, NecessaryAptitudeType) == 0x0002E8, "Member 'ABP_HookPoint_C::NecessaryAptitudeType' has a wrong offset!");
static_assert(offsetof(ABP_HookPoint_C, FXSystem) == 0x0002F0, "Member 'ABP_HookPoint_C::FXSystem' has a wrong offset!");

}

