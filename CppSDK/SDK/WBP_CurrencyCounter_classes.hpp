#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CurrencyCounter

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Zion_structs.hpp"
#include "Zion_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_CurrencyCounter.WBP_CurrencyCounter_C
// 0x0050 (0x0580 - 0x0530)
class UWBP_CurrencyCounter_C final : public UUserWidgetCurrencyCounter
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0530(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       AddCurrencyAnim;                                   // 0x0538(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ShowAccumulatedCurrencyAnim;                       // 0x0540(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       HideAnim;                                          // 0x0548(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ShowAnim;                                          // 0x0550(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UTextBlock*                             AccumulatedCurrencyText;                           // 0x0558(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CurrencyIcon;                                      // 0x0560(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             CurrencyText;                                      // 0x0568(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             MovingAccumulatedCurrencyText;                     // 0x0570(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UInventoryComponent*                    Inventory_Component;                               // 0x0578(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, NoDestructor, AdvancedDisplay, UObjectWrapper, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_WBP_CurrencyCounter(int32 EntryPoint);
	void OnAccumulatingCurrencyTimerFinished();
	void OnHide();
	void OnSetAccumulatedCurrencyText(const int32 Currency);
	void OnSetCurrencyText(const int32 Currency);
	void OnShow();
	void OnStartAccumulatingCurrency();
	void PreConstruct(bool IsDesignTime);
	void WidgetAnimationEvt_AddCurrencyAnim_K2Node_WidgetAnimationEvent_1();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_CurrencyCounter_C">();
	}
	static class UWBP_CurrencyCounter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_CurrencyCounter_C>();
	}
};
static_assert(alignof(UWBP_CurrencyCounter_C) == 0x000008, "Wrong alignment on UWBP_CurrencyCounter_C");
static_assert(sizeof(UWBP_CurrencyCounter_C) == 0x000580, "Wrong size on UWBP_CurrencyCounter_C");
static_assert(offsetof(UWBP_CurrencyCounter_C, UberGraphFrame) == 0x000530, "Member 'UWBP_CurrencyCounter_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_CurrencyCounter_C, AddCurrencyAnim) == 0x000538, "Member 'UWBP_CurrencyCounter_C::AddCurrencyAnim' has a wrong offset!");
static_assert(offsetof(UWBP_CurrencyCounter_C, ShowAccumulatedCurrencyAnim) == 0x000540, "Member 'UWBP_CurrencyCounter_C::ShowAccumulatedCurrencyAnim' has a wrong offset!");
static_assert(offsetof(UWBP_CurrencyCounter_C, HideAnim) == 0x000548, "Member 'UWBP_CurrencyCounter_C::HideAnim' has a wrong offset!");
static_assert(offsetof(UWBP_CurrencyCounter_C, ShowAnim) == 0x000550, "Member 'UWBP_CurrencyCounter_C::ShowAnim' has a wrong offset!");
static_assert(offsetof(UWBP_CurrencyCounter_C, AccumulatedCurrencyText) == 0x000558, "Member 'UWBP_CurrencyCounter_C::AccumulatedCurrencyText' has a wrong offset!");
static_assert(offsetof(UWBP_CurrencyCounter_C, CurrencyIcon) == 0x000560, "Member 'UWBP_CurrencyCounter_C::CurrencyIcon' has a wrong offset!");
static_assert(offsetof(UWBP_CurrencyCounter_C, CurrencyText) == 0x000568, "Member 'UWBP_CurrencyCounter_C::CurrencyText' has a wrong offset!");
static_assert(offsetof(UWBP_CurrencyCounter_C, MovingAccumulatedCurrencyText) == 0x000570, "Member 'UWBP_CurrencyCounter_C::MovingAccumulatedCurrencyText' has a wrong offset!");
static_assert(offsetof(UWBP_CurrencyCounter_C, Inventory_Component) == 0x000578, "Member 'UWBP_CurrencyCounter_C::Inventory_Component' has a wrong offset!");

}

