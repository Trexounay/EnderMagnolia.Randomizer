#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DM_Time

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function DM_Time.DM_Time_C.ServiceTick
// 0x01F8 (0x01F8 - 0x0000)
struct DM_Time_C_ServiceTick final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0048)(HasGetValueTypeHash)
	double                                        Temp_real_Variable_2;                              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_3;                              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0090(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00D8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0120(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0138(0x0010)()
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_1;      // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_162[0x6];                                      // 0x0162(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInputKeyDown_ReturnValue;               // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInputKeyDown_ReturnValue_1;             // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17A[0x6];                                      // 0x017A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInputKeyDown_ReturnValue_2;             // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WasInputKeyJustPressed_ReturnValue;       // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18A[0x6];                                      // 0x018A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_1;                           // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WasInputKeyJustPressed_ReturnValue_1;     // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WasInputKeyJustPressed_ReturnValue_2;     // 0x01AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WasInputKeyJustPressed_ReturnValue_3;     // 0x01AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_1;    // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AD[0x3];                                      // 0x01AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGlobalTimeDilation_ReturnValue;        // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_CustomTimeDilation_ImplicitCast; // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_player_time_scale_ImplicitCast; // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_CustomTimeDilation_ImplicitCast_1; // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_CustomTimeDilation_ImplicitCast_2; // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetGlobalTimeDilation_TimeDilation_ImplicitCast; // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_time_scale_ImplicitCast;        // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetGlobalTimeDilation_TimeDilation_ImplicitCast_1; // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetGlobalTimeDilation_TimeDilation_ImplicitCast_2; // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DM_Time_C_ServiceTick) == 0x000008, "Wrong alignment on DM_Time_C_ServiceTick");
static_assert(sizeof(DM_Time_C_ServiceTick) == 0x0001F8, "Wrong size on DM_Time_C_ServiceTick");
static_assert(offsetof(DM_Time_C_ServiceTick, Temp_bool_Variable) == 0x000000, "Member 'DM_Time_C_ServiceTick::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(DM_Time_C_ServiceTick, Temp_real_Variable) == 0x000008, "Member 'DM_Time_C_ServiceTick::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(DM_Time_C_ServiceTick, Temp_real_Variable_1) == 0x000010, "Member 'DM_Time_C_ServiceTick::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(DM_Time_C_ServiceTick, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000018, "Member 'DM_Time_C_ServiceTick::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DM_Time_C_ServiceTick, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'DM_Time_C_ServiceTick::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(DM_Time_C_ServiceTick, Temp_real_Variable_2) == 0x000068, "Member 'DM_Time_C_ServiceTick::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(DM_Time_C_ServiceTick, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000070, "Member 'DM_Time_C_ServiceTick::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DM_Time_C_ServiceTick, CallFunc_BooleanAND_ReturnValue) == 0x000078, "Member 'DM_Time_C_ServiceTick::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(DM_Time_C_ServiceTick, Temp_real_Variable_3) == 0x000080, "Member 'DM_Time_C_ServiceTick::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(DM_Time_C_ServiceTick, Temp_bool_Variable_1) == 0x000088, "Member 'DM_Time_C_ServiceTick::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(DM_Time_C_ServiceTick, K2Node_MakeStruct_FormatArgumentData_1) == 0x000090, "Member 'DM_Time_C_ServiceTick::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(DM_Time_C_ServiceTick, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000D8, "Member 'DM_Time_C_ServiceTick::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(DM_Time_C_ServiceTick, K2Node_MakeArray_Array) == 0x000120, "Member 'DM_Time_C_ServiceTick::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(DM_Time_C_ServiceTick, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000130, "Member 'DM_Time_C_ServiceTick::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DM_Time_C_ServiceTick, CallFunc_Format_ReturnValue) == 0x000138, "Member 'DM_Time_C_ServiceTick::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(DM_Time_C_ServiceTick, CallFunc_GetPlayerPawn_ReturnValue) == 0x000148, "Member 'DM_Time_C_ServiceTick::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(DM_Time_C_ServiceTick, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x000150, "Member 'DM_Time_C_ServiceTick::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DM_Time_C_ServiceTick, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000158, "Member 'DM_Time_C_ServiceTick::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DM_Time_C_ServiceTick, CallFunc_NotEqual_DoubleDouble_ReturnValue_1) == 0x000160, "Member 'DM_Time_C_ServiceTick::CallFunc_NotEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DM_Time_C_ServiceTick, CallFunc_BooleanAND_ReturnValue_1) == 0x000161, "Member 'DM_Time_C_ServiceTick::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DM_Time_C_ServiceTick, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000168, "Member 'DM_Time_C_ServiceTick::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DM_Time_C_ServiceTick, CallFunc_GetPlayerController_ReturnValue) == 0x000170, "Member 'DM_Time_C_ServiceTick::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(DM_Time_C_ServiceTick, CallFunc_IsInputKeyDown_ReturnValue) == 0x000178, "Member 'DM_Time_C_ServiceTick::CallFunc_IsInputKeyDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(DM_Time_C_ServiceTick, CallFunc_IsInputKeyDown_ReturnValue_1) == 0x000179, "Member 'DM_Time_C_ServiceTick::CallFunc_IsInputKeyDown_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DM_Time_C_ServiceTick, K2Node_Select_Default) == 0x000180, "Member 'DM_Time_C_ServiceTick::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(DM_Time_C_ServiceTick, CallFunc_IsInputKeyDown_ReturnValue_2) == 0x000188, "Member 'DM_Time_C_ServiceTick::CallFunc_IsInputKeyDown_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DM_Time_C_ServiceTick, CallFunc_WasInputKeyJustPressed_ReturnValue) == 0x000189, "Member 'DM_Time_C_ServiceTick::CallFunc_WasInputKeyJustPressed_ReturnValue' has a wrong offset!");
static_assert(offsetof(DM_Time_C_ServiceTick, K2Node_Select_Default_1) == 0x000190, "Member 'DM_Time_C_ServiceTick::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(DM_Time_C_ServiceTick, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000198, "Member 'DM_Time_C_ServiceTick::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DM_Time_C_ServiceTick, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0001A0, "Member 'DM_Time_C_ServiceTick::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DM_Time_C_ServiceTick, CallFunc_BooleanOR_ReturnValue) == 0x0001A8, "Member 'DM_Time_C_ServiceTick::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(DM_Time_C_ServiceTick, CallFunc_WasInputKeyJustPressed_ReturnValue_1) == 0x0001A9, "Member 'DM_Time_C_ServiceTick::CallFunc_WasInputKeyJustPressed_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DM_Time_C_ServiceTick, CallFunc_WasInputKeyJustPressed_ReturnValue_2) == 0x0001AA, "Member 'DM_Time_C_ServiceTick::CallFunc_WasInputKeyJustPressed_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DM_Time_C_ServiceTick, CallFunc_WasInputKeyJustPressed_ReturnValue_3) == 0x0001AB, "Member 'DM_Time_C_ServiceTick::CallFunc_WasInputKeyJustPressed_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DM_Time_C_ServiceTick, CallFunc_EqualEqual_DoubleDouble_ReturnValue_1) == 0x0001AC, "Member 'DM_Time_C_ServiceTick::CallFunc_EqualEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DM_Time_C_ServiceTick, CallFunc_GetGlobalTimeDilation_ReturnValue) == 0x0001B0, "Member 'DM_Time_C_ServiceTick::CallFunc_GetGlobalTimeDilation_ReturnValue' has a wrong offset!");
static_assert(offsetof(DM_Time_C_ServiceTick, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0001B8, "Member 'DM_Time_C_ServiceTick::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DM_Time_C_ServiceTick, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0001C0, "Member 'DM_Time_C_ServiceTick::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DM_Time_C_ServiceTick, K2Node_VariableSet_CustomTimeDilation_ImplicitCast) == 0x0001C8, "Member 'DM_Time_C_ServiceTick::K2Node_VariableSet_CustomTimeDilation_ImplicitCast' has a wrong offset!");
static_assert(offsetof(DM_Time_C_ServiceTick, K2Node_VariableSet_player_time_scale_ImplicitCast) == 0x0001D0, "Member 'DM_Time_C_ServiceTick::K2Node_VariableSet_player_time_scale_ImplicitCast' has a wrong offset!");
static_assert(offsetof(DM_Time_C_ServiceTick, K2Node_VariableSet_CustomTimeDilation_ImplicitCast_1) == 0x0001D8, "Member 'DM_Time_C_ServiceTick::K2Node_VariableSet_CustomTimeDilation_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(DM_Time_C_ServiceTick, K2Node_VariableSet_CustomTimeDilation_ImplicitCast_2) == 0x0001DC, "Member 'DM_Time_C_ServiceTick::K2Node_VariableSet_CustomTimeDilation_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(DM_Time_C_ServiceTick, CallFunc_SetGlobalTimeDilation_TimeDilation_ImplicitCast) == 0x0001E0, "Member 'DM_Time_C_ServiceTick::CallFunc_SetGlobalTimeDilation_TimeDilation_ImplicitCast' has a wrong offset!");
static_assert(offsetof(DM_Time_C_ServiceTick, K2Node_VariableSet_time_scale_ImplicitCast) == 0x0001E8, "Member 'DM_Time_C_ServiceTick::K2Node_VariableSet_time_scale_ImplicitCast' has a wrong offset!");
static_assert(offsetof(DM_Time_C_ServiceTick, CallFunc_SetGlobalTimeDilation_TimeDilation_ImplicitCast_1) == 0x0001F0, "Member 'DM_Time_C_ServiceTick::CallFunc_SetGlobalTimeDilation_TimeDilation_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(DM_Time_C_ServiceTick, CallFunc_SetGlobalTimeDilation_TimeDilation_ImplicitCast_2) == 0x0001F4, "Member 'DM_Time_C_ServiceTick::CallFunc_SetGlobalTimeDilation_TimeDilation_ImplicitCast_2' has a wrong offset!");

// Function DM_Time.DM_Time_C.ToggleModule
// 0x0005 (0x0005 - 0x0000)
struct DM_Time_C_ToggleModule final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DM_Time_C_ToggleModule) == 0x000001, "Wrong alignment on DM_Time_C_ToggleModule");
static_assert(sizeof(DM_Time_C_ToggleModule) == 0x000005, "Wrong size on DM_Time_C_ToggleModule");
static_assert(offsetof(DM_Time_C_ToggleModule, Temp_bool_Variable) == 0x000000, "Member 'DM_Time_C_ToggleModule::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(DM_Time_C_ToggleModule, Temp_byte_Variable) == 0x000001, "Member 'DM_Time_C_ToggleModule::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(DM_Time_C_ToggleModule, Temp_byte_Variable_1) == 0x000002, "Member 'DM_Time_C_ToggleModule::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(DM_Time_C_ToggleModule, K2Node_Select_Default) == 0x000003, "Member 'DM_Time_C_ToggleModule::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(DM_Time_C_ToggleModule, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'DM_Time_C_ToggleModule::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}

