#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_SlotSelection

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Zion_structs.hpp"
#include "Zion_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_SlotSelection.WBP_SlotSelection_C
// 0x00C8 (0x0528 - 0x0460)
class UWBP_SlotSelection_C : public UUserWidgetZion
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0460(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Hide;                                              // 0x0468(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Show;                                              // 0x0470(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWBP_Footer_C*                          WBP_Footer;                                        // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_SlotSelection_Entry_C*             WBP_SlotSelection_Entry;                           // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_SlotSelection_Entry_C*             WBP_SlotSelection_Entry_1;                         // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_SlotSelection_Entry_C*             WBP_SlotSelection_Entry_2;                         // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_SlotSelection_Entry_C*             WBP_SlotSelection_Entry_3;                         // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_SlotSelection_Entry_C*             WBP_SlotSelection_Entry_4;                         // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_SlotSelection_Entry_C*             WBP_SlotSelection_Entry_5;                         // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_SlotSelection_Entry_C*             WBP_SlotSelection_Entry_6;                         // 0x04B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_SlotSelection_Entry_C*             WBP_SlotSelection_Entry_7;                         // 0x04B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UWBP_SlotSelection_Entry_C*>     Entries;                                           // 0x04C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UWBP_SlotSelection_Entry_C*>     StackToLoad;                                       // 0x04D0(0x0010)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, ContainsInstancedReference, AdvancedDisplay)
	class UWBP_SlotSelection_Entry_C*             LoadingEntry;                                      // 0x04E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLoadingSlotAsync;                                // 0x04E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	uint8                                         Pad_4E9[0x7];                                      // 0x04E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  testset;                                           // 0x04F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UWBP_SlotSelection_Entry_C*             FocusedSlot;                                       // 0x0500(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	int32                                         TargetSlot_Index;                                  // 0x0508(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	uint8                                         Pad_50C[0x4];                                      // 0x050C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_SlotSelection_Entry_C*             SelectedSlotEntry;                                 // 0x0510(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ESaveCopyResult                               LastCopyResult;                                    // 0x0518(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bConvertingToNG_;                                  // 0x0519(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51A[0x6];                                      // 0x051A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_SaveSlotContext_C*                 SaveSlotContext;                                   // 0x0520(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)

public:
	void AddToSlotDataStack(const class UWBP_SlotSelection_Entry_C*& NewItem);
	void CloseMenu();
	void Construct();
	void ExecuteUbergraph_WBP_SlotSelection(int32 EntryPoint);
	void LaunchGameWithIntent(ELaunchGameIntent LaunchIntent, class UWBP_SlotSelection_Entry_C* SlotEntry);
	void LaunchLoadSlotDataAsyncProcess();
	void LoadSlotDataAsync();
	void OnBackUpAndConvertToNG_();
	void OnBackUpForNG_Created();
	void OnConvertToNG_();
	void OnCopyConfirmed();
	void OnFinish_34FC66E54DC729E3A646C7B706CB2626();
	void OnFinish_785D998843108C6A912AFE979306EA9C();
	struct FEventReply OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent);
	void OnLoadFinished(ESaveExistsType Result, class USaveGameZion* LoadedData);
	struct FEventReply OnPressCancel(const struct FKeyEvent& KeyEvent);
	void OnRequestCopy();
	void OnRequestDelete();
	void OnRequestedNewGameOrLoad();
	void OnRequestNG_();
	void OnSlotConfirmed(class UWBP_SlotSelection_Entry_C* Entry);
	void OnSlotFocused(class UWBP_SlotSelection_Entry_C* Entry);
	void SetupSlotEntries();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_SlotSelection_C">();
	}
	static class UWBP_SlotSelection_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_SlotSelection_C>();
	}
};
static_assert(alignof(UWBP_SlotSelection_C) == 0x000008, "Wrong alignment on UWBP_SlotSelection_C");
static_assert(sizeof(UWBP_SlotSelection_C) == 0x000528, "Wrong size on UWBP_SlotSelection_C");
static_assert(offsetof(UWBP_SlotSelection_C, UberGraphFrame) == 0x000460, "Member 'UWBP_SlotSelection_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_C, Hide) == 0x000468, "Member 'UWBP_SlotSelection_C::Hide' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_C, Show) == 0x000470, "Member 'UWBP_SlotSelection_C::Show' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_C, WBP_Footer) == 0x000478, "Member 'UWBP_SlotSelection_C::WBP_Footer' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_C, WBP_SlotSelection_Entry) == 0x000480, "Member 'UWBP_SlotSelection_C::WBP_SlotSelection_Entry' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_C, WBP_SlotSelection_Entry_1) == 0x000488, "Member 'UWBP_SlotSelection_C::WBP_SlotSelection_Entry_1' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_C, WBP_SlotSelection_Entry_2) == 0x000490, "Member 'UWBP_SlotSelection_C::WBP_SlotSelection_Entry_2' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_C, WBP_SlotSelection_Entry_3) == 0x000498, "Member 'UWBP_SlotSelection_C::WBP_SlotSelection_Entry_3' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_C, WBP_SlotSelection_Entry_4) == 0x0004A0, "Member 'UWBP_SlotSelection_C::WBP_SlotSelection_Entry_4' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_C, WBP_SlotSelection_Entry_5) == 0x0004A8, "Member 'UWBP_SlotSelection_C::WBP_SlotSelection_Entry_5' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_C, WBP_SlotSelection_Entry_6) == 0x0004B0, "Member 'UWBP_SlotSelection_C::WBP_SlotSelection_Entry_6' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_C, WBP_SlotSelection_Entry_7) == 0x0004B8, "Member 'UWBP_SlotSelection_C::WBP_SlotSelection_Entry_7' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_C, Entries) == 0x0004C0, "Member 'UWBP_SlotSelection_C::Entries' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_C, StackToLoad) == 0x0004D0, "Member 'UWBP_SlotSelection_C::StackToLoad' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_C, LoadingEntry) == 0x0004E0, "Member 'UWBP_SlotSelection_C::LoadingEntry' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_C, IsLoadingSlotAsync) == 0x0004E8, "Member 'UWBP_SlotSelection_C::IsLoadingSlotAsync' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_C, testset) == 0x0004F0, "Member 'UWBP_SlotSelection_C::testset' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_C, FocusedSlot) == 0x000500, "Member 'UWBP_SlotSelection_C::FocusedSlot' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_C, TargetSlot_Index) == 0x000508, "Member 'UWBP_SlotSelection_C::TargetSlot_Index' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_C, SelectedSlotEntry) == 0x000510, "Member 'UWBP_SlotSelection_C::SelectedSlotEntry' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_C, LastCopyResult) == 0x000518, "Member 'UWBP_SlotSelection_C::LastCopyResult' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_C, bConvertingToNG_) == 0x000519, "Member 'UWBP_SlotSelection_C::bConvertingToNG_' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_C, SaveSlotContext) == 0x000520, "Member 'UWBP_SlotSelection_C::SaveSlotContext' has a wrong offset!");

}

