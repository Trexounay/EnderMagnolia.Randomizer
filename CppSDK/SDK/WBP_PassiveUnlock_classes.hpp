#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PassiveUnlock

#include "Basic.hpp"

#include "Zion_structs.hpp"
#include "Zion_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_PassiveUnlock.WBP_PassiveUnlock_C
// 0x0190 (0x05F0 - 0x0460)
class UWBP_PassiveUnlock_C final : public UUserWidgetZion
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0460(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       SkillLevelUp;                                      // 0x0468(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SkillUnlock;                                       // 0x0470(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Hide;                                              // 0x0478(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Show;                                              // 0x0480(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UNamedSlot*                             AnimationHolder;                                   // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BG_Line;                                           // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               HorizontalBox_UpgradeCost;                         // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_1;                                           // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_LevelMax;                                  // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_NoContent;                                 // 0x04B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_NotEnoughCurrency;                         // 0x04B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Upgrade;                                   // 0x04C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUniformGridPanelZion*                  PassiveListHolder;                                 // 0x04C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Content;                                   // 0x04D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             UpgradeCostValue;                                  // 0x04D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Currency_C*                        WBP_Currency;                                      // 0x04E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Footer_C*                          WBP_Footer;                                        // 0x04E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Item_Description_C*                WBP_Item_Description;                              // 0x04F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Item_UpgradeInfoHolder_C*          WBP_Item_UpgradeInfoHolder;                        // 0x04F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PassiveUnlock_Button_C*            WBP_PassiveUnlock_Button;                          // 0x0500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Scrollbox_C*                       WBP_Scrollbox;                                     // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_SeparateLine2_C*                   WBP_SeparateLine2;                                 // 0x0510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_0;                                  // 0x0518(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_Content;                            // 0x0520(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_SpiritSkillEntry_C*                FocusedEntry;                                      // 0x0528(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class UInventoryComponent*                    InventoryComponent;                                // 0x0530(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, NoDestructor, AdvancedDisplay, UObjectWrapper, HasGetValueTypeHash)
	class UWBP_SpiritSkillEntry_C*                UnlockingEntry;                                    // 0x0538(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class UFMODEvent*                             SE_Confirm;                                        // 0x0540(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             SE_Failure;                                        // 0x0548(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             SE_PassiveUpgrade;                                 // 0x0550(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                LevelUpAnimation;                                  // 0x0558(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	struct FFooterData                            Footer_SPToggle;                                   // 0x0560(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UWBP_PassiveEntry_C*>            PassiveEntries;                                    // 0x05B8(0x0010)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, ContainsInstancedReference, AdvancedDisplay)
	class UPassiveComponent*                      Passive_Component;                                 // 0x05C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, NoDestructor, AdvancedDisplay, UObjectWrapper, HasGetValueTypeHash)
	class UWBP_PassiveEntry_C*                    UpgradingPassiveEntry;                             // 0x05D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class UWBP_GameMenu_C*                        gamemenu;                                          // 0x05D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	int32                                         DefaultMenuPageIndex;                              // 0x05E0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E4[0x4];                                      // 0x05E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             SE_OpenMenu;                                       // 0x05E8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

public:
	void CanUpgradePassiveData(const struct FInventoryItemPassiveData& InventoryItemPassiveData, bool* CanBeUpgraded);
	void CanUpgradePassiveDataHandle(const struct FDataTableRowHandle& Handle, bool* CanBeUpgraded);
	void CanUpgradePassiveEntry(class UWBP_PassiveEntry_C* PassiveEntry, bool* CanBeUpgraded);
	void ClearPassiveList();
	void Close();
	void Construct();
	void CreatePassiveList();
	void ExecuteUbergraph_WBP_PassiveUnlock(int32 EntryPoint);
	void HasEnoughCurrencyForUpgrade(class UWBP_PassiveEntry_C* PassiveEntry, bool* HasEnoughCurrency);
	void OnConformUpgradePassive();
	void OnFastTravel();
	void OnFinish_3B36581944E63C8BEB7D49BC6D83CFB7();
	void OnFinish_59F675024025FBA7191AF2A2C755CA13();
	void OnFocusedPassiveEntry(class UWBP_PassiveEntry_C* PassiveEntry);
	struct FEventReply OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent);
	void OnPassiveAnimationFinished();
	void OnPassiveChanged();
	struct FEventReply OnPressCancel(const struct FKeyEvent& KeyEvent);
	void OnPressedContextEntry(class UWBP_PassiveEntry_C* PassiveEntry);
	void OnPressedPassiveEntry(class UWBP_PassiveEntry_C* PassiveEntry);
	void RefreshCurrency(class UWBP_PassiveEntry_C* PassiveEntry);
	void RefreshPassiveEntries();
	void SetupUIForPassiveEntry(class UWBP_PassiveEntry_C* PassiveEntry);
	void UpgradePassiveEntry(class UWBP_PassiveEntry_C* PassiveEntry);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_PassiveUnlock_C">();
	}
	static class UWBP_PassiveUnlock_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_PassiveUnlock_C>();
	}
};
static_assert(alignof(UWBP_PassiveUnlock_C) == 0x000008, "Wrong alignment on UWBP_PassiveUnlock_C");
static_assert(sizeof(UWBP_PassiveUnlock_C) == 0x0005F0, "Wrong size on UWBP_PassiveUnlock_C");
static_assert(offsetof(UWBP_PassiveUnlock_C, UberGraphFrame) == 0x000460, "Member 'UWBP_PassiveUnlock_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveUnlock_C, SkillLevelUp) == 0x000468, "Member 'UWBP_PassiveUnlock_C::SkillLevelUp' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveUnlock_C, SkillUnlock) == 0x000470, "Member 'UWBP_PassiveUnlock_C::SkillUnlock' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveUnlock_C, Hide) == 0x000478, "Member 'UWBP_PassiveUnlock_C::Hide' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveUnlock_C, Show) == 0x000480, "Member 'UWBP_PassiveUnlock_C::Show' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveUnlock_C, AnimationHolder) == 0x000488, "Member 'UWBP_PassiveUnlock_C::AnimationHolder' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveUnlock_C, BG_Line) == 0x000490, "Member 'UWBP_PassiveUnlock_C::BG_Line' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveUnlock_C, HorizontalBox_UpgradeCost) == 0x000498, "Member 'UWBP_PassiveUnlock_C::HorizontalBox_UpgradeCost' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveUnlock_C, Image_1) == 0x0004A0, "Member 'UWBP_PassiveUnlock_C::Image_1' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveUnlock_C, Overlay_LevelMax) == 0x0004A8, "Member 'UWBP_PassiveUnlock_C::Overlay_LevelMax' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveUnlock_C, Overlay_NoContent) == 0x0004B0, "Member 'UWBP_PassiveUnlock_C::Overlay_NoContent' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveUnlock_C, Overlay_NotEnoughCurrency) == 0x0004B8, "Member 'UWBP_PassiveUnlock_C::Overlay_NotEnoughCurrency' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveUnlock_C, Overlay_Upgrade) == 0x0004C0, "Member 'UWBP_PassiveUnlock_C::Overlay_Upgrade' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveUnlock_C, PassiveListHolder) == 0x0004C8, "Member 'UWBP_PassiveUnlock_C::PassiveListHolder' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveUnlock_C, SizeBox_Content) == 0x0004D0, "Member 'UWBP_PassiveUnlock_C::SizeBox_Content' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveUnlock_C, UpgradeCostValue) == 0x0004D8, "Member 'UWBP_PassiveUnlock_C::UpgradeCostValue' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveUnlock_C, WBP_Currency) == 0x0004E0, "Member 'UWBP_PassiveUnlock_C::WBP_Currency' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveUnlock_C, WBP_Footer) == 0x0004E8, "Member 'UWBP_PassiveUnlock_C::WBP_Footer' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveUnlock_C, WBP_Item_Description) == 0x0004F0, "Member 'UWBP_PassiveUnlock_C::WBP_Item_Description' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveUnlock_C, WBP_Item_UpgradeInfoHolder) == 0x0004F8, "Member 'UWBP_PassiveUnlock_C::WBP_Item_UpgradeInfoHolder' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveUnlock_C, WBP_PassiveUnlock_Button) == 0x000500, "Member 'UWBP_PassiveUnlock_C::WBP_PassiveUnlock_Button' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveUnlock_C, WBP_Scrollbox) == 0x000508, "Member 'UWBP_PassiveUnlock_C::WBP_Scrollbox' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveUnlock_C, WBP_SeparateLine2) == 0x000510, "Member 'UWBP_PassiveUnlock_C::WBP_SeparateLine2' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveUnlock_C, WidgetSwitcher_0) == 0x000518, "Member 'UWBP_PassiveUnlock_C::WidgetSwitcher_0' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveUnlock_C, WidgetSwitcher_Content) == 0x000520, "Member 'UWBP_PassiveUnlock_C::WidgetSwitcher_Content' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveUnlock_C, FocusedEntry) == 0x000528, "Member 'UWBP_PassiveUnlock_C::FocusedEntry' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveUnlock_C, InventoryComponent) == 0x000530, "Member 'UWBP_PassiveUnlock_C::InventoryComponent' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveUnlock_C, UnlockingEntry) == 0x000538, "Member 'UWBP_PassiveUnlock_C::UnlockingEntry' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveUnlock_C, SE_Confirm) == 0x000540, "Member 'UWBP_PassiveUnlock_C::SE_Confirm' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveUnlock_C, SE_Failure) == 0x000548, "Member 'UWBP_PassiveUnlock_C::SE_Failure' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveUnlock_C, SE_PassiveUpgrade) == 0x000550, "Member 'UWBP_PassiveUnlock_C::SE_PassiveUpgrade' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveUnlock_C, LevelUpAnimation) == 0x000558, "Member 'UWBP_PassiveUnlock_C::LevelUpAnimation' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveUnlock_C, Footer_SPToggle) == 0x000560, "Member 'UWBP_PassiveUnlock_C::Footer_SPToggle' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveUnlock_C, PassiveEntries) == 0x0005B8, "Member 'UWBP_PassiveUnlock_C::PassiveEntries' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveUnlock_C, Passive_Component) == 0x0005C8, "Member 'UWBP_PassiveUnlock_C::Passive_Component' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveUnlock_C, UpgradingPassiveEntry) == 0x0005D0, "Member 'UWBP_PassiveUnlock_C::UpgradingPassiveEntry' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveUnlock_C, gamemenu) == 0x0005D8, "Member 'UWBP_PassiveUnlock_C::gamemenu' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveUnlock_C, DefaultMenuPageIndex) == 0x0005E0, "Member 'UWBP_PassiveUnlock_C::DefaultMenuPageIndex' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveUnlock_C, SE_OpenMenu) == 0x0005E8, "Member 'UWBP_PassiveUnlock_C::SE_OpenMenu' has a wrong offset!");

}

