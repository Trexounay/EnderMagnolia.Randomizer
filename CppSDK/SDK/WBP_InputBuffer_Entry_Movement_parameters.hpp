#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_InputBuffer_Entry_Movement

#include "Basic.hpp"

#include "Zion_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_InputBuffer_Entry_Movement.WBP_InputBuffer_Entry_Movement_C.SetStickInput
// 0x0058 (0x0058 - 0x0000)
struct WBP_InputBuffer_Entry_Movement_C_SetStickInput final
{
public:
	struct FVector2D                              StickInput;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InputBuffer_Entry_Movement_C_SetStickInput) == 0x000008, "Wrong alignment on WBP_InputBuffer_Entry_Movement_C_SetStickInput");
static_assert(sizeof(WBP_InputBuffer_Entry_Movement_C_SetStickInput) == 0x000058, "Wrong size on WBP_InputBuffer_Entry_Movement_C_SetStickInput");
static_assert(offsetof(WBP_InputBuffer_Entry_Movement_C_SetStickInput, StickInput) == 0x000000, "Member 'WBP_InputBuffer_Entry_Movement_C_SetStickInput::StickInput' has a wrong offset!");
static_assert(offsetof(WBP_InputBuffer_Entry_Movement_C_SetStickInput, CallFunc_GetDesiredSize_ReturnValue) == 0x000010, "Member 'WBP_InputBuffer_Entry_Movement_C_SetStickInput::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InputBuffer_Entry_Movement_C_SetStickInput, CallFunc_BreakVector2D_X) == 0x000020, "Member 'WBP_InputBuffer_Entry_Movement_C_SetStickInput::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_InputBuffer_Entry_Movement_C_SetStickInput, CallFunc_BreakVector2D_Y) == 0x000028, "Member 'WBP_InputBuffer_Entry_Movement_C_SetStickInput::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_InputBuffer_Entry_Movement_C_SetStickInput, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000030, "Member 'WBP_InputBuffer_Entry_Movement_C_SetStickInput::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InputBuffer_Entry_Movement_C_SetStickInput, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000038, "Member 'WBP_InputBuffer_Entry_Movement_C_SetStickInput::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InputBuffer_Entry_Movement_C_SetStickInput, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x000048, "Member 'WBP_InputBuffer_Entry_Movement_C_SetStickInput::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");

// Function WBP_InputBuffer_Entry_Movement.WBP_InputBuffer_Entry_Movement_C.SetInputDirection
// 0x00A8 (0x00A8 - 0x0000)
struct WBP_InputBuffer_Entry_Movement_C_SetInputDirection final
{
public:
	EInputDirection                               InputDirection;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputDirection                               Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_2;                            // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_3;                            // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_4;                            // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_5;                            // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_6;                            // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_7;                            // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_8;                            // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default;                             // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InputBuffer_Entry_Movement_C_SetInputDirection) == 0x000008, "Wrong alignment on WBP_InputBuffer_Entry_Movement_C_SetInputDirection");
static_assert(sizeof(WBP_InputBuffer_Entry_Movement_C_SetInputDirection) == 0x0000A8, "Wrong size on WBP_InputBuffer_Entry_Movement_C_SetInputDirection");
static_assert(offsetof(WBP_InputBuffer_Entry_Movement_C_SetInputDirection, InputDirection) == 0x000000, "Member 'WBP_InputBuffer_Entry_Movement_C_SetInputDirection::InputDirection' has a wrong offset!");
static_assert(offsetof(WBP_InputBuffer_Entry_Movement_C_SetInputDirection, Temp_byte_Variable) == 0x000001, "Member 'WBP_InputBuffer_Entry_Movement_C_SetInputDirection::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InputBuffer_Entry_Movement_C_SetInputDirection, Temp_struct_Variable) == 0x000008, "Member 'WBP_InputBuffer_Entry_Movement_C_SetInputDirection::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InputBuffer_Entry_Movement_C_SetInputDirection, Temp_struct_Variable_1) == 0x000018, "Member 'WBP_InputBuffer_Entry_Movement_C_SetInputDirection::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InputBuffer_Entry_Movement_C_SetInputDirection, Temp_struct_Variable_2) == 0x000028, "Member 'WBP_InputBuffer_Entry_Movement_C_SetInputDirection::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_InputBuffer_Entry_Movement_C_SetInputDirection, Temp_struct_Variable_3) == 0x000038, "Member 'WBP_InputBuffer_Entry_Movement_C_SetInputDirection::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_InputBuffer_Entry_Movement_C_SetInputDirection, Temp_struct_Variable_4) == 0x000048, "Member 'WBP_InputBuffer_Entry_Movement_C_SetInputDirection::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_InputBuffer_Entry_Movement_C_SetInputDirection, Temp_struct_Variable_5) == 0x000058, "Member 'WBP_InputBuffer_Entry_Movement_C_SetInputDirection::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_InputBuffer_Entry_Movement_C_SetInputDirection, Temp_struct_Variable_6) == 0x000068, "Member 'WBP_InputBuffer_Entry_Movement_C_SetInputDirection::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_InputBuffer_Entry_Movement_C_SetInputDirection, Temp_struct_Variable_7) == 0x000078, "Member 'WBP_InputBuffer_Entry_Movement_C_SetInputDirection::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_InputBuffer_Entry_Movement_C_SetInputDirection, Temp_struct_Variable_8) == 0x000088, "Member 'WBP_InputBuffer_Entry_Movement_C_SetInputDirection::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_InputBuffer_Entry_Movement_C_SetInputDirection, K2Node_Select_Default) == 0x000098, "Member 'WBP_InputBuffer_Entry_Movement_C_SetInputDirection::K2Node_Select_Default' has a wrong offset!");

}

