#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_GameMenu_Page_Passive

#include "Basic.hpp"

#include "Zion_structs.hpp"
#include "Zion_classes.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_GameMenu_Page_Passive.WBP_GameMenu_Page_Passive_C
// 0x0140 (0x05B8 - 0x0478)
class UWBP_GameMenu_Page_Passive_C final : public UUserWidgetGameMenu_Page
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0478(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UUniformGridPanelZion*                  PassiveListHolder;                                 // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_EquipLock_C*                       WBP_EquipLock;                                     // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Item_Description_C*                WBP_Item_Description;                              // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Loadout_C*                         WBP_Loadout;                                       // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Passive_EquippedList_C*            WBP_Passive_EquippedList;                          // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Scrollbox_C*                       WBP_Scrollbox;                                     // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_SeparateLine2_C*                   WBP_SeparateLine2;                                 // 0x04B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPassiveComponent*                      PassiveComponent;                                  // 0x04B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, NoDestructor, AdvancedDisplay, UObjectWrapper, HasGetValueTypeHash)
	TArray<class UWBP_PassiveEntry_C*>            PassiveEntries;                                    // 0x04C0(0x0010)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, ContainsInstancedReference, AdvancedDisplay)
	struct FFooterData                            FooterEntry_Unequip;                               // 0x04D0(0x0058)(Edit, BlueprintVisible, BlueprintReadOnly)
	struct FFooterData                            FooterEntry_Equip;                                 // 0x0528(0x0058)(Edit, BlueprintVisible, BlueprintReadOnly)
	class UFMODEvent*                             SE_EquipFail;                                      // 0x0580(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             SE_EquipSuccess;                                   // 0x0588(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             SE_Unequip;                                        // 0x0590(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             SE_LoadoutChange;                                  // 0x0598(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         EquippedPassivesColumnCount;                       // 0x05A0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A4[0x4];                                      // 0x05A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_PassiveEntry_C*                    FocusedPassiveEntry;                               // 0x05A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          NewVar;                                            // 0x05B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__WBP_GameMenu_Page_Passive_WBP_Passive_EquippedList_K2Node_ComponentBoundEvent_1_OnFocusedEntry__DelegateSignature(class UWBP_PassiveEntry_C* PassiveEntry);
	void BndEvt__WBP_GameMenu_Page_Passive_WBP_Passive_EquippedList_K2Node_ComponentBoundEvent_2_OnPressedContextEntry__DelegateSignature(class UWBP_PassiveEntry_C* PassiveEntry);
	void CachePassiveComponent();
	void CanChangeLoadout(bool* bCanChange);
	void ChangeEquippedLoadout(int32 NewLoadoutIndex);
	void Construct();
	void CreatePassiveList();
	void EquipPassiveEntry(class UWBP_PassiveEntry_C* PassiveEntry);
	void ExecuteUbergraph_WBP_GameMenu_Page_Passive(int32 EntryPoint);
	class UWidget* Nav_ToEquippedPassiveList(EUINavigation Navigation_0);
	class UWidget* Nav_ToPassiveList(EUINavigation Navigation_0);
	void OnFocusedPassiveEntry(class UWBP_PassiveEntry_C* PassiveEntry);
	struct FEventReply OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent);
	void OnPageClosed();
	void OnPassiveChanged();
	void OnPressedPassiveEntry(class UWBP_PassiveEntry_C* PassiveEntry);
	void OnPressedPassiveEntryContext(class UWBP_PassiveEntry_C* PassiveEntry);
	struct FEventReply OnPressNextAlt(const struct FKeyEvent& KeyEvent);
	struct FEventReply OnPressPreviousAlt(const struct FKeyEvent& KeyEvent);
	void RefreshFooterForPassiveEntry(class UWBP_PassiveEntry_C* PassiveEntry);
	void RefreshList();
	void RefreshLoadoutVisibility();
	void RefreshPassiveListNavigation();
	void SetLockVisibility();
	void ToggleEquipPassiveEntry(class UWBP_PassiveEntry_C* PassiveEntry);
	void UnequipFromEquippedEntry(const class UWBP_PassiveEntry_C*& PassiveEntry);
	void UnequipPassiveEntry(class UWBP_PassiveEntry_C* PassiveEntry);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_GameMenu_Page_Passive_C">();
	}
	static class UWBP_GameMenu_Page_Passive_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_GameMenu_Page_Passive_C>();
	}
};
static_assert(alignof(UWBP_GameMenu_Page_Passive_C) == 0x000008, "Wrong alignment on UWBP_GameMenu_Page_Passive_C");
static_assert(sizeof(UWBP_GameMenu_Page_Passive_C) == 0x0005B8, "Wrong size on UWBP_GameMenu_Page_Passive_C");
static_assert(offsetof(UWBP_GameMenu_Page_Passive_C, UberGraphFrame) == 0x000478, "Member 'UWBP_GameMenu_Page_Passive_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_GameMenu_Page_Passive_C, PassiveListHolder) == 0x000480, "Member 'UWBP_GameMenu_Page_Passive_C::PassiveListHolder' has a wrong offset!");
static_assert(offsetof(UWBP_GameMenu_Page_Passive_C, WBP_EquipLock) == 0x000488, "Member 'UWBP_GameMenu_Page_Passive_C::WBP_EquipLock' has a wrong offset!");
static_assert(offsetof(UWBP_GameMenu_Page_Passive_C, WBP_Item_Description) == 0x000490, "Member 'UWBP_GameMenu_Page_Passive_C::WBP_Item_Description' has a wrong offset!");
static_assert(offsetof(UWBP_GameMenu_Page_Passive_C, WBP_Loadout) == 0x000498, "Member 'UWBP_GameMenu_Page_Passive_C::WBP_Loadout' has a wrong offset!");
static_assert(offsetof(UWBP_GameMenu_Page_Passive_C, WBP_Passive_EquippedList) == 0x0004A0, "Member 'UWBP_GameMenu_Page_Passive_C::WBP_Passive_EquippedList' has a wrong offset!");
static_assert(offsetof(UWBP_GameMenu_Page_Passive_C, WBP_Scrollbox) == 0x0004A8, "Member 'UWBP_GameMenu_Page_Passive_C::WBP_Scrollbox' has a wrong offset!");
static_assert(offsetof(UWBP_GameMenu_Page_Passive_C, WBP_SeparateLine2) == 0x0004B0, "Member 'UWBP_GameMenu_Page_Passive_C::WBP_SeparateLine2' has a wrong offset!");
static_assert(offsetof(UWBP_GameMenu_Page_Passive_C, PassiveComponent) == 0x0004B8, "Member 'UWBP_GameMenu_Page_Passive_C::PassiveComponent' has a wrong offset!");
static_assert(offsetof(UWBP_GameMenu_Page_Passive_C, PassiveEntries) == 0x0004C0, "Member 'UWBP_GameMenu_Page_Passive_C::PassiveEntries' has a wrong offset!");
static_assert(offsetof(UWBP_GameMenu_Page_Passive_C, FooterEntry_Unequip) == 0x0004D0, "Member 'UWBP_GameMenu_Page_Passive_C::FooterEntry_Unequip' has a wrong offset!");
static_assert(offsetof(UWBP_GameMenu_Page_Passive_C, FooterEntry_Equip) == 0x000528, "Member 'UWBP_GameMenu_Page_Passive_C::FooterEntry_Equip' has a wrong offset!");
static_assert(offsetof(UWBP_GameMenu_Page_Passive_C, SE_EquipFail) == 0x000580, "Member 'UWBP_GameMenu_Page_Passive_C::SE_EquipFail' has a wrong offset!");
static_assert(offsetof(UWBP_GameMenu_Page_Passive_C, SE_EquipSuccess) == 0x000588, "Member 'UWBP_GameMenu_Page_Passive_C::SE_EquipSuccess' has a wrong offset!");
static_assert(offsetof(UWBP_GameMenu_Page_Passive_C, SE_Unequip) == 0x000590, "Member 'UWBP_GameMenu_Page_Passive_C::SE_Unequip' has a wrong offset!");
static_assert(offsetof(UWBP_GameMenu_Page_Passive_C, SE_LoadoutChange) == 0x000598, "Member 'UWBP_GameMenu_Page_Passive_C::SE_LoadoutChange' has a wrong offset!");
static_assert(offsetof(UWBP_GameMenu_Page_Passive_C, EquippedPassivesColumnCount) == 0x0005A0, "Member 'UWBP_GameMenu_Page_Passive_C::EquippedPassivesColumnCount' has a wrong offset!");
static_assert(offsetof(UWBP_GameMenu_Page_Passive_C, FocusedPassiveEntry) == 0x0005A8, "Member 'UWBP_GameMenu_Page_Passive_C::FocusedPassiveEntry' has a wrong offset!");
static_assert(offsetof(UWBP_GameMenu_Page_Passive_C, NewVar) == 0x0005B0, "Member 'UWBP_GameMenu_Page_Passive_C::NewVar' has a wrong offset!");

}

