#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Interactable_GameMapChange

#include "Basic.hpp"

#include "Zion_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Interactable_GameMapChange.BP_Interactable_GameMapChange_C.ExecuteUbergraph_BP_Interactable_GameMapChange
// 0x0058 (0x0058 - 0x0000)
struct BP_Interactable_GameMapChange_C_ExecuteUbergraph_BP_Interactable_GameMapChange final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    CallFunc_GetTargetMapData_GameMapHandle;           // 0x0008(0x0010)(NoDestructor)
	class FName                                   CallFunc_GetTargetMapData_PlayerStartTag;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_Event_Controller;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerControllerZion*                  K2Node_DynamicCast_AsPlayer_Controller_Zion;       // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWorldLoaderSubsystem*                  CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Interactable_GameMapChange_C_ExecuteUbergraph_BP_Interactable_GameMapChange) == 0x000008, "Wrong alignment on BP_Interactable_GameMapChange_C_ExecuteUbergraph_BP_Interactable_GameMapChange");
static_assert(sizeof(BP_Interactable_GameMapChange_C_ExecuteUbergraph_BP_Interactable_GameMapChange) == 0x000058, "Wrong size on BP_Interactable_GameMapChange_C_ExecuteUbergraph_BP_Interactable_GameMapChange");
static_assert(offsetof(BP_Interactable_GameMapChange_C_ExecuteUbergraph_BP_Interactable_GameMapChange, EntryPoint) == 0x000000, "Member 'BP_Interactable_GameMapChange_C_ExecuteUbergraph_BP_Interactable_GameMapChange::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Interactable_GameMapChange_C_ExecuteUbergraph_BP_Interactable_GameMapChange, CallFunc_GetTargetMapData_GameMapHandle) == 0x000008, "Member 'BP_Interactable_GameMapChange_C_ExecuteUbergraph_BP_Interactable_GameMapChange::CallFunc_GetTargetMapData_GameMapHandle' has a wrong offset!");
static_assert(offsetof(BP_Interactable_GameMapChange_C_ExecuteUbergraph_BP_Interactable_GameMapChange, CallFunc_GetTargetMapData_PlayerStartTag) == 0x000018, "Member 'BP_Interactable_GameMapChange_C_ExecuteUbergraph_BP_Interactable_GameMapChange::CallFunc_GetTargetMapData_PlayerStartTag' has a wrong offset!");
static_assert(offsetof(BP_Interactable_GameMapChange_C_ExecuteUbergraph_BP_Interactable_GameMapChange, K2Node_Event_Controller) == 0x000020, "Member 'BP_Interactable_GameMapChange_C_ExecuteUbergraph_BP_Interactable_GameMapChange::K2Node_Event_Controller' has a wrong offset!");
static_assert(offsetof(BP_Interactable_GameMapChange_C_ExecuteUbergraph_BP_Interactable_GameMapChange, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_Interactable_GameMapChange_C_ExecuteUbergraph_BP_Interactable_GameMapChange::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_GameMapChange_C_ExecuteUbergraph_BP_Interactable_GameMapChange, K2Node_DynamicCast_AsPlayer_Controller_Zion) == 0x000030, "Member 'BP_Interactable_GameMapChange_C_ExecuteUbergraph_BP_Interactable_GameMapChange::K2Node_DynamicCast_AsPlayer_Controller_Zion' has a wrong offset!");
static_assert(offsetof(BP_Interactable_GameMapChange_C_ExecuteUbergraph_BP_Interactable_GameMapChange, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_Interactable_GameMapChange_C_ExecuteUbergraph_BP_Interactable_GameMapChange::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Interactable_GameMapChange_C_ExecuteUbergraph_BP_Interactable_GameMapChange, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000040, "Member 'BP_Interactable_GameMapChange_C_ExecuteUbergraph_BP_Interactable_GameMapChange::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_GameMapChange_C_ExecuteUbergraph_BP_Interactable_GameMapChange, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_Interactable_GameMapChange_C_ExecuteUbergraph_BP_Interactable_GameMapChange::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_GameMapChange_C_ExecuteUbergraph_BP_Interactable_GameMapChange, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000050, "Member 'BP_Interactable_GameMapChange_C_ExecuteUbergraph_BP_Interactable_GameMapChange::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_Interactable_GameMapChange.BP_Interactable_GameMapChange_C.GetGameMapChangeProviderData
// 0x0138 (0x0138 - 0x0000)
struct BP_Interactable_GameMapChange_C_GetGameMapChangeProviderData final
{
public:
	struct FGameMapChangeProviderData             OutGameMapChangeProviderData;                      // 0x0000(0x0040)(Parm, OutParm, NoDestructor)
	struct FVector                                DestinationWorldLocation;                          // 0x0040(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerStart*>                   CallFunc_GetAllActorsOfClass_OutActors;            // 0x0070(0x0010)(ReferenceParm)
	struct FMapTransitionSpawnPointData           K2Node_MakeStruct_MapTransitionSpawnPointData;     // 0x0080(0x0010)(NoDestructor, HasGetValueTypeHash)
	class APlayerStart*                           CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    CallFunc_GetMapTransitionRowHandleFromTransitionSpawnPointData_out_MapTransitionRowHandle; // 0x0098(0x0010)(NoDestructor)
	bool                                          CallFunc_GetMapTransitionRowHandleFromTransitionSpawnPointData_ReturnValue; // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameMapChangeProviderData             K2Node_MakeStruct_GameMapChangeProviderData;       // 0x00F8(0x0040)(NoDestructor)
};
static_assert(alignof(BP_Interactable_GameMapChange_C_GetGameMapChangeProviderData) == 0x000008, "Wrong alignment on BP_Interactable_GameMapChange_C_GetGameMapChangeProviderData");
static_assert(sizeof(BP_Interactable_GameMapChange_C_GetGameMapChangeProviderData) == 0x000138, "Wrong size on BP_Interactable_GameMapChange_C_GetGameMapChangeProviderData");
static_assert(offsetof(BP_Interactable_GameMapChange_C_GetGameMapChangeProviderData, OutGameMapChangeProviderData) == 0x000000, "Member 'BP_Interactable_GameMapChange_C_GetGameMapChangeProviderData::OutGameMapChangeProviderData' has a wrong offset!");
static_assert(offsetof(BP_Interactable_GameMapChange_C_GetGameMapChangeProviderData, DestinationWorldLocation) == 0x000040, "Member 'BP_Interactable_GameMapChange_C_GetGameMapChangeProviderData::DestinationWorldLocation' has a wrong offset!");
static_assert(offsetof(BP_Interactable_GameMapChange_C_GetGameMapChangeProviderData, Temp_bool_True_if_break_was_hit_Variable) == 0x000058, "Member 'BP_Interactable_GameMapChange_C_GetGameMapChangeProviderData::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_Interactable_GameMapChange_C_GetGameMapChangeProviderData, Temp_int_Array_Index_Variable) == 0x00005C, "Member 'BP_Interactable_GameMapChange_C_GetGameMapChangeProviderData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Interactable_GameMapChange_C_GetGameMapChangeProviderData, CallFunc_Not_PreBool_ReturnValue) == 0x000060, "Member 'BP_Interactable_GameMapChange_C_GetGameMapChangeProviderData::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_GameMapChange_C_GetGameMapChangeProviderData, Temp_int_Loop_Counter_Variable) == 0x000064, "Member 'BP_Interactable_GameMapChange_C_GetGameMapChangeProviderData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Interactable_GameMapChange_C_GetGameMapChangeProviderData, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'BP_Interactable_GameMapChange_C_GetGameMapChangeProviderData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_GameMapChange_C_GetGameMapChangeProviderData, CallFunc_GetAllActorsOfClass_OutActors) == 0x000070, "Member 'BP_Interactable_GameMapChange_C_GetGameMapChangeProviderData::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_Interactable_GameMapChange_C_GetGameMapChangeProviderData, K2Node_MakeStruct_MapTransitionSpawnPointData) == 0x000080, "Member 'BP_Interactable_GameMapChange_C_GetGameMapChangeProviderData::K2Node_MakeStruct_MapTransitionSpawnPointData' has a wrong offset!");
static_assert(offsetof(BP_Interactable_GameMapChange_C_GetGameMapChangeProviderData, CallFunc_Array_Get_Item) == 0x000090, "Member 'BP_Interactable_GameMapChange_C_GetGameMapChangeProviderData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Interactable_GameMapChange_C_GetGameMapChangeProviderData, CallFunc_GetMapTransitionRowHandleFromTransitionSpawnPointData_out_MapTransitionRowHandle) == 0x000098, "Member 'BP_Interactable_GameMapChange_C_GetGameMapChangeProviderData::CallFunc_GetMapTransitionRowHandleFromTransitionSpawnPointData_out_MapTransitionRowHandle' has a wrong offset!");
static_assert(offsetof(BP_Interactable_GameMapChange_C_GetGameMapChangeProviderData, CallFunc_GetMapTransitionRowHandleFromTransitionSpawnPointData_ReturnValue) == 0x0000A8, "Member 'BP_Interactable_GameMapChange_C_GetGameMapChangeProviderData::CallFunc_GetMapTransitionRowHandleFromTransitionSpawnPointData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_GameMapChange_C_GetGameMapChangeProviderData, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000B0, "Member 'BP_Interactable_GameMapChange_C_GetGameMapChangeProviderData::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_GameMapChange_C_GetGameMapChangeProviderData, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000C8, "Member 'BP_Interactable_GameMapChange_C_GetGameMapChangeProviderData::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_GameMapChange_C_GetGameMapChangeProviderData, CallFunc_Array_Length_ReturnValue) == 0x0000CC, "Member 'BP_Interactable_GameMapChange_C_GetGameMapChangeProviderData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_GameMapChange_C_GetGameMapChangeProviderData, CallFunc_Less_IntInt_ReturnValue) == 0x0000D0, "Member 'BP_Interactable_GameMapChange_C_GetGameMapChangeProviderData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_GameMapChange_C_GetGameMapChangeProviderData, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000D8, "Member 'BP_Interactable_GameMapChange_C_GetGameMapChangeProviderData::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Interactable_GameMapChange_C_GetGameMapChangeProviderData, CallFunc_BooleanAND_ReturnValue) == 0x0000F0, "Member 'BP_Interactable_GameMapChange_C_GetGameMapChangeProviderData::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_GameMapChange_C_GetGameMapChangeProviderData, K2Node_MakeStruct_GameMapChangeProviderData) == 0x0000F8, "Member 'BP_Interactable_GameMapChange_C_GetGameMapChangeProviderData::K2Node_MakeStruct_GameMapChangeProviderData' has a wrong offset!");

// Function BP_Interactable_GameMapChange.BP_Interactable_GameMapChange_C.GetTargetMapData
// 0x0018 (0x0018 - 0x0000)
struct BP_Interactable_GameMapChange_C_GetTargetMapData final
{
public:
	struct FDataTableRowHandle                    GameMapHandle_0;                                   // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
	class FName                                   PlayerStartTag_0;                                  // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Interactable_GameMapChange_C_GetTargetMapData) == 0x000008, "Wrong alignment on BP_Interactable_GameMapChange_C_GetTargetMapData");
static_assert(sizeof(BP_Interactable_GameMapChange_C_GetTargetMapData) == 0x000018, "Wrong size on BP_Interactable_GameMapChange_C_GetTargetMapData");
static_assert(offsetof(BP_Interactable_GameMapChange_C_GetTargetMapData, GameMapHandle_0) == 0x000000, "Member 'BP_Interactable_GameMapChange_C_GetTargetMapData::GameMapHandle_0' has a wrong offset!");
static_assert(offsetof(BP_Interactable_GameMapChange_C_GetTargetMapData, PlayerStartTag_0) == 0x000010, "Member 'BP_Interactable_GameMapChange_C_GetTargetMapData::PlayerStartTag_0' has a wrong offset!");

// Function BP_Interactable_GameMapChange.BP_Interactable_GameMapChange_C.OnInteract
// 0x0008 (0x0008 - 0x0000)
struct BP_Interactable_GameMapChange_C_OnInteract final
{
public:
	class APlayerController*                      Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Interactable_GameMapChange_C_OnInteract) == 0x000008, "Wrong alignment on BP_Interactable_GameMapChange_C_OnInteract");
static_assert(sizeof(BP_Interactable_GameMapChange_C_OnInteract) == 0x000008, "Wrong size on BP_Interactable_GameMapChange_C_OnInteract");
static_assert(offsetof(BP_Interactable_GameMapChange_C_OnInteract, Controller) == 0x000000, "Member 'BP_Interactable_GameMapChange_C_OnInteract::Controller' has a wrong offset!");

}

