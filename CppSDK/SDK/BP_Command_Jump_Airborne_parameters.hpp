#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Command_Jump_Airborne

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_Command_Jump_Airborne.BP_Command_Jump_Airborne_C.OnCanBeStarted
// 0x0028 (0x0028 - 0x0000)
struct BP_Command_Jump_Airborne_C_OnCanBeStarted final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPawn_ReturnValue;                      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnCanBeStarted_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacterZion*                         K2Node_DynamicCast_AsCharacter_Zion;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldConsiderJumpAsAirborne_ReturnValue; // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Command_Jump_Airborne_C_OnCanBeStarted) == 0x000008, "Wrong alignment on BP_Command_Jump_Airborne_C_OnCanBeStarted");
static_assert(sizeof(BP_Command_Jump_Airborne_C_OnCanBeStarted) == 0x000028, "Wrong size on BP_Command_Jump_Airborne_C_OnCanBeStarted");
static_assert(offsetof(BP_Command_Jump_Airborne_C_OnCanBeStarted, ReturnValue) == 0x000000, "Member 'BP_Command_Jump_Airborne_C_OnCanBeStarted::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Command_Jump_Airborne_C_OnCanBeStarted, CallFunc_GetPawn_ReturnValue) == 0x000008, "Member 'BP_Command_Jump_Airborne_C_OnCanBeStarted::CallFunc_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Command_Jump_Airborne_C_OnCanBeStarted, CallFunc_OnCanBeStarted_ReturnValue) == 0x000010, "Member 'BP_Command_Jump_Airborne_C_OnCanBeStarted::CallFunc_OnCanBeStarted_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Command_Jump_Airborne_C_OnCanBeStarted, K2Node_DynamicCast_AsCharacter_Zion) == 0x000018, "Member 'BP_Command_Jump_Airborne_C_OnCanBeStarted::K2Node_DynamicCast_AsCharacter_Zion' has a wrong offset!");
static_assert(offsetof(BP_Command_Jump_Airborne_C_OnCanBeStarted, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_Command_Jump_Airborne_C_OnCanBeStarted::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Command_Jump_Airborne_C_OnCanBeStarted, CallFunc_ShouldConsiderJumpAsAirborne_ReturnValue) == 0x000021, "Member 'BP_Command_Jump_Airborne_C_OnCanBeStarted::CallFunc_ShouldConsiderJumpAsAirborne_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Command_Jump_Airborne_C_OnCanBeStarted, CallFunc_BooleanAND_ReturnValue) == 0x000022, "Member 'BP_Command_Jump_Airborne_C_OnCanBeStarted::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

