#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AbilityRepeatLauncher

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "Zion_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AbilityRepeatLauncher.BP_AbilityRepeatLauncher_C
// 0x0120 (0x03B0 - 0x0290)
class ABP_AbilityRepeatLauncher_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UFactionComponent*                      Faction;                                           // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   EditorVisual;                                      // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAbilityComponent*                      Ability;                                           // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         TriggerDelay;                                      // 0x02B8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InitialDelay;                                      // 0x02BC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAbilityData                           AbilityData;                                       // 0x02C0(0x00E0)(Edit, BlueprintVisible, BlueprintReadOnly)
	struct FTimerHandle                           TimerHandle;                                       // 0x03A0(0x0008)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)

public:
	void TriggerAbility();
	void SetupTimer();
	void ReceiveBeginPlay();
	void OnActorToggle();
	void ExecuteUbergraph_BP_AbilityRepeatLauncher(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AbilityRepeatLauncher_C">();
	}
	static class ABP_AbilityRepeatLauncher_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AbilityRepeatLauncher_C>();
	}
};
static_assert(alignof(ABP_AbilityRepeatLauncher_C) == 0x000010, "Wrong alignment on ABP_AbilityRepeatLauncher_C");
static_assert(sizeof(ABP_AbilityRepeatLauncher_C) == 0x0003B0, "Wrong size on ABP_AbilityRepeatLauncher_C");
static_assert(offsetof(ABP_AbilityRepeatLauncher_C, UberGraphFrame) == 0x000290, "Member 'ABP_AbilityRepeatLauncher_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_AbilityRepeatLauncher_C, Faction) == 0x000298, "Member 'ABP_AbilityRepeatLauncher_C::Faction' has a wrong offset!");
static_assert(offsetof(ABP_AbilityRepeatLauncher_C, Scene) == 0x0002A0, "Member 'ABP_AbilityRepeatLauncher_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_AbilityRepeatLauncher_C, EditorVisual) == 0x0002A8, "Member 'ABP_AbilityRepeatLauncher_C::EditorVisual' has a wrong offset!");
static_assert(offsetof(ABP_AbilityRepeatLauncher_C, Ability) == 0x0002B0, "Member 'ABP_AbilityRepeatLauncher_C::Ability' has a wrong offset!");
static_assert(offsetof(ABP_AbilityRepeatLauncher_C, TriggerDelay) == 0x0002B8, "Member 'ABP_AbilityRepeatLauncher_C::TriggerDelay' has a wrong offset!");
static_assert(offsetof(ABP_AbilityRepeatLauncher_C, InitialDelay) == 0x0002BC, "Member 'ABP_AbilityRepeatLauncher_C::InitialDelay' has a wrong offset!");
static_assert(offsetof(ABP_AbilityRepeatLauncher_C, AbilityData) == 0x0002C0, "Member 'ABP_AbilityRepeatLauncher_C::AbilityData' has a wrong offset!");
static_assert(offsetof(ABP_AbilityRepeatLauncher_C, TimerHandle) == 0x0003A0, "Member 'ABP_AbilityRepeatLauncher_C::TimerHandle' has a wrong offset!");

}

