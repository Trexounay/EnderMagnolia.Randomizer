#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PlayerSPGauge

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Zion_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_PlayerSPGauge.WBP_PlayerSPGauge_C
// 0x0078 (0x04D8 - 0x0460)
class UWBP_PlayerSPGauge_C final : public UUserWidgetZion
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0460(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       MaxReached;                                        // 0x0468(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SpecialMode_Off;                                   // 0x0470(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SpecialMode_On;                                    // 0x0478(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Loop;                                              // 0x0480(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class URefreshableRichTextBlock*              ButtonText;                                        // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URefreshableRichTextBlock*              ButtonText_Effect;                                 // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Eff_Light;                                         // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_SPGauge_C*                         WBP_SPGauge_Main;                                  // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_SPGauge_C*                         WBP_SPGauge_Sub;                                   // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UStatSPComponent*                       SPComponent;                                       // 0x04B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UWBP_SPGauge_C*>                 SubGauges;                                         // 0x04B8(0x0010)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, ContainsInstancedReference, AdvancedDisplay)
	class USkillComponent*                        SkillComponent;                                    // 0x04C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         SPPerSubGauge;                                     // 0x04D0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSpecialModeEnabled;                               // 0x04D4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void DisableSpecialMode();
	void EnableSpecialMode();
	void ExecuteUbergraph_WBP_PlayerSPGauge(int32 EntryPoint);
	void GetSPRatio(double* SPRatio);
	int32 GetSPValue();
	void Initialize(class APawn* Pawn, class APlayerController* Controller);
	void InpActEvt_IA_Special_Modifier_K2Node_EnhancedInputActionEvent_0(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Special_Modifier_K2Node_EnhancedInputActionEvent_1(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Special_Modifier_K2Node_EnhancedInputActionEvent_2(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Special_Modifier_K2Node_EnhancedInputActionEvent_3(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void OnMaxSPChanged();
	void OnSPChanged();
	void OnSPReachedMax();
	void Refresh();
	void RefreshAnimation();
	void RefreshSPGauge();
	void RefreshSubGauges();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_PlayerSPGauge_C">();
	}
	static class UWBP_PlayerSPGauge_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_PlayerSPGauge_C>();
	}
};
static_assert(alignof(UWBP_PlayerSPGauge_C) == 0x000008, "Wrong alignment on UWBP_PlayerSPGauge_C");
static_assert(sizeof(UWBP_PlayerSPGauge_C) == 0x0004D8, "Wrong size on UWBP_PlayerSPGauge_C");
static_assert(offsetof(UWBP_PlayerSPGauge_C, UberGraphFrame) == 0x000460, "Member 'UWBP_PlayerSPGauge_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerSPGauge_C, MaxReached) == 0x000468, "Member 'UWBP_PlayerSPGauge_C::MaxReached' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerSPGauge_C, SpecialMode_Off) == 0x000470, "Member 'UWBP_PlayerSPGauge_C::SpecialMode_Off' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerSPGauge_C, SpecialMode_On) == 0x000478, "Member 'UWBP_PlayerSPGauge_C::SpecialMode_On' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerSPGauge_C, Loop) == 0x000480, "Member 'UWBP_PlayerSPGauge_C::Loop' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerSPGauge_C, ButtonText) == 0x000488, "Member 'UWBP_PlayerSPGauge_C::ButtonText' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerSPGauge_C, ButtonText_Effect) == 0x000490, "Member 'UWBP_PlayerSPGauge_C::ButtonText_Effect' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerSPGauge_C, Eff_Light) == 0x000498, "Member 'UWBP_PlayerSPGauge_C::Eff_Light' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerSPGauge_C, WBP_SPGauge_Main) == 0x0004A0, "Member 'UWBP_PlayerSPGauge_C::WBP_SPGauge_Main' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerSPGauge_C, WBP_SPGauge_Sub) == 0x0004A8, "Member 'UWBP_PlayerSPGauge_C::WBP_SPGauge_Sub' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerSPGauge_C, SPComponent) == 0x0004B0, "Member 'UWBP_PlayerSPGauge_C::SPComponent' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerSPGauge_C, SubGauges) == 0x0004B8, "Member 'UWBP_PlayerSPGauge_C::SubGauges' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerSPGauge_C, SkillComponent) == 0x0004C8, "Member 'UWBP_PlayerSPGauge_C::SkillComponent' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerSPGauge_C, SPPerSubGauge) == 0x0004D0, "Member 'UWBP_PlayerSPGauge_C::SPPerSubGauge' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerSPGauge_C, bSpecialModeEnabled) == 0x0004D4, "Member 'UWBP_PlayerSPGauge_C::bSpecialModeEnabled' has a wrong offset!");

}

