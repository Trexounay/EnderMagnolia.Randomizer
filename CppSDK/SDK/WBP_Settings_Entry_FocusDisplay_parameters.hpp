#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Settings_Entry_FocusDisplay

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_Settings_Entry_FocusDisplay.WBP_Settings_Entry_FocusDisplay_C.SetFocusDisplay
// 0x0018 (0x0018 - 0x0000)
struct WBP_Settings_Entry_FocusDisplay_C_SetFocusDisplay final
{
public:
	bool                                          Focused_0;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_Entry_FocusDisplay_C_SetFocusDisplay) == 0x000008, "Wrong alignment on WBP_Settings_Entry_FocusDisplay_C_SetFocusDisplay");
static_assert(sizeof(WBP_Settings_Entry_FocusDisplay_C_SetFocusDisplay) == 0x000018, "Wrong size on WBP_Settings_Entry_FocusDisplay_C_SetFocusDisplay");
static_assert(offsetof(WBP_Settings_Entry_FocusDisplay_C_SetFocusDisplay, Focused_0) == 0x000000, "Member 'WBP_Settings_Entry_FocusDisplay_C_SetFocusDisplay::Focused_0' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_FocusDisplay_C_SetFocusDisplay, Temp_byte_Variable) == 0x000001, "Member 'WBP_Settings_Entry_FocusDisplay_C_SetFocusDisplay::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_FocusDisplay_C_SetFocusDisplay, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_Settings_Entry_FocusDisplay_C_SetFocusDisplay::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_FocusDisplay_C_SetFocusDisplay, Temp_bool_Variable) == 0x000003, "Member 'WBP_Settings_Entry_FocusDisplay_C_SetFocusDisplay::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_FocusDisplay_C_SetFocusDisplay, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WBP_Settings_Entry_FocusDisplay_C_SetFocusDisplay::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_FocusDisplay_C_SetFocusDisplay, K2Node_Select_Default) == 0x000010, "Member 'WBP_Settings_Entry_FocusDisplay_C_SetFocusDisplay::K2Node_Select_Default' has a wrong offset!");

// Function WBP_Settings_Entry_FocusDisplay.WBP_Settings_Entry_FocusDisplay_C.ExecuteUbergraph_WBP_Settings_Entry_FocusDisplay
// 0x0004 (0x0004 - 0x0000)
struct WBP_Settings_Entry_FocusDisplay_C_ExecuteUbergraph_WBP_Settings_Entry_FocusDisplay final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_Entry_FocusDisplay_C_ExecuteUbergraph_WBP_Settings_Entry_FocusDisplay) == 0x000004, "Wrong alignment on WBP_Settings_Entry_FocusDisplay_C_ExecuteUbergraph_WBP_Settings_Entry_FocusDisplay");
static_assert(sizeof(WBP_Settings_Entry_FocusDisplay_C_ExecuteUbergraph_WBP_Settings_Entry_FocusDisplay) == 0x000004, "Wrong size on WBP_Settings_Entry_FocusDisplay_C_ExecuteUbergraph_WBP_Settings_Entry_FocusDisplay");
static_assert(offsetof(WBP_Settings_Entry_FocusDisplay_C_ExecuteUbergraph_WBP_Settings_Entry_FocusDisplay, EntryPoint) == 0x000000, "Member 'WBP_Settings_Entry_FocusDisplay_C_ExecuteUbergraph_WBP_Settings_Entry_FocusDisplay::EntryPoint' has a wrong offset!");

}

