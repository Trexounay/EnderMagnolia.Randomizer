#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_SlotSelection_Entry

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Zion_structs.hpp"
#include "Zion_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_SlotSelection_Entry.WBP_SlotSelection_Entry_C
// 0x0130 (0x0590 - 0x0460)
class UWBP_SlotSelection_Entry_C : public UUserWidgetZion
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0460(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Focused;                                           // 0x0468(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Blue_Bottom;                                       // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Blue_Top;                                          // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ChapterValue;                                      // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCircularThrobber*                      CircularThrobber_119;                              // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               GenerationCount;                                   // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_NG_;                                 // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_119;                                         // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Motif;                                         // 0x04B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             LevelValue;                                        // 0x04B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 NG_AvailableTag;                                   // 0x04C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 NG_Tag;                                            // 0x04C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             NG_Value;                                          // 0x04D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Corrupt;                                   // 0x04D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Empty;                                     // 0x04E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Focused;                                   // 0x04E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_IncompatibleVersion;                       // 0x04F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Loading;                                   // 0x04F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_ValidData;                                 // 0x0500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             PlayTimeValue;                                     // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RestPointImg;                                      // 0x0510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             RestPointName;                                     // 0x0518(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             SaveDataVersionTextBlock;                          // 0x0520(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SilhouetteImg;                                     // 0x0528(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             SlotIndexTextBlock;                                // 0x0530(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_Slot;                               // 0x0538(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         SlotIndex;                                         // 0x0540(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_544[0x4];                                      // 0x0544(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class UWBP_SlotSelection_Entry_C* Entry)> OnFocused;               // 0x0548(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	ESaveExistsType                               SaveExistsType;                                    // 0x0558(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	uint8                                         Pad_559[0x7];                                      // 0x0559(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class UWBP_SlotSelection_Entry_C* Entry)> OnConfirmed;             // 0x0560(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(int32 SlotIndex)> OnContextRequested;                              // 0x0570(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class USaveGameZion*                          LoadedData;                                        // 0x0580(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          bInitialized;                                      // 0x0588(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          bCanConvertToNG_;                                  // 0x0589(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)

public:
	void CanConvertToNG_(bool* bCanConvertToNG__0);
	void DoesSaveExists(bool* SaveExists);
	void ExecuteUbergraph_WBP_SlotSelection_Entry(int32 EntryPoint);
	void Initialize(ESaveExistsType SaveExistsType_0, class USaveGameZion* LoadedData_0);
	void OnAddedToFocusPath(const struct FFocusEvent& InFocusEvent);
	struct FEventReply OnPressConfirm(const struct FKeyEvent& KeyEvent);
	struct FEventReply OnPressContext(const struct FKeyEvent& KeyEvent);
	void OnRemovedFromFocusPath(const struct FFocusEvent& InFocusEvent);
	void PreConstruct(bool IsDesignTime);
	void RequestContext();
	void SetAsLoading();
	void SetSlotIndex(int32 NewSlotIndex);
	void SetupFromSaveData(class USaveGameZion* InputPin);
	void SetupNG_(int32 NewGamePlusGeneration);
	void SetupRestPointData(class FName RowName);
	void SetupSilhouette(const TMap<EGameEndingType, int32>& InputPin);

	void IsInitialized(bool* bInitialized_0) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_SlotSelection_Entry_C">();
	}
	static class UWBP_SlotSelection_Entry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_SlotSelection_Entry_C>();
	}
};
static_assert(alignof(UWBP_SlotSelection_Entry_C) == 0x000008, "Wrong alignment on UWBP_SlotSelection_Entry_C");
static_assert(sizeof(UWBP_SlotSelection_Entry_C) == 0x000590, "Wrong size on UWBP_SlotSelection_Entry_C");
static_assert(offsetof(UWBP_SlotSelection_Entry_C, UberGraphFrame) == 0x000460, "Member 'UWBP_SlotSelection_Entry_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_Entry_C, Focused) == 0x000468, "Member 'UWBP_SlotSelection_Entry_C::Focused' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_Entry_C, Blue_Bottom) == 0x000470, "Member 'UWBP_SlotSelection_Entry_C::Blue_Bottom' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_Entry_C, Blue_Top) == 0x000478, "Member 'UWBP_SlotSelection_Entry_C::Blue_Top' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_Entry_C, ChapterValue) == 0x000480, "Member 'UWBP_SlotSelection_Entry_C::ChapterValue' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_Entry_C, CircularThrobber_119) == 0x000488, "Member 'UWBP_SlotSelection_Entry_C::CircularThrobber_119' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_Entry_C, GenerationCount) == 0x000490, "Member 'UWBP_SlotSelection_Entry_C::GenerationCount' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_Entry_C, HorizontalBox_NG_) == 0x000498, "Member 'UWBP_SlotSelection_Entry_C::HorizontalBox_NG_' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_Entry_C, Image) == 0x0004A0, "Member 'UWBP_SlotSelection_Entry_C::Image' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_Entry_C, Image_119) == 0x0004A8, "Member 'UWBP_SlotSelection_Entry_C::Image_119' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_Entry_C, Img_Motif) == 0x0004B0, "Member 'UWBP_SlotSelection_Entry_C::Img_Motif' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_Entry_C, LevelValue) == 0x0004B8, "Member 'UWBP_SlotSelection_Entry_C::LevelValue' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_Entry_C, NG_AvailableTag) == 0x0004C0, "Member 'UWBP_SlotSelection_Entry_C::NG_AvailableTag' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_Entry_C, NG_Tag) == 0x0004C8, "Member 'UWBP_SlotSelection_Entry_C::NG_Tag' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_Entry_C, NG_Value) == 0x0004D0, "Member 'UWBP_SlotSelection_Entry_C::NG_Value' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_Entry_C, Overlay_Corrupt) == 0x0004D8, "Member 'UWBP_SlotSelection_Entry_C::Overlay_Corrupt' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_Entry_C, Overlay_Empty) == 0x0004E0, "Member 'UWBP_SlotSelection_Entry_C::Overlay_Empty' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_Entry_C, Overlay_Focused) == 0x0004E8, "Member 'UWBP_SlotSelection_Entry_C::Overlay_Focused' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_Entry_C, Overlay_IncompatibleVersion) == 0x0004F0, "Member 'UWBP_SlotSelection_Entry_C::Overlay_IncompatibleVersion' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_Entry_C, Overlay_Loading) == 0x0004F8, "Member 'UWBP_SlotSelection_Entry_C::Overlay_Loading' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_Entry_C, Overlay_ValidData) == 0x000500, "Member 'UWBP_SlotSelection_Entry_C::Overlay_ValidData' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_Entry_C, PlayTimeValue) == 0x000508, "Member 'UWBP_SlotSelection_Entry_C::PlayTimeValue' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_Entry_C, RestPointImg) == 0x000510, "Member 'UWBP_SlotSelection_Entry_C::RestPointImg' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_Entry_C, RestPointName) == 0x000518, "Member 'UWBP_SlotSelection_Entry_C::RestPointName' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_Entry_C, SaveDataVersionTextBlock) == 0x000520, "Member 'UWBP_SlotSelection_Entry_C::SaveDataVersionTextBlock' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_Entry_C, SilhouetteImg) == 0x000528, "Member 'UWBP_SlotSelection_Entry_C::SilhouetteImg' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_Entry_C, SlotIndexTextBlock) == 0x000530, "Member 'UWBP_SlotSelection_Entry_C::SlotIndexTextBlock' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_Entry_C, WidgetSwitcher_Slot) == 0x000538, "Member 'UWBP_SlotSelection_Entry_C::WidgetSwitcher_Slot' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_Entry_C, SlotIndex) == 0x000540, "Member 'UWBP_SlotSelection_Entry_C::SlotIndex' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_Entry_C, OnFocused) == 0x000548, "Member 'UWBP_SlotSelection_Entry_C::OnFocused' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_Entry_C, SaveExistsType) == 0x000558, "Member 'UWBP_SlotSelection_Entry_C::SaveExistsType' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_Entry_C, OnConfirmed) == 0x000560, "Member 'UWBP_SlotSelection_Entry_C::OnConfirmed' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_Entry_C, OnContextRequested) == 0x000570, "Member 'UWBP_SlotSelection_Entry_C::OnContextRequested' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_Entry_C, LoadedData) == 0x000580, "Member 'UWBP_SlotSelection_Entry_C::LoadedData' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_Entry_C, bInitialized) == 0x000588, "Member 'UWBP_SlotSelection_Entry_C::bInitialized' has a wrong offset!");
static_assert(offsetof(UWBP_SlotSelection_Entry_C, bCanConvertToNG_) == 0x000589, "Member 'UWBP_SlotSelection_Entry_C::bCanConvertToNG_' has a wrong offset!");

}

