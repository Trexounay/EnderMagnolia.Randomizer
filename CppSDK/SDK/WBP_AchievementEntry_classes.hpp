#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_AchievementEntry

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Zion_structs.hpp"
#include "Zion_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_AchievementEntry.WBP_AchievementEntry_C
// 0x00C8 (0x0528 - 0x0460)
class UWBP_AchievementEntry_C final : public UUserWidgetZion
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0460(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Focused;                                           // 0x0468(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UTextBlock*                             AchievementDescription;                            // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 AchievementIcon;                                   // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             AchievementName;                                   // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Description;                               // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_FocusedContainer;                          // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_LockedContainer;                           // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FAchievementData                       AchievementData;                                   // 0x04A0(0x0088)(Edit, BlueprintVisible, BlueprintReadOnly, ExposeOnSpawn)

public:
	void Construct();
	void ExecuteUbergraph_WBP_AchievementEntry(int32 EntryPoint);
	void Initialize();
	void OnAddedToFocusPath(const struct FFocusEvent& InFocusEvent);
	void OnRemovedFromFocusPath(const struct FFocusEvent& InFocusEvent);
	void SetFocusedState(bool Focus);
	void SetupLockedAchievement();
	void SetupUnlockedAchievement();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_AchievementEntry_C">();
	}
	static class UWBP_AchievementEntry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_AchievementEntry_C>();
	}
};
static_assert(alignof(UWBP_AchievementEntry_C) == 0x000008, "Wrong alignment on UWBP_AchievementEntry_C");
static_assert(sizeof(UWBP_AchievementEntry_C) == 0x000528, "Wrong size on UWBP_AchievementEntry_C");
static_assert(offsetof(UWBP_AchievementEntry_C, UberGraphFrame) == 0x000460, "Member 'UWBP_AchievementEntry_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_AchievementEntry_C, Focused) == 0x000468, "Member 'UWBP_AchievementEntry_C::Focused' has a wrong offset!");
static_assert(offsetof(UWBP_AchievementEntry_C, AchievementDescription) == 0x000470, "Member 'UWBP_AchievementEntry_C::AchievementDescription' has a wrong offset!");
static_assert(offsetof(UWBP_AchievementEntry_C, AchievementIcon) == 0x000478, "Member 'UWBP_AchievementEntry_C::AchievementIcon' has a wrong offset!");
static_assert(offsetof(UWBP_AchievementEntry_C, AchievementName) == 0x000480, "Member 'UWBP_AchievementEntry_C::AchievementName' has a wrong offset!");
static_assert(offsetof(UWBP_AchievementEntry_C, Overlay_Description) == 0x000488, "Member 'UWBP_AchievementEntry_C::Overlay_Description' has a wrong offset!");
static_assert(offsetof(UWBP_AchievementEntry_C, Overlay_FocusedContainer) == 0x000490, "Member 'UWBP_AchievementEntry_C::Overlay_FocusedContainer' has a wrong offset!");
static_assert(offsetof(UWBP_AchievementEntry_C, Overlay_LockedContainer) == 0x000498, "Member 'UWBP_AchievementEntry_C::Overlay_LockedContainer' has a wrong offset!");
static_assert(offsetof(UWBP_AchievementEntry_C, AchievementData) == 0x0004A0, "Member 'UWBP_AchievementEntry_C::AchievementData' has a wrong offset!");

}

