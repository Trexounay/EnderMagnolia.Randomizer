#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Elevator_StreetMain

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Elevator_StreetMain.BP_Elevator_StreetMain_C.SetWallCollisionEnable
// 0x0005 (0x0005 - 0x0000)
struct BP_Elevator_StreetMain_C_SetWallCollisionEnable final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Elevator_StreetMain_C_SetWallCollisionEnable) == 0x000001, "Wrong alignment on BP_Elevator_StreetMain_C_SetWallCollisionEnable");
static_assert(sizeof(BP_Elevator_StreetMain_C_SetWallCollisionEnable) == 0x000005, "Wrong size on BP_Elevator_StreetMain_C_SetWallCollisionEnable");
static_assert(offsetof(BP_Elevator_StreetMain_C_SetWallCollisionEnable, bEnable) == 0x000000, "Member 'BP_Elevator_StreetMain_C_SetWallCollisionEnable::bEnable' has a wrong offset!");
static_assert(offsetof(BP_Elevator_StreetMain_C_SetWallCollisionEnable, Temp_bool_Variable) == 0x000001, "Member 'BP_Elevator_StreetMain_C_SetWallCollisionEnable::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Elevator_StreetMain_C_SetWallCollisionEnable, Temp_byte_Variable) == 0x000002, "Member 'BP_Elevator_StreetMain_C_SetWallCollisionEnable::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Elevator_StreetMain_C_SetWallCollisionEnable, Temp_byte_Variable_1) == 0x000003, "Member 'BP_Elevator_StreetMain_C_SetWallCollisionEnable::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Elevator_StreetMain_C_SetWallCollisionEnable, K2Node_Select_Default) == 0x000004, "Member 'BP_Elevator_StreetMain_C_SetWallCollisionEnable::K2Node_Select_Default' has a wrong offset!");

// Function BP_Elevator_StreetMain.BP_Elevator_StreetMain_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_Elevator_StreetMain_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Elevator_StreetMain_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_Elevator_StreetMain_C_ReceiveEndPlay");
static_assert(sizeof(BP_Elevator_StreetMain_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_Elevator_StreetMain_C_ReceiveEndPlay");
static_assert(offsetof(BP_Elevator_StreetMain_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_Elevator_StreetMain_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_Elevator_StreetMain.BP_Elevator_StreetMain_C.ExecuteUbergraph_BP_Elevator_StreetMain
// 0x0028 (0x0028 - 0x0000)
struct BP_Elevator_StreetMain_C_ExecuteUbergraph_BP_Elevator_StreetMain final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bInstant_1;             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bWasMoving_1;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bInstant;               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bWasMoving;             // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ALevelSequenceActor*                    CallFunc_CreateLevelSequencePlayer_OutActor;       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_CreateLevelSequencePlayer_ReturnValue;    // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Elevator_StreetMain_C_ExecuteUbergraph_BP_Elevator_StreetMain) == 0x000008, "Wrong alignment on BP_Elevator_StreetMain_C_ExecuteUbergraph_BP_Elevator_StreetMain");
static_assert(sizeof(BP_Elevator_StreetMain_C_ExecuteUbergraph_BP_Elevator_StreetMain) == 0x000028, "Wrong size on BP_Elevator_StreetMain_C_ExecuteUbergraph_BP_Elevator_StreetMain");
static_assert(offsetof(BP_Elevator_StreetMain_C_ExecuteUbergraph_BP_Elevator_StreetMain, EntryPoint) == 0x000000, "Member 'BP_Elevator_StreetMain_C_ExecuteUbergraph_BP_Elevator_StreetMain::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Elevator_StreetMain_C_ExecuteUbergraph_BP_Elevator_StreetMain, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_Elevator_StreetMain_C_ExecuteUbergraph_BP_Elevator_StreetMain::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Elevator_StreetMain_C_ExecuteUbergraph_BP_Elevator_StreetMain, CallFunc_IsValid_ReturnValue_1) == 0x000005, "Member 'BP_Elevator_StreetMain_C_ExecuteUbergraph_BP_Elevator_StreetMain::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Elevator_StreetMain_C_ExecuteUbergraph_BP_Elevator_StreetMain, CallFunc_IsValid_ReturnValue_2) == 0x000006, "Member 'BP_Elevator_StreetMain_C_ExecuteUbergraph_BP_Elevator_StreetMain::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Elevator_StreetMain_C_ExecuteUbergraph_BP_Elevator_StreetMain, K2Node_ComponentBoundEvent_bInstant_1) == 0x000007, "Member 'BP_Elevator_StreetMain_C_ExecuteUbergraph_BP_Elevator_StreetMain::K2Node_ComponentBoundEvent_bInstant_1' has a wrong offset!");
static_assert(offsetof(BP_Elevator_StreetMain_C_ExecuteUbergraph_BP_Elevator_StreetMain, K2Node_ComponentBoundEvent_bWasMoving_1) == 0x000008, "Member 'BP_Elevator_StreetMain_C_ExecuteUbergraph_BP_Elevator_StreetMain::K2Node_ComponentBoundEvent_bWasMoving_1' has a wrong offset!");
static_assert(offsetof(BP_Elevator_StreetMain_C_ExecuteUbergraph_BP_Elevator_StreetMain, K2Node_ComponentBoundEvent_bInstant) == 0x000009, "Member 'BP_Elevator_StreetMain_C_ExecuteUbergraph_BP_Elevator_StreetMain::K2Node_ComponentBoundEvent_bInstant' has a wrong offset!");
static_assert(offsetof(BP_Elevator_StreetMain_C_ExecuteUbergraph_BP_Elevator_StreetMain, K2Node_ComponentBoundEvent_bWasMoving) == 0x00000A, "Member 'BP_Elevator_StreetMain_C_ExecuteUbergraph_BP_Elevator_StreetMain::K2Node_ComponentBoundEvent_bWasMoving' has a wrong offset!");
static_assert(offsetof(BP_Elevator_StreetMain_C_ExecuteUbergraph_BP_Elevator_StreetMain, CallFunc_IsValid_ReturnValue_3) == 0x00000B, "Member 'BP_Elevator_StreetMain_C_ExecuteUbergraph_BP_Elevator_StreetMain::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Elevator_StreetMain_C_ExecuteUbergraph_BP_Elevator_StreetMain, CallFunc_CreateLevelSequencePlayer_OutActor) == 0x000010, "Member 'BP_Elevator_StreetMain_C_ExecuteUbergraph_BP_Elevator_StreetMain::CallFunc_CreateLevelSequencePlayer_OutActor' has a wrong offset!");
static_assert(offsetof(BP_Elevator_StreetMain_C_ExecuteUbergraph_BP_Elevator_StreetMain, CallFunc_CreateLevelSequencePlayer_ReturnValue) == 0x000018, "Member 'BP_Elevator_StreetMain_C_ExecuteUbergraph_BP_Elevator_StreetMain::CallFunc_CreateLevelSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Elevator_StreetMain_C_ExecuteUbergraph_BP_Elevator_StreetMain, K2Node_Event_EndPlayReason) == 0x000020, "Member 'BP_Elevator_StreetMain_C_ExecuteUbergraph_BP_Elevator_StreetMain::K2Node_Event_EndPlayReason' has a wrong offset!");

// Function BP_Elevator_StreetMain.BP_Elevator_StreetMain_C.BndEvt__BP_Elevator_StreetMain_ElevatorMovementComponent_K2Node_ComponentBoundEvent_1_ElevatorMovementEvent__DelegateSignature
// 0x0002 (0x0002 - 0x0000)
struct BP_Elevator_StreetMain_C_BndEvt__BP_Elevator_StreetMain_ElevatorMovementComponent_K2Node_ComponentBoundEvent_1_ElevatorMovementEvent__DelegateSignature final
{
public:
	bool                                          bInstant;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWasMoving;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Elevator_StreetMain_C_BndEvt__BP_Elevator_StreetMain_ElevatorMovementComponent_K2Node_ComponentBoundEvent_1_ElevatorMovementEvent__DelegateSignature) == 0x000001, "Wrong alignment on BP_Elevator_StreetMain_C_BndEvt__BP_Elevator_StreetMain_ElevatorMovementComponent_K2Node_ComponentBoundEvent_1_ElevatorMovementEvent__DelegateSignature");
static_assert(sizeof(BP_Elevator_StreetMain_C_BndEvt__BP_Elevator_StreetMain_ElevatorMovementComponent_K2Node_ComponentBoundEvent_1_ElevatorMovementEvent__DelegateSignature) == 0x000002, "Wrong size on BP_Elevator_StreetMain_C_BndEvt__BP_Elevator_StreetMain_ElevatorMovementComponent_K2Node_ComponentBoundEvent_1_ElevatorMovementEvent__DelegateSignature");
static_assert(offsetof(BP_Elevator_StreetMain_C_BndEvt__BP_Elevator_StreetMain_ElevatorMovementComponent_K2Node_ComponentBoundEvent_1_ElevatorMovementEvent__DelegateSignature, bInstant) == 0x000000, "Member 'BP_Elevator_StreetMain_C_BndEvt__BP_Elevator_StreetMain_ElevatorMovementComponent_K2Node_ComponentBoundEvent_1_ElevatorMovementEvent__DelegateSignature::bInstant' has a wrong offset!");
static_assert(offsetof(BP_Elevator_StreetMain_C_BndEvt__BP_Elevator_StreetMain_ElevatorMovementComponent_K2Node_ComponentBoundEvent_1_ElevatorMovementEvent__DelegateSignature, bWasMoving) == 0x000001, "Member 'BP_Elevator_StreetMain_C_BndEvt__BP_Elevator_StreetMain_ElevatorMovementComponent_K2Node_ComponentBoundEvent_1_ElevatorMovementEvent__DelegateSignature::bWasMoving' has a wrong offset!");

// Function BP_Elevator_StreetMain.BP_Elevator_StreetMain_C.BndEvt__BP_Elevator_StreetMain_ElevatorMovementComponent_K2Node_ComponentBoundEvent_0_ElevatorMovementEvent__DelegateSignature
// 0x0002 (0x0002 - 0x0000)
struct BP_Elevator_StreetMain_C_BndEvt__BP_Elevator_StreetMain_ElevatorMovementComponent_K2Node_ComponentBoundEvent_0_ElevatorMovementEvent__DelegateSignature final
{
public:
	bool                                          bInstant;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWasMoving;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Elevator_StreetMain_C_BndEvt__BP_Elevator_StreetMain_ElevatorMovementComponent_K2Node_ComponentBoundEvent_0_ElevatorMovementEvent__DelegateSignature) == 0x000001, "Wrong alignment on BP_Elevator_StreetMain_C_BndEvt__BP_Elevator_StreetMain_ElevatorMovementComponent_K2Node_ComponentBoundEvent_0_ElevatorMovementEvent__DelegateSignature");
static_assert(sizeof(BP_Elevator_StreetMain_C_BndEvt__BP_Elevator_StreetMain_ElevatorMovementComponent_K2Node_ComponentBoundEvent_0_ElevatorMovementEvent__DelegateSignature) == 0x000002, "Wrong size on BP_Elevator_StreetMain_C_BndEvt__BP_Elevator_StreetMain_ElevatorMovementComponent_K2Node_ComponentBoundEvent_0_ElevatorMovementEvent__DelegateSignature");
static_assert(offsetof(BP_Elevator_StreetMain_C_BndEvt__BP_Elevator_StreetMain_ElevatorMovementComponent_K2Node_ComponentBoundEvent_0_ElevatorMovementEvent__DelegateSignature, bInstant) == 0x000000, "Member 'BP_Elevator_StreetMain_C_BndEvt__BP_Elevator_StreetMain_ElevatorMovementComponent_K2Node_ComponentBoundEvent_0_ElevatorMovementEvent__DelegateSignature::bInstant' has a wrong offset!");
static_assert(offsetof(BP_Elevator_StreetMain_C_BndEvt__BP_Elevator_StreetMain_ElevatorMovementComponent_K2Node_ComponentBoundEvent_0_ElevatorMovementEvent__DelegateSignature, bWasMoving) == 0x000001, "Member 'BP_Elevator_StreetMain_C_BndEvt__BP_Elevator_StreetMain_ElevatorMovementComponent_K2Node_ComponentBoundEvent_0_ElevatorMovementEvent__DelegateSignature::bWasMoving' has a wrong offset!");

}

