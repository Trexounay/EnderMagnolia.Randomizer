#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CharacterZion_Enemy

#include "Basic.hpp"

#include "Zion_structs.hpp"
#include "BP_CharacterZion_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CharacterZion_Enemy.BP_CharacterZion_Enemy_C
// 0x0080 (0x0A20 - 0x09A0)
#pragma pack(push, 0x1)
class alignas(0x10) ABP_CharacterZion_Enemy_C : public ABP_CharacterZion_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x09A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBreakPartComponent*                    BreakPart;                                         // 0x09A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USleepTargetComponent*                  SleepTarget;                                       // 0x09B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStunComponent*                         Stun;                                              // 0x09B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStatStaminaComponent*                  StatStamina;                                       // 0x09C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBattleColorComponent*                  BattleColor;                                       // 0x09C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFallDamageComponent*                   FallDamage;                                        // 0x09D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStatsEnemyComponent*                   StatsEnemy;                                        // 0x09D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDropComponent*                         Drop;                                              // 0x09E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URepulsionEnemyComponent*               Repulsion_Enemy_Component;                         // 0x09E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UCommand>                   IdlePeaceCommandClass;                             // 0x09F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UClass*                                 FindEnemyCommandClass;                             // 0x09F8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSpineAnimationDefinition>      PreActivationAnimations;                           // 0x0A00(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference)
	bool                                          PlayingPreActivationAnimations;                    // 0x0A10(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_CharacterZion_Enemy(int32 EntryPoint);
	void GetFindEnemyCommandClass(TSubclassOf<class UCommand>* out_CommandClass);
	void GetIdlePeaceCommandClass(TSubclassOf<class UCommand>* out_CommandClass);
	void ReceiveBeginPlay();
	void ReceivePossessed(class AController* NewController);
	void TryPlayPreActivationAnimations();
	void TryStopPreActivationAnimations();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CharacterZion_Enemy_C">();
	}
	static class ABP_CharacterZion_Enemy_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_CharacterZion_Enemy_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(ABP_CharacterZion_Enemy_C) == 0x000010, "Wrong alignment on ABP_CharacterZion_Enemy_C");
static_assert(sizeof(ABP_CharacterZion_Enemy_C) == 0x000A20, "Wrong size on ABP_CharacterZion_Enemy_C");
static_assert(offsetof(ABP_CharacterZion_Enemy_C, UberGraphFrame) == 0x0009A0, "Member 'ABP_CharacterZion_Enemy_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_CharacterZion_Enemy_C, BreakPart) == 0x0009A8, "Member 'ABP_CharacterZion_Enemy_C::BreakPart' has a wrong offset!");
static_assert(offsetof(ABP_CharacterZion_Enemy_C, SleepTarget) == 0x0009B0, "Member 'ABP_CharacterZion_Enemy_C::SleepTarget' has a wrong offset!");
static_assert(offsetof(ABP_CharacterZion_Enemy_C, Stun) == 0x0009B8, "Member 'ABP_CharacterZion_Enemy_C::Stun' has a wrong offset!");
static_assert(offsetof(ABP_CharacterZion_Enemy_C, StatStamina) == 0x0009C0, "Member 'ABP_CharacterZion_Enemy_C::StatStamina' has a wrong offset!");
static_assert(offsetof(ABP_CharacterZion_Enemy_C, BattleColor) == 0x0009C8, "Member 'ABP_CharacterZion_Enemy_C::BattleColor' has a wrong offset!");
static_assert(offsetof(ABP_CharacterZion_Enemy_C, FallDamage) == 0x0009D0, "Member 'ABP_CharacterZion_Enemy_C::FallDamage' has a wrong offset!");
static_assert(offsetof(ABP_CharacterZion_Enemy_C, StatsEnemy) == 0x0009D8, "Member 'ABP_CharacterZion_Enemy_C::StatsEnemy' has a wrong offset!");
static_assert(offsetof(ABP_CharacterZion_Enemy_C, Drop) == 0x0009E0, "Member 'ABP_CharacterZion_Enemy_C::Drop' has a wrong offset!");
static_assert(offsetof(ABP_CharacterZion_Enemy_C, Repulsion_Enemy_Component) == 0x0009E8, "Member 'ABP_CharacterZion_Enemy_C::Repulsion_Enemy_Component' has a wrong offset!");
static_assert(offsetof(ABP_CharacterZion_Enemy_C, IdlePeaceCommandClass) == 0x0009F0, "Member 'ABP_CharacterZion_Enemy_C::IdlePeaceCommandClass' has a wrong offset!");
static_assert(offsetof(ABP_CharacterZion_Enemy_C, FindEnemyCommandClass) == 0x0009F8, "Member 'ABP_CharacterZion_Enemy_C::FindEnemyCommandClass' has a wrong offset!");
static_assert(offsetof(ABP_CharacterZion_Enemy_C, PreActivationAnimations) == 0x000A00, "Member 'ABP_CharacterZion_Enemy_C::PreActivationAnimations' has a wrong offset!");
static_assert(offsetof(ABP_CharacterZion_Enemy_C, PlayingPreActivationAnimations) == 0x000A10, "Member 'ABP_CharacterZion_Enemy_C::PlayingPreActivationAnimations' has a wrong offset!");

}

