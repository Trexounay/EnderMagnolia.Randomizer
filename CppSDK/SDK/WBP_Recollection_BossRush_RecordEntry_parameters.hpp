#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Recollection_BossRush_RecordEntry

#include "Basic.hpp"

#include "Zion_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_Recollection_BossRush_RecordEntry.WBP_Recollection_BossRush_RecordEntry_C.SetRecordText
// 0x0004 (0x0004 - 0x0000)
struct WBP_Recollection_BossRush_RecordEntry_C_SetRecordText final
{
public:
	struct FRecollectionBossRushRecordData        RecordData;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(WBP_Recollection_BossRush_RecordEntry_C_SetRecordText) == 0x000004, "Wrong alignment on WBP_Recollection_BossRush_RecordEntry_C_SetRecordText");
static_assert(sizeof(WBP_Recollection_BossRush_RecordEntry_C_SetRecordText) == 0x000004, "Wrong size on WBP_Recollection_BossRush_RecordEntry_C_SetRecordText");
static_assert(offsetof(WBP_Recollection_BossRush_RecordEntry_C_SetRecordText, RecordData) == 0x000000, "Member 'WBP_Recollection_BossRush_RecordEntry_C_SetRecordText::RecordData' has a wrong offset!");

// Function WBP_Recollection_BossRush_RecordEntry.WBP_Recollection_BossRush_RecordEntry_C.SetNewFlag
// 0x0010 (0x0010 - 0x0000)
struct WBP_Recollection_BossRush_RecordEntry_C_SetNewFlag final
{
public:
	bool                                          ShowNewFlag_0;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Recollection_BossRush_RecordEntry_C_SetNewFlag) == 0x000008, "Wrong alignment on WBP_Recollection_BossRush_RecordEntry_C_SetNewFlag");
static_assert(sizeof(WBP_Recollection_BossRush_RecordEntry_C_SetNewFlag) == 0x000010, "Wrong size on WBP_Recollection_BossRush_RecordEntry_C_SetNewFlag");
static_assert(offsetof(WBP_Recollection_BossRush_RecordEntry_C_SetNewFlag, ShowNewFlag_0) == 0x000000, "Member 'WBP_Recollection_BossRush_RecordEntry_C_SetNewFlag::ShowNewFlag_0' has a wrong offset!");
static_assert(offsetof(WBP_Recollection_BossRush_RecordEntry_C_SetNewFlag, Temp_bool_Variable) == 0x000001, "Member 'WBP_Recollection_BossRush_RecordEntry_C_SetNewFlag::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Recollection_BossRush_RecordEntry_C_SetNewFlag, Temp_byte_Variable) == 0x000002, "Member 'WBP_Recollection_BossRush_RecordEntry_C_SetNewFlag::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Recollection_BossRush_RecordEntry_C_SetNewFlag, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_Recollection_BossRush_RecordEntry_C_SetNewFlag::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Recollection_BossRush_RecordEntry_C_SetNewFlag, K2Node_Select_Default) == 0x000004, "Member 'WBP_Recollection_BossRush_RecordEntry_C_SetNewFlag::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Recollection_BossRush_RecordEntry_C_SetNewFlag, CallFunc_PlayAnimationForward_ReturnValue) == 0x000008, "Member 'WBP_Recollection_BossRush_RecordEntry_C_SetNewFlag::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

// Function WBP_Recollection_BossRush_RecordEntry.WBP_Recollection_BossRush_RecordEntry_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_Recollection_BossRush_RecordEntry_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Recollection_BossRush_RecordEntry_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_Recollection_BossRush_RecordEntry_C_PreConstruct");
static_assert(sizeof(WBP_Recollection_BossRush_RecordEntry_C_PreConstruct) == 0x000001, "Wrong size on WBP_Recollection_BossRush_RecordEntry_C_PreConstruct");
static_assert(offsetof(WBP_Recollection_BossRush_RecordEntry_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_Recollection_BossRush_RecordEntry_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_Recollection_BossRush_RecordEntry.WBP_Recollection_BossRush_RecordEntry_C.IsRecordDataValid
// 0x0010 (0x0010 - 0x0000)
struct WBP_Recollection_BossRush_RecordEntry_C_IsRecordDataValid final
{
public:
	struct FRecollectionBossRushRecordData        RecordData;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Recollection_BossRush_RecordEntry_C_IsRecordDataValid) == 0x000008, "Wrong alignment on WBP_Recollection_BossRush_RecordEntry_C_IsRecordDataValid");
static_assert(sizeof(WBP_Recollection_BossRush_RecordEntry_C_IsRecordDataValid) == 0x000010, "Wrong size on WBP_Recollection_BossRush_RecordEntry_C_IsRecordDataValid");
static_assert(offsetof(WBP_Recollection_BossRush_RecordEntry_C_IsRecordDataValid, RecordData) == 0x000000, "Member 'WBP_Recollection_BossRush_RecordEntry_C_IsRecordDataValid::RecordData' has a wrong offset!");
static_assert(offsetof(WBP_Recollection_BossRush_RecordEntry_C_IsRecordDataValid, ReturnValue) == 0x000004, "Member 'WBP_Recollection_BossRush_RecordEntry_C_IsRecordDataValid::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Recollection_BossRush_RecordEntry_C_IsRecordDataValid, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000005, "Member 'WBP_Recollection_BossRush_RecordEntry_C_IsRecordDataValid::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Recollection_BossRush_RecordEntry_C_IsRecordDataValid, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000008, "Member 'WBP_Recollection_BossRush_RecordEntry_C_IsRecordDataValid::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function WBP_Recollection_BossRush_RecordEntry.WBP_Recollection_BossRush_RecordEntry_C.ExecuteUbergraph_WBP_Recollection_BossRush_RecordEntry
// 0x0008 (0x0008 - 0x0000)
struct WBP_Recollection_BossRush_RecordEntry_C_ExecuteUbergraph_WBP_Recollection_BossRush_RecordEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Recollection_BossRush_RecordEntry_C_ExecuteUbergraph_WBP_Recollection_BossRush_RecordEntry) == 0x000004, "Wrong alignment on WBP_Recollection_BossRush_RecordEntry_C_ExecuteUbergraph_WBP_Recollection_BossRush_RecordEntry");
static_assert(sizeof(WBP_Recollection_BossRush_RecordEntry_C_ExecuteUbergraph_WBP_Recollection_BossRush_RecordEntry) == 0x000008, "Wrong size on WBP_Recollection_BossRush_RecordEntry_C_ExecuteUbergraph_WBP_Recollection_BossRush_RecordEntry");
static_assert(offsetof(WBP_Recollection_BossRush_RecordEntry_C_ExecuteUbergraph_WBP_Recollection_BossRush_RecordEntry, EntryPoint) == 0x000000, "Member 'WBP_Recollection_BossRush_RecordEntry_C_ExecuteUbergraph_WBP_Recollection_BossRush_RecordEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Recollection_BossRush_RecordEntry_C_ExecuteUbergraph_WBP_Recollection_BossRush_RecordEntry, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_Recollection_BossRush_RecordEntry_C_ExecuteUbergraph_WBP_Recollection_BossRush_RecordEntry::K2Node_Event_IsDesignTime' has a wrong offset!");

}

