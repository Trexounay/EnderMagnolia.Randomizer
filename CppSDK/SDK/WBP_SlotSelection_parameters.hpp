#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_SlotSelection

#include "Basic.hpp"

#include "Zion_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_SlotSelection.WBP_SlotSelection_C.AddToSlotDataStack
// 0x0008 (0x0008 - 0x0000)
struct WBP_SlotSelection_C_AddToSlotDataStack final
{
public:
	const class UWBP_SlotSelection_Entry_C*       NewItem;                                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SlotSelection_C_AddToSlotDataStack) == 0x000008, "Wrong alignment on WBP_SlotSelection_C_AddToSlotDataStack");
static_assert(sizeof(WBP_SlotSelection_C_AddToSlotDataStack) == 0x000008, "Wrong size on WBP_SlotSelection_C_AddToSlotDataStack");
static_assert(offsetof(WBP_SlotSelection_C_AddToSlotDataStack, NewItem) == 0x000000, "Member 'WBP_SlotSelection_C_AddToSlotDataStack::NewItem' has a wrong offset!");

// Function WBP_SlotSelection.WBP_SlotSelection_C.ExecuteUbergraph_WBP_SlotSelection
// 0x0240 (0x0240 - 0x0000)
struct WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_SaveSlotContext_C*                 CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_NewGamePlusConfirm_C*              CallFunc_Create_ReturnValue_1;                     // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveSubsystem*                         CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveSubsystem*                         CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESaveExistsType                               CallFunc_CheckSlotExistence_ReturnValue;           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayUMGAnimationAsyncAction*           CallFunc_PlayUMGAnimation_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayUMGAnimationAsyncAction*           CallFunc_PlayUMGAnimation_ReturnValue_1;           // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_SlotSelection_Entry_C*             CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E[0x2];                                       // 0x007E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	const class UWBP_SlotSelection_Entry_C*       K2Node_CustomEvent_NewItem;                        // 0x0080(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_SlotSelection_Entry_C*             K2Node_CustomEvent_Entry_1;                        // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_SlotSelection_Entry_C*             K2Node_CustomEvent_Entry;                          // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInitialized_bInitialized;               // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESaveExistsType                               K2Node_CustomEvent_Result;                         // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A3[0x5];                                       // 0x00A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGameZion*                          K2Node_CustomEvent_LoadedData;                     // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x00B0(0x0010)()
	class FText                                   Temp_text_Variable_1;                              // 0x00C0(0x0010)()
	class FText                                   Temp_text_Variable_2;                              // 0x00D0(0x0010)()
	int32                                         CallFunc_GetUMGZOrder_ReturnValue;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUMGZOrder_ReturnValue_1;               // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESaveCopyResult                               Temp_byte_Variable;                                // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetUMGZOrder_ReturnValue_2;               // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x00F0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0100(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_Dialog_OK_C*                       CallFunc_Create_ReturnValue_2;                     // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_Dialog_OK_C*                       CallFunc_Create_ReturnValue_3;                     // 0x0118(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0120(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0130(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x0140(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUMGZOrder_ReturnValue_3;               // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x0154(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x0164(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveSubsystem*                         CallFunc_GetGameInstanceSubsystem_ReturnValue_2;   // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CopyGameDataToEmptySlot_out_TargetSlot;   // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESaveCopyResult                               CallFunc_CopyGameDataToEmptySlot_ReturnValue;      // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_185[0x3];                                      // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0188(0x0010)()
	class UWBP_SlotSelection_Entry_C*             CallFunc_Array_Get_Item_1;                         // 0x0198(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_8;            // 0x01A4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x01C0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0208(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0218(0x0010)()
	class USaveSubsystem*                         CallFunc_GetGameInstanceSubsystem_ReturnValue_3;   // 0x0228(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ESaveExistsType Result, class USaveGameZion* LoadedData)> K2Node_CreateDelegate_OutputDelegate_9; // 0x0230(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection) == 0x000008, "Wrong alignment on WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection");
static_assert(sizeof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection) == 0x000240, "Wrong size on WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, EntryPoint) == 0x000000, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, CallFunc_Create_ReturnValue) == 0x000018, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, CallFunc_Create_ReturnValue_1) == 0x000028, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, CallFunc_IsValid_ReturnValue_2) == 0x000030, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000031, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, CallFunc_IsValid_ReturnValue_3) == 0x000032, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000038, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, K2Node_SwitchEnum_CmpSuccess) == 0x000040, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x000048, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, CallFunc_CheckSlotExistence_ReturnValue) == 0x000050, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::CallFunc_CheckSlotExistence_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, CallFunc_IsValid_ReturnValue_4) == 0x000051, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000052, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, K2Node_SwitchEnum_CmpSuccess_1) == 0x000053, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, CallFunc_PlayUMGAnimation_ReturnValue) == 0x000058, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::CallFunc_PlayUMGAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, CallFunc_IsValid_ReturnValue_5) == 0x000060, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, CallFunc_PlayUMGAnimation_ReturnValue_1) == 0x000068, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::CallFunc_PlayUMGAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, CallFunc_Array_Get_Item) == 0x000070, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, CallFunc_Greater_IntInt_ReturnValue) == 0x00007C, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, CallFunc_IsValid_ReturnValue_6) == 0x00007D, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, K2Node_CustomEvent_NewItem) == 0x000080, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::K2Node_CustomEvent_NewItem' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, CallFunc_Array_Add_ReturnValue) == 0x000088, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, CallFunc_Not_PreBool_ReturnValue) == 0x00008C, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, K2Node_CustomEvent_Entry_1) == 0x000090, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::K2Node_CustomEvent_Entry_1' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, K2Node_CustomEvent_Entry) == 0x000098, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::K2Node_CustomEvent_Entry' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, CallFunc_IsInitialized_bInitialized) == 0x0000A0, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::CallFunc_IsInitialized_bInitialized' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, CallFunc_IsValid_ReturnValue_7) == 0x0000A1, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, K2Node_CustomEvent_Result) == 0x0000A2, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::K2Node_CustomEvent_Result' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, K2Node_CustomEvent_LoadedData) == 0x0000A8, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::K2Node_CustomEvent_LoadedData' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, Temp_text_Variable) == 0x0000B0, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, Temp_text_Variable_1) == 0x0000C0, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, Temp_text_Variable_2) == 0x0000D0, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, CallFunc_GetUMGZOrder_ReturnValue) == 0x0000E0, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::CallFunc_GetUMGZOrder_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, CallFunc_GetUMGZOrder_ReturnValue_1) == 0x0000E4, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::CallFunc_GetUMGZOrder_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, Temp_byte_Variable) == 0x0000E8, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, CallFunc_GetUMGZOrder_ReturnValue_2) == 0x0000EC, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::CallFunc_GetUMGZOrder_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000F0, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, K2Node_CreateDelegate_OutputDelegate_2) == 0x000100, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, CallFunc_Create_ReturnValue_2) == 0x000110, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::CallFunc_Create_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, CallFunc_Create_ReturnValue_3) == 0x000118, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::CallFunc_Create_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, K2Node_CreateDelegate_OutputDelegate_3) == 0x000120, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, K2Node_CreateDelegate_OutputDelegate_4) == 0x000130, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, K2Node_CreateDelegate_OutputDelegate_5) == 0x000140, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, CallFunc_GetUMGZOrder_ReturnValue_3) == 0x000150, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::CallFunc_GetUMGZOrder_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, K2Node_CreateDelegate_OutputDelegate_6) == 0x000154, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, K2Node_CreateDelegate_OutputDelegate_7) == 0x000164, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, CallFunc_GetGameInstanceSubsystem_ReturnValue_2) == 0x000178, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::CallFunc_GetGameInstanceSubsystem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, CallFunc_CopyGameDataToEmptySlot_out_TargetSlot) == 0x000180, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::CallFunc_CopyGameDataToEmptySlot_out_TargetSlot' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, CallFunc_CopyGameDataToEmptySlot_ReturnValue) == 0x000184, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::CallFunc_CopyGameDataToEmptySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, K2Node_Select_Default) == 0x000188, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, CallFunc_Array_Get_Item_1) == 0x000198, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, CallFunc_Add_IntInt_ReturnValue) == 0x0001A0, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, K2Node_CreateDelegate_OutputDelegate_8) == 0x0001A4, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, CallFunc_Conv_IntToInt64_ReturnValue) == 0x0001B8, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, K2Node_MakeStruct_FormatArgumentData) == 0x0001C0, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, K2Node_MakeArray_Array) == 0x000208, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, CallFunc_Format_ReturnValue) == 0x000218, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, CallFunc_GetGameInstanceSubsystem_ReturnValue_3) == 0x000228, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::CallFunc_GetGameInstanceSubsystem_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection, K2Node_CreateDelegate_OutputDelegate_9) == 0x000230, "Member 'WBP_SlotSelection_C_ExecuteUbergraph_WBP_SlotSelection::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");

// Function WBP_SlotSelection.WBP_SlotSelection_C.LaunchGameWithIntent
// 0x0078 (0x0078 - 0x0000)
struct WBP_SlotSelection_C_LaunchGameWithIntent final
{
public:
	ELaunchGameIntent                             LaunchIntent;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_SlotSelection_Entry_C*             SlotEntry;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGameInstanceZion*                      CallFunc_Get_ReturnValue;                          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveSubsystem*                         CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWorldLoaderSubsystem*                  CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveSettings_ReturnValue;                 // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFadeDescriptionData                   K2Node_MakeStruct_FadeDescriptionData;             // 0x0038(0x0020)(NoDestructor)
	struct FFadeDescriptionData                   Temp_struct_Variable;                              // 0x0058(0x0020)(ConstParm, NoDestructor)
};
static_assert(alignof(WBP_SlotSelection_C_LaunchGameWithIntent) == 0x000008, "Wrong alignment on WBP_SlotSelection_C_LaunchGameWithIntent");
static_assert(sizeof(WBP_SlotSelection_C_LaunchGameWithIntent) == 0x000078, "Wrong size on WBP_SlotSelection_C_LaunchGameWithIntent");
static_assert(offsetof(WBP_SlotSelection_C_LaunchGameWithIntent, LaunchIntent) == 0x000000, "Member 'WBP_SlotSelection_C_LaunchGameWithIntent::LaunchIntent' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_LaunchGameWithIntent, SlotEntry) == 0x000008, "Member 'WBP_SlotSelection_C_LaunchGameWithIntent::SlotEntry' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_LaunchGameWithIntent, CallFunc_Get_ReturnValue) == 0x000010, "Member 'WBP_SlotSelection_C_LaunchGameWithIntent::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_LaunchGameWithIntent, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_SlotSelection_C_LaunchGameWithIntent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_LaunchGameWithIntent, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000020, "Member 'WBP_SlotSelection_C_LaunchGameWithIntent::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_LaunchGameWithIntent, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x000028, "Member 'WBP_SlotSelection_C_LaunchGameWithIntent::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_LaunchGameWithIntent, CallFunc_SaveSettings_ReturnValue) == 0x000030, "Member 'WBP_SlotSelection_C_LaunchGameWithIntent::CallFunc_SaveSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_LaunchGameWithIntent, K2Node_MakeStruct_FadeDescriptionData) == 0x000038, "Member 'WBP_SlotSelection_C_LaunchGameWithIntent::K2Node_MakeStruct_FadeDescriptionData' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_LaunchGameWithIntent, Temp_struct_Variable) == 0x000058, "Member 'WBP_SlotSelection_C_LaunchGameWithIntent::Temp_struct_Variable' has a wrong offset!");

// Function WBP_SlotSelection.WBP_SlotSelection_C.OnFocusReceived
// 0x01B0 (0x01B0 - 0x0000)
struct WBP_SlotSelection_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x00F8(0x00B8)()
};
static_assert(alignof(WBP_SlotSelection_C_OnFocusReceived) == 0x000008, "Wrong alignment on WBP_SlotSelection_C_OnFocusReceived");
static_assert(sizeof(WBP_SlotSelection_C_OnFocusReceived) == 0x0001B0, "Wrong size on WBP_SlotSelection_C_OnFocusReceived");
static_assert(offsetof(WBP_SlotSelection_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'WBP_SlotSelection_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'WBP_SlotSelection_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'WBP_SlotSelection_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_OnFocusReceived, CallFunc_Handled_ReturnValue) == 0x0000F8, "Member 'WBP_SlotSelection_C_OnFocusReceived::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function WBP_SlotSelection.WBP_SlotSelection_C.OnLoadFinished
// 0x0010 (0x0010 - 0x0000)
struct WBP_SlotSelection_C_OnLoadFinished final
{
public:
	ESaveExistsType                               Result;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGameZion*                          LoadedData;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SlotSelection_C_OnLoadFinished) == 0x000008, "Wrong alignment on WBP_SlotSelection_C_OnLoadFinished");
static_assert(sizeof(WBP_SlotSelection_C_OnLoadFinished) == 0x000010, "Wrong size on WBP_SlotSelection_C_OnLoadFinished");
static_assert(offsetof(WBP_SlotSelection_C_OnLoadFinished, Result) == 0x000000, "Member 'WBP_SlotSelection_C_OnLoadFinished::Result' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_OnLoadFinished, LoadedData) == 0x000008, "Member 'WBP_SlotSelection_C_OnLoadFinished::LoadedData' has a wrong offset!");

// Function WBP_SlotSelection.WBP_SlotSelection_C.OnPressCancel
// 0x01B0 (0x01B0 - 0x0000)
struct WBP_SlotSelection_C_OnPressCancel final
{
public:
	struct FKeyEvent                              KeyEvent;                                          // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x00F8(0x00B8)()
};
static_assert(alignof(WBP_SlotSelection_C_OnPressCancel) == 0x000008, "Wrong alignment on WBP_SlotSelection_C_OnPressCancel");
static_assert(sizeof(WBP_SlotSelection_C_OnPressCancel) == 0x0001B0, "Wrong size on WBP_SlotSelection_C_OnPressCancel");
static_assert(offsetof(WBP_SlotSelection_C_OnPressCancel, KeyEvent) == 0x000000, "Member 'WBP_SlotSelection_C_OnPressCancel::KeyEvent' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_OnPressCancel, ReturnValue) == 0x000040, "Member 'WBP_SlotSelection_C_OnPressCancel::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_OnPressCancel, CallFunc_Handled_ReturnValue) == 0x0000F8, "Member 'WBP_SlotSelection_C_OnPressCancel::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function WBP_SlotSelection.WBP_SlotSelection_C.OnSlotConfirmed
// 0x0008 (0x0008 - 0x0000)
struct WBP_SlotSelection_C_OnSlotConfirmed final
{
public:
	class UWBP_SlotSelection_Entry_C*             Entry;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SlotSelection_C_OnSlotConfirmed) == 0x000008, "Wrong alignment on WBP_SlotSelection_C_OnSlotConfirmed");
static_assert(sizeof(WBP_SlotSelection_C_OnSlotConfirmed) == 0x000008, "Wrong size on WBP_SlotSelection_C_OnSlotConfirmed");
static_assert(offsetof(WBP_SlotSelection_C_OnSlotConfirmed, Entry) == 0x000000, "Member 'WBP_SlotSelection_C_OnSlotConfirmed::Entry' has a wrong offset!");

// Function WBP_SlotSelection.WBP_SlotSelection_C.OnSlotFocused
// 0x0008 (0x0008 - 0x0000)
struct WBP_SlotSelection_C_OnSlotFocused final
{
public:
	class UWBP_SlotSelection_Entry_C*             Entry;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SlotSelection_C_OnSlotFocused) == 0x000008, "Wrong alignment on WBP_SlotSelection_C_OnSlotFocused");
static_assert(sizeof(WBP_SlotSelection_C_OnSlotFocused) == 0x000008, "Wrong size on WBP_SlotSelection_C_OnSlotFocused");
static_assert(offsetof(WBP_SlotSelection_C_OnSlotFocused, Entry) == 0x000000, "Member 'WBP_SlotSelection_C_OnSlotFocused::Entry' has a wrong offset!");

// Function WBP_SlotSelection.WBP_SlotSelection_C.SetupSlotEntries
// 0x0050 (0x0050 - 0x0000)
struct WBP_SlotSelection_C_SetupSlotEntries final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWBP_SlotSelection_Entry_C* Entry)> K2Node_CreateDelegate_OutputDelegate;   // 0x000C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_SlotSelection_Entry_C*             CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UWBP_SlotSelection_Entry_C* Entry)> K2Node_CreateDelegate_OutputDelegate_1; // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UWBP_SlotSelection_Entry_C*>     K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(WBP_SlotSelection_C_SetupSlotEntries) == 0x000008, "Wrong alignment on WBP_SlotSelection_C_SetupSlotEntries");
static_assert(sizeof(WBP_SlotSelection_C_SetupSlotEntries) == 0x000050, "Wrong size on WBP_SlotSelection_C_SetupSlotEntries");
static_assert(offsetof(WBP_SlotSelection_C_SetupSlotEntries, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_SlotSelection_C_SetupSlotEntries::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_SetupSlotEntries, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_SlotSelection_C_SetupSlotEntries::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_SetupSlotEntries, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_SlotSelection_C_SetupSlotEntries::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_SetupSlotEntries, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'WBP_SlotSelection_C_SetupSlotEntries::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_SetupSlotEntries, CallFunc_Array_Get_Item) == 0x000020, "Member 'WBP_SlotSelection_C_SetupSlotEntries::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_SetupSlotEntries, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'WBP_SlotSelection_C_SetupSlotEntries::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_SetupSlotEntries, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'WBP_SlotSelection_C_SetupSlotEntries::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_SetupSlotEntries, K2Node_CreateDelegate_OutputDelegate_1) == 0x000030, "Member 'WBP_SlotSelection_C_SetupSlotEntries::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_SlotSelection_C_SetupSlotEntries, K2Node_MakeArray_Array) == 0x000040, "Member 'WBP_SlotSelection_C_SetupSlotEntries::K2Node_MakeArray_Array' has a wrong offset!");

}

