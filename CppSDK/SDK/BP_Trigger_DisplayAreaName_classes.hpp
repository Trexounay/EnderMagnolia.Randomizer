#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Trigger_DisplayAreaName

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Zion_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Trigger_DisplayAreaName.BP_Trigger_DisplayAreaName_C
// 0x0020 (0x02C0 - 0x02A0)
class ABP_Trigger_DisplayAreaName_C final : public ATrigger
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          Box;                                               // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    GameMapRowHandle;                                  // 0x02B0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor)

public:
	void ReceiveActorBeginOverlap(class AActor* OtherActor);
	void ExecuteUbergraph_BP_Trigger_DisplayAreaName(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Trigger_DisplayAreaName_C">();
	}
	static class ABP_Trigger_DisplayAreaName_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Trigger_DisplayAreaName_C>();
	}
};
static_assert(alignof(ABP_Trigger_DisplayAreaName_C) == 0x000008, "Wrong alignment on ABP_Trigger_DisplayAreaName_C");
static_assert(sizeof(ABP_Trigger_DisplayAreaName_C) == 0x0002C0, "Wrong size on ABP_Trigger_DisplayAreaName_C");
static_assert(offsetof(ABP_Trigger_DisplayAreaName_C, UberGraphFrame) == 0x0002A0, "Member 'ABP_Trigger_DisplayAreaName_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Trigger_DisplayAreaName_C, Box) == 0x0002A8, "Member 'ABP_Trigger_DisplayAreaName_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_Trigger_DisplayAreaName_C, GameMapRowHandle) == 0x0002B0, "Member 'ABP_Trigger_DisplayAreaName_C::GameMapRowHandle' has a wrong offset!");

}

