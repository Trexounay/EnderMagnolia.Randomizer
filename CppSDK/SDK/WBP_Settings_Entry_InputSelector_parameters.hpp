#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Settings_Entry_InputSelector

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Zion_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_Settings_Entry_InputSelector.WBP_Settings_Entry_InputSelector_C.ExecuteUbergraph_WBP_Settings_Entry_InputSelector
// 0x00C0 (0x00C0 - 0x0000)
struct WBP_Settings_Entry_InputSelector_C_ExecuteUbergraph_WBP_Settings_Entry_InputSelector final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         Temp_string_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	ERichTextDecoratorMode                        Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSubsystem*                          CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUserWidgetFooter*                      CallFunc_GetActiveFooter_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUMGSubsystem*                          CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidgetFooter*                      CallFunc_GetActiveFooter_ReturnValue_1;            // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERichTextDecoratorMode                        Temp_byte_Variable_1;                              // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFocusEvent                            K2Node_Event_InFocusEvent_1;                       // 0x004C(0x0008)(NoDestructor)
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x0054(0x0008)(NoDestructor)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRichTextInputElement                  K2Node_MakeStruct_RichTextInputElement;            // 0x0060(0x0048)()
	TArray<struct FRichTextInputElement>          K2Node_MakeArray_Array;                            // 0x00A8(0x0010)(ConstParm, ReferenceParm)
	bool                                          Temp_bool_Variable;                                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERichTextDecoratorMode                        K2Node_Select_Default;                             // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_Entry_InputSelector_C_ExecuteUbergraph_WBP_Settings_Entry_InputSelector) == 0x000008, "Wrong alignment on WBP_Settings_Entry_InputSelector_C_ExecuteUbergraph_WBP_Settings_Entry_InputSelector");
static_assert(sizeof(WBP_Settings_Entry_InputSelector_C_ExecuteUbergraph_WBP_Settings_Entry_InputSelector) == 0x0000C0, "Wrong size on WBP_Settings_Entry_InputSelector_C_ExecuteUbergraph_WBP_Settings_Entry_InputSelector");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_ExecuteUbergraph_WBP_Settings_Entry_InputSelector, EntryPoint) == 0x000000, "Member 'WBP_Settings_Entry_InputSelector_C_ExecuteUbergraph_WBP_Settings_Entry_InputSelector::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_ExecuteUbergraph_WBP_Settings_Entry_InputSelector, Temp_string_Variable) == 0x000008, "Member 'WBP_Settings_Entry_InputSelector_C_ExecuteUbergraph_WBP_Settings_Entry_InputSelector::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_ExecuteUbergraph_WBP_Settings_Entry_InputSelector, Temp_byte_Variable) == 0x000018, "Member 'WBP_Settings_Entry_InputSelector_C_ExecuteUbergraph_WBP_Settings_Entry_InputSelector::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_ExecuteUbergraph_WBP_Settings_Entry_InputSelector, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000020, "Member 'WBP_Settings_Entry_InputSelector_C_ExecuteUbergraph_WBP_Settings_Entry_InputSelector::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_ExecuteUbergraph_WBP_Settings_Entry_InputSelector, CallFunc_GetActiveFooter_ReturnValue) == 0x000028, "Member 'WBP_Settings_Entry_InputSelector_C_ExecuteUbergraph_WBP_Settings_Entry_InputSelector::CallFunc_GetActiveFooter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_ExecuteUbergraph_WBP_Settings_Entry_InputSelector, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x000030, "Member 'WBP_Settings_Entry_InputSelector_C_ExecuteUbergraph_WBP_Settings_Entry_InputSelector::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_ExecuteUbergraph_WBP_Settings_Entry_InputSelector, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'WBP_Settings_Entry_InputSelector_C_ExecuteUbergraph_WBP_Settings_Entry_InputSelector::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_ExecuteUbergraph_WBP_Settings_Entry_InputSelector, CallFunc_GetActiveFooter_ReturnValue_1) == 0x000040, "Member 'WBP_Settings_Entry_InputSelector_C_ExecuteUbergraph_WBP_Settings_Entry_InputSelector::CallFunc_GetActiveFooter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_ExecuteUbergraph_WBP_Settings_Entry_InputSelector, CallFunc_IsValid_ReturnValue_1) == 0x000048, "Member 'WBP_Settings_Entry_InputSelector_C_ExecuteUbergraph_WBP_Settings_Entry_InputSelector::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_ExecuteUbergraph_WBP_Settings_Entry_InputSelector, Temp_byte_Variable_1) == 0x000049, "Member 'WBP_Settings_Entry_InputSelector_C_ExecuteUbergraph_WBP_Settings_Entry_InputSelector::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_ExecuteUbergraph_WBP_Settings_Entry_InputSelector, K2Node_Event_InFocusEvent_1) == 0x00004C, "Member 'WBP_Settings_Entry_InputSelector_C_ExecuteUbergraph_WBP_Settings_Entry_InputSelector::K2Node_Event_InFocusEvent_1' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_ExecuteUbergraph_WBP_Settings_Entry_InputSelector, K2Node_Event_InFocusEvent) == 0x000054, "Member 'WBP_Settings_Entry_InputSelector_C_ExecuteUbergraph_WBP_Settings_Entry_InputSelector::K2Node_Event_InFocusEvent' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_ExecuteUbergraph_WBP_Settings_Entry_InputSelector, K2Node_MakeStruct_RichTextInputElement) == 0x000060, "Member 'WBP_Settings_Entry_InputSelector_C_ExecuteUbergraph_WBP_Settings_Entry_InputSelector::K2Node_MakeStruct_RichTextInputElement' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_ExecuteUbergraph_WBP_Settings_Entry_InputSelector, K2Node_MakeArray_Array) == 0x0000A8, "Member 'WBP_Settings_Entry_InputSelector_C_ExecuteUbergraph_WBP_Settings_Entry_InputSelector::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_ExecuteUbergraph_WBP_Settings_Entry_InputSelector, Temp_bool_Variable) == 0x0000B8, "Member 'WBP_Settings_Entry_InputSelector_C_ExecuteUbergraph_WBP_Settings_Entry_InputSelector::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_ExecuteUbergraph_WBP_Settings_Entry_InputSelector, K2Node_Event_IsDesignTime) == 0x0000B9, "Member 'WBP_Settings_Entry_InputSelector_C_ExecuteUbergraph_WBP_Settings_Entry_InputSelector::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_ExecuteUbergraph_WBP_Settings_Entry_InputSelector, K2Node_Select_Default) == 0x0000BA, "Member 'WBP_Settings_Entry_InputSelector_C_ExecuteUbergraph_WBP_Settings_Entry_InputSelector::K2Node_Select_Default' has a wrong offset!");

// Function WBP_Settings_Entry_InputSelector.WBP_Settings_Entry_InputSelector_C.OnAddedToFocusPath
// 0x0008 (0x0008 - 0x0000)
struct WBP_Settings_Entry_InputSelector_C_OnAddedToFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(WBP_Settings_Entry_InputSelector_C_OnAddedToFocusPath) == 0x000004, "Wrong alignment on WBP_Settings_Entry_InputSelector_C_OnAddedToFocusPath");
static_assert(sizeof(WBP_Settings_Entry_InputSelector_C_OnAddedToFocusPath) == 0x000008, "Wrong size on WBP_Settings_Entry_InputSelector_C_OnAddedToFocusPath");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_OnAddedToFocusPath, InFocusEvent) == 0x000000, "Member 'WBP_Settings_Entry_InputSelector_C_OnAddedToFocusPath::InFocusEvent' has a wrong offset!");

// Function WBP_Settings_Entry_InputSelector.WBP_Settings_Entry_InputSelector_C.OnAnalogValueChanged
// 0x0368 (0x0368 - 0x0000)
struct WBP_Settings_Entry_InputSelector_C_OnAnalogValueChanged final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FAnalogInputEvent                      InAnalogInputEvent;                                // 0x0038(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0080(0x00B8)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0140(0x00B8)()
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x01F8(0x00B8)()
	struct FEventReply                            K2Node_Select_Default;                             // 0x02B0(0x00B8)()
};
static_assert(alignof(WBP_Settings_Entry_InputSelector_C_OnAnalogValueChanged) == 0x000008, "Wrong alignment on WBP_Settings_Entry_InputSelector_C_OnAnalogValueChanged");
static_assert(sizeof(WBP_Settings_Entry_InputSelector_C_OnAnalogValueChanged) == 0x000368, "Wrong size on WBP_Settings_Entry_InputSelector_C_OnAnalogValueChanged");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_OnAnalogValueChanged, MyGeometry) == 0x000000, "Member 'WBP_Settings_Entry_InputSelector_C_OnAnalogValueChanged::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_OnAnalogValueChanged, InAnalogInputEvent) == 0x000038, "Member 'WBP_Settings_Entry_InputSelector_C_OnAnalogValueChanged::InAnalogInputEvent' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_OnAnalogValueChanged, ReturnValue) == 0x000080, "Member 'WBP_Settings_Entry_InputSelector_C_OnAnalogValueChanged::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_OnAnalogValueChanged, Temp_bool_Variable) == 0x000138, "Member 'WBP_Settings_Entry_InputSelector_C_OnAnalogValueChanged::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_OnAnalogValueChanged, CallFunc_Unhandled_ReturnValue) == 0x000140, "Member 'WBP_Settings_Entry_InputSelector_C_OnAnalogValueChanged::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_OnAnalogValueChanged, CallFunc_Handled_ReturnValue) == 0x0001F8, "Member 'WBP_Settings_Entry_InputSelector_C_OnAnalogValueChanged::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_OnAnalogValueChanged, K2Node_Select_Default) == 0x0002B0, "Member 'WBP_Settings_Entry_InputSelector_C_OnAnalogValueChanged::K2Node_Select_Default' has a wrong offset!");

// Function WBP_Settings_Entry_InputSelector.WBP_Settings_Entry_InputSelector_C.OnKeyDown
// 0x0360 (0x0360 - 0x0000)
struct WBP_Settings_Entry_InputSelector_C_OnKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0078(0x00B8)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0138(0x00B8)()
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x01F0(0x00B8)()
	struct FEventReply                            K2Node_Select_Default;                             // 0x02A8(0x00B8)()
};
static_assert(alignof(WBP_Settings_Entry_InputSelector_C_OnKeyDown) == 0x000008, "Wrong alignment on WBP_Settings_Entry_InputSelector_C_OnKeyDown");
static_assert(sizeof(WBP_Settings_Entry_InputSelector_C_OnKeyDown) == 0x000360, "Wrong size on WBP_Settings_Entry_InputSelector_C_OnKeyDown");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_OnKeyDown, MyGeometry) == 0x000000, "Member 'WBP_Settings_Entry_InputSelector_C_OnKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_OnKeyDown, InKeyEvent) == 0x000038, "Member 'WBP_Settings_Entry_InputSelector_C_OnKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_OnKeyDown, ReturnValue) == 0x000078, "Member 'WBP_Settings_Entry_InputSelector_C_OnKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_OnKeyDown, Temp_bool_Variable) == 0x000130, "Member 'WBP_Settings_Entry_InputSelector_C_OnKeyDown::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_OnKeyDown, CallFunc_Unhandled_ReturnValue) == 0x000138, "Member 'WBP_Settings_Entry_InputSelector_C_OnKeyDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_OnKeyDown, CallFunc_Handled_ReturnValue) == 0x0001F0, "Member 'WBP_Settings_Entry_InputSelector_C_OnKeyDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_OnKeyDown, K2Node_Select_Default) == 0x0002A8, "Member 'WBP_Settings_Entry_InputSelector_C_OnKeyDown::K2Node_Select_Default' has a wrong offset!");

// Function WBP_Settings_Entry_InputSelector.WBP_Settings_Entry_InputSelector_C.OnPressConfirm
// 0x0268 (0x0268 - 0x0000)
struct WBP_Settings_Entry_InputSelector_C_OnPressConfirm final
{
public:
	struct FKeyEvent                              KeyEvent;                                          // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x00F8(0x00B8)()
	struct FEventReply                            CallFunc_CaptureMouse_ReturnValue;                 // 0x01B0(0x00B8)()
};
static_assert(alignof(WBP_Settings_Entry_InputSelector_C_OnPressConfirm) == 0x000008, "Wrong alignment on WBP_Settings_Entry_InputSelector_C_OnPressConfirm");
static_assert(sizeof(WBP_Settings_Entry_InputSelector_C_OnPressConfirm) == 0x000268, "Wrong size on WBP_Settings_Entry_InputSelector_C_OnPressConfirm");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_OnPressConfirm, KeyEvent) == 0x000000, "Member 'WBP_Settings_Entry_InputSelector_C_OnPressConfirm::KeyEvent' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_OnPressConfirm, ReturnValue) == 0x000040, "Member 'WBP_Settings_Entry_InputSelector_C_OnPressConfirm::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_OnPressConfirm, CallFunc_Handled_ReturnValue) == 0x0000F8, "Member 'WBP_Settings_Entry_InputSelector_C_OnPressConfirm::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_OnPressConfirm, CallFunc_CaptureMouse_ReturnValue) == 0x0001B0, "Member 'WBP_Settings_Entry_InputSelector_C_OnPressConfirm::CallFunc_CaptureMouse_ReturnValue' has a wrong offset!");

// Function WBP_Settings_Entry_InputSelector.WBP_Settings_Entry_InputSelector_C.OnPreviewKeyDown
// 0x04F8 (0x04F8 - 0x0000)
struct WBP_Settings_Entry_InputSelector_C_OnPreviewKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0078(0x00B8)(Parm, OutParm, ReturnParm)
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x0130(0x0018)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsGamepadKey_ReturnValue;             // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsValid_ReturnValue;                  // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14B[0x5];                                      // 0x014B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0150(0x00B8)()
	struct FEventReply                            CallFunc_CaptureMouse_ReturnValue;                 // 0x0208(0x00B8)()
	struct FEventReply                            CallFunc_ReleaseMouseCapture_ReturnValue;          // 0x02C0(0x00B8)()
	struct FEventReply                            K2Node_Select_Default;                             // 0x0378(0x00B8)()
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_431[0x7];                                      // 0x0431(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0438(0x00B8)()
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_Entry_InputSelector_C_OnPreviewKeyDown) == 0x000008, "Wrong alignment on WBP_Settings_Entry_InputSelector_C_OnPreviewKeyDown");
static_assert(sizeof(WBP_Settings_Entry_InputSelector_C_OnPreviewKeyDown) == 0x0004F8, "Wrong size on WBP_Settings_Entry_InputSelector_C_OnPreviewKeyDown");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_OnPreviewKeyDown, MyGeometry) == 0x000000, "Member 'WBP_Settings_Entry_InputSelector_C_OnPreviewKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_OnPreviewKeyDown, InKeyEvent) == 0x000038, "Member 'WBP_Settings_Entry_InputSelector_C_OnPreviewKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_OnPreviewKeyDown, ReturnValue) == 0x000078, "Member 'WBP_Settings_Entry_InputSelector_C_OnPreviewKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_OnPreviewKeyDown, CallFunc_GetKey_ReturnValue) == 0x000130, "Member 'WBP_Settings_Entry_InputSelector_C_OnPreviewKeyDown::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_OnPreviewKeyDown, Temp_bool_Variable) == 0x000148, "Member 'WBP_Settings_Entry_InputSelector_C_OnPreviewKeyDown::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_OnPreviewKeyDown, CallFunc_Key_IsGamepadKey_ReturnValue) == 0x000149, "Member 'WBP_Settings_Entry_InputSelector_C_OnPreviewKeyDown::CallFunc_Key_IsGamepadKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_OnPreviewKeyDown, CallFunc_Key_IsValid_ReturnValue) == 0x00014A, "Member 'WBP_Settings_Entry_InputSelector_C_OnPreviewKeyDown::CallFunc_Key_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_OnPreviewKeyDown, CallFunc_Handled_ReturnValue) == 0x000150, "Member 'WBP_Settings_Entry_InputSelector_C_OnPreviewKeyDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_OnPreviewKeyDown, CallFunc_CaptureMouse_ReturnValue) == 0x000208, "Member 'WBP_Settings_Entry_InputSelector_C_OnPreviewKeyDown::CallFunc_CaptureMouse_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_OnPreviewKeyDown, CallFunc_ReleaseMouseCapture_ReturnValue) == 0x0002C0, "Member 'WBP_Settings_Entry_InputSelector_C_OnPreviewKeyDown::CallFunc_ReleaseMouseCapture_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_OnPreviewKeyDown, K2Node_Select_Default) == 0x000378, "Member 'WBP_Settings_Entry_InputSelector_C_OnPreviewKeyDown::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_OnPreviewKeyDown, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000430, "Member 'WBP_Settings_Entry_InputSelector_C_OnPreviewKeyDown::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_OnPreviewKeyDown, CallFunc_Unhandled_ReturnValue) == 0x000438, "Member 'WBP_Settings_Entry_InputSelector_C_OnPreviewKeyDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_OnPreviewKeyDown, CallFunc_BooleanAND_ReturnValue) == 0x0004F0, "Member 'WBP_Settings_Entry_InputSelector_C_OnPreviewKeyDown::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_Settings_Entry_InputSelector.WBP_Settings_Entry_InputSelector_C.OnPreviewMouseButtonDown
// 0x0540 (0x0540 - 0x0000)
struct WBP_Settings_Entry_InputSelector_C_OnPreviewMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_PointerEvent_GetEffectingButton_ReturnValue; // 0x0170(0x0018)(HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0188(0x00B8)()
	struct FEventReply                            CallFunc_CaptureMouse_ReturnValue;                 // 0x0240(0x00B8)()
	struct FEventReply                            CallFunc_ReleaseMouseCapture_ReturnValue;          // 0x02F8(0x00B8)()
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x03B0(0x00B8)()
	struct FEventReply                            K2Node_Select_Default;                             // 0x0468(0x00B8)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0520(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_521[0x7];                                      // 0x0521(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0528(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_Entry_InputSelector_C_OnPreviewMouseButtonDown) == 0x000008, "Wrong alignment on WBP_Settings_Entry_InputSelector_C_OnPreviewMouseButtonDown");
static_assert(sizeof(WBP_Settings_Entry_InputSelector_C_OnPreviewMouseButtonDown) == 0x000540, "Wrong size on WBP_Settings_Entry_InputSelector_C_OnPreviewMouseButtonDown");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_OnPreviewMouseButtonDown, MyGeometry) == 0x000000, "Member 'WBP_Settings_Entry_InputSelector_C_OnPreviewMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_OnPreviewMouseButtonDown, MouseEvent) == 0x000038, "Member 'WBP_Settings_Entry_InputSelector_C_OnPreviewMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_OnPreviewMouseButtonDown, ReturnValue) == 0x0000B0, "Member 'WBP_Settings_Entry_InputSelector_C_OnPreviewMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_OnPreviewMouseButtonDown, Temp_bool_Variable) == 0x000168, "Member 'WBP_Settings_Entry_InputSelector_C_OnPreviewMouseButtonDown::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_OnPreviewMouseButtonDown, CallFunc_PointerEvent_GetEffectingButton_ReturnValue) == 0x000170, "Member 'WBP_Settings_Entry_InputSelector_C_OnPreviewMouseButtonDown::CallFunc_PointerEvent_GetEffectingButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_OnPreviewMouseButtonDown, CallFunc_Handled_ReturnValue) == 0x000188, "Member 'WBP_Settings_Entry_InputSelector_C_OnPreviewMouseButtonDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_OnPreviewMouseButtonDown, CallFunc_CaptureMouse_ReturnValue) == 0x000240, "Member 'WBP_Settings_Entry_InputSelector_C_OnPreviewMouseButtonDown::CallFunc_CaptureMouse_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_OnPreviewMouseButtonDown, CallFunc_ReleaseMouseCapture_ReturnValue) == 0x0002F8, "Member 'WBP_Settings_Entry_InputSelector_C_OnPreviewMouseButtonDown::CallFunc_ReleaseMouseCapture_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_OnPreviewMouseButtonDown, CallFunc_Unhandled_ReturnValue) == 0x0003B0, "Member 'WBP_Settings_Entry_InputSelector_C_OnPreviewMouseButtonDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_OnPreviewMouseButtonDown, K2Node_Select_Default) == 0x000468, "Member 'WBP_Settings_Entry_InputSelector_C_OnPreviewMouseButtonDown::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_OnPreviewMouseButtonDown, CallFunc_Not_PreBool_ReturnValue) == 0x000520, "Member 'WBP_Settings_Entry_InputSelector_C_OnPreviewMouseButtonDown::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_OnPreviewMouseButtonDown, CallFunc_Conv_BoolToString_ReturnValue) == 0x000528, "Member 'WBP_Settings_Entry_InputSelector_C_OnPreviewMouseButtonDown::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_OnPreviewMouseButtonDown, CallFunc_BooleanAND_ReturnValue) == 0x000538, "Member 'WBP_Settings_Entry_InputSelector_C_OnPreviewMouseButtonDown::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_Settings_Entry_InputSelector.WBP_Settings_Entry_InputSelector_C.OnRemovedFromFocusPath
// 0x0008 (0x0008 - 0x0000)
struct WBP_Settings_Entry_InputSelector_C_OnRemovedFromFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(WBP_Settings_Entry_InputSelector_C_OnRemovedFromFocusPath) == 0x000004, "Wrong alignment on WBP_Settings_Entry_InputSelector_C_OnRemovedFromFocusPath");
static_assert(sizeof(WBP_Settings_Entry_InputSelector_C_OnRemovedFromFocusPath) == 0x000008, "Wrong size on WBP_Settings_Entry_InputSelector_C_OnRemovedFromFocusPath");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_OnRemovedFromFocusPath, InFocusEvent) == 0x000000, "Member 'WBP_Settings_Entry_InputSelector_C_OnRemovedFromFocusPath::InFocusEvent' has a wrong offset!");

// Function WBP_Settings_Entry_InputSelector.WBP_Settings_Entry_InputSelector_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_Settings_Entry_InputSelector_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_Entry_InputSelector_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_Settings_Entry_InputSelector_C_PreConstruct");
static_assert(sizeof(WBP_Settings_Entry_InputSelector_C_PreConstruct) == 0x000001, "Wrong size on WBP_Settings_Entry_InputSelector_C_PreConstruct");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_Settings_Entry_InputSelector_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_Settings_Entry_InputSelector.WBP_Settings_Entry_InputSelector_C.RefreshWaitKeyText
// 0x0048 (0x0048 - 0x0000)
struct WBP_Settings_Entry_InputSelector_C_RefreshWaitKeyText final
{
public:
	class FText                                   Temp_text_Variable;                                // 0x0000(0x0010)()
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSwitchBuild_ReturnValue;                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaystationBuild_ReturnValue;           // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_SelectText_ReturnValue;                   // 0x0018(0x0010)()
	class FText                                   CallFunc_SelectText_ReturnValue_1;                 // 0x0028(0x0010)()
	class FText                                   K2Node_Select_Default;                             // 0x0038(0x0010)()
};
static_assert(alignof(WBP_Settings_Entry_InputSelector_C_RefreshWaitKeyText) == 0x000008, "Wrong alignment on WBP_Settings_Entry_InputSelector_C_RefreshWaitKeyText");
static_assert(sizeof(WBP_Settings_Entry_InputSelector_C_RefreshWaitKeyText) == 0x000048, "Wrong size on WBP_Settings_Entry_InputSelector_C_RefreshWaitKeyText");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_RefreshWaitKeyText, Temp_text_Variable) == 0x000000, "Member 'WBP_Settings_Entry_InputSelector_C_RefreshWaitKeyText::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_RefreshWaitKeyText, Temp_bool_Variable) == 0x000010, "Member 'WBP_Settings_Entry_InputSelector_C_RefreshWaitKeyText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_RefreshWaitKeyText, CallFunc_IsSwitchBuild_ReturnValue) == 0x000011, "Member 'WBP_Settings_Entry_InputSelector_C_RefreshWaitKeyText::CallFunc_IsSwitchBuild_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_RefreshWaitKeyText, CallFunc_IsPlaystationBuild_ReturnValue) == 0x000012, "Member 'WBP_Settings_Entry_InputSelector_C_RefreshWaitKeyText::CallFunc_IsPlaystationBuild_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_RefreshWaitKeyText, CallFunc_SelectText_ReturnValue) == 0x000018, "Member 'WBP_Settings_Entry_InputSelector_C_RefreshWaitKeyText::CallFunc_SelectText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_RefreshWaitKeyText, CallFunc_SelectText_ReturnValue_1) == 0x000028, "Member 'WBP_Settings_Entry_InputSelector_C_RefreshWaitKeyText::CallFunc_SelectText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_RefreshWaitKeyText, K2Node_Select_Default) == 0x000038, "Member 'WBP_Settings_Entry_InputSelector_C_RefreshWaitKeyText::K2Node_Select_Default' has a wrong offset!");

// Function WBP_Settings_Entry_InputSelector.WBP_Settings_Entry_InputSelector_C.RemapActionKey
// 0x0058 (0x0058 - 0x0000)
struct WBP_Settings_Entry_InputSelector_C_RemapActionKey final
{
public:
	struct FKey                                   NewKey;                                            // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class FText                                   CallFunc_Key_GetDisplayName_ReturnValue;           // 0x0018(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UInputSettingsSubsystem*                CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemapKey_ReturnValue;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_Entry_InputSelector_C_RemapActionKey) == 0x000008, "Wrong alignment on WBP_Settings_Entry_InputSelector_C_RemapActionKey");
static_assert(sizeof(WBP_Settings_Entry_InputSelector_C_RemapActionKey) == 0x000058, "Wrong size on WBP_Settings_Entry_InputSelector_C_RemapActionKey");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_RemapActionKey, NewKey) == 0x000000, "Member 'WBP_Settings_Entry_InputSelector_C_RemapActionKey::NewKey' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_RemapActionKey, CallFunc_Key_GetDisplayName_ReturnValue) == 0x000018, "Member 'WBP_Settings_Entry_InputSelector_C_RemapActionKey::CallFunc_Key_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_RemapActionKey, CallFunc_Conv_TextToString_ReturnValue) == 0x000028, "Member 'WBP_Settings_Entry_InputSelector_C_RemapActionKey::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_RemapActionKey, CallFunc_Concat_StrStr_ReturnValue) == 0x000038, "Member 'WBP_Settings_Entry_InputSelector_C_RemapActionKey::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_RemapActionKey, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000048, "Member 'WBP_Settings_Entry_InputSelector_C_RemapActionKey::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_RemapActionKey, CallFunc_RemapKey_ReturnValue) == 0x000050, "Member 'WBP_Settings_Entry_InputSelector_C_RemapActionKey::CallFunc_RemapKey_ReturnValue' has a wrong offset!");

// Function WBP_Settings_Entry_InputSelector.WBP_Settings_Entry_InputSelector_C.RemapKey
// 0x0020 (0x0020 - 0x0000)
struct WBP_Settings_Entry_InputSelector_C_RemapKey final
{
public:
	struct FKey                                   NewKey;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsMouseButton_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_Entry_InputSelector_C_RemapKey) == 0x000008, "Wrong alignment on WBP_Settings_Entry_InputSelector_C_RemapKey");
static_assert(sizeof(WBP_Settings_Entry_InputSelector_C_RemapKey) == 0x000020, "Wrong size on WBP_Settings_Entry_InputSelector_C_RemapKey");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_RemapKey, NewKey) == 0x000000, "Member 'WBP_Settings_Entry_InputSelector_C_RemapKey::NewKey' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_RemapKey, CallFunc_Key_IsMouseButton_ReturnValue) == 0x000018, "Member 'WBP_Settings_Entry_InputSelector_C_RemapKey::CallFunc_Key_IsMouseButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_RemapKey, CallFunc_Not_PreBool_ReturnValue) == 0x000019, "Member 'WBP_Settings_Entry_InputSelector_C_RemapKey::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_RemapKey, CallFunc_Array_Contains_ReturnValue) == 0x00001A, "Member 'WBP_Settings_Entry_InputSelector_C_RemapKey::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_RemapKey, CallFunc_BooleanOR_ReturnValue) == 0x00001B, "Member 'WBP_Settings_Entry_InputSelector_C_RemapKey::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_RemapKey, CallFunc_Not_PreBool_ReturnValue_1) == 0x00001C, "Member 'WBP_Settings_Entry_InputSelector_C_RemapKey::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_RemapKey, K2Node_SwitchEnum_CmpSuccess) == 0x00001D, "Member 'WBP_Settings_Entry_InputSelector_C_RemapKey::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_Settings_Entry_InputSelector.WBP_Settings_Entry_InputSelector_C.RemapUIKey
// 0x0020 (0x0020 - 0x0000)
struct WBP_Settings_Entry_InputSelector_C_RemapUIKey final
{
public:
	struct FKey                                   NewKey;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UUMGSubsystem*                          CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_Entry_InputSelector_C_RemapUIKey) == 0x000008, "Wrong alignment on WBP_Settings_Entry_InputSelector_C_RemapUIKey");
static_assert(sizeof(WBP_Settings_Entry_InputSelector_C_RemapUIKey) == 0x000020, "Wrong size on WBP_Settings_Entry_InputSelector_C_RemapUIKey");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_RemapUIKey, NewKey) == 0x000000, "Member 'WBP_Settings_Entry_InputSelector_C_RemapUIKey::NewKey' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_RemapUIKey, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000018, "Member 'WBP_Settings_Entry_InputSelector_C_RemapUIKey::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");

// Function WBP_Settings_Entry_InputSelector.WBP_Settings_Entry_InputSelector_C.SetupOptionalLabel
// 0x0020 (0x0020 - 0x0000)
struct WBP_Settings_Entry_InputSelector_C_SetupOptionalLabel final
{
public:
	ERichTextDecoratorMode                        Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERichTextDecoratorMode                        Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         Temp_string_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERichTextDecoratorMode                        K2Node_Select_Default;                             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_Entry_InputSelector_C_SetupOptionalLabel) == 0x000008, "Wrong alignment on WBP_Settings_Entry_InputSelector_C_SetupOptionalLabel");
static_assert(sizeof(WBP_Settings_Entry_InputSelector_C_SetupOptionalLabel) == 0x000020, "Wrong size on WBP_Settings_Entry_InputSelector_C_SetupOptionalLabel");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_SetupOptionalLabel, Temp_byte_Variable) == 0x000000, "Member 'WBP_Settings_Entry_InputSelector_C_SetupOptionalLabel::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_SetupOptionalLabel, Temp_byte_Variable_1) == 0x000001, "Member 'WBP_Settings_Entry_InputSelector_C_SetupOptionalLabel::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_SetupOptionalLabel, Temp_string_Variable) == 0x000008, "Member 'WBP_Settings_Entry_InputSelector_C_SetupOptionalLabel::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_SetupOptionalLabel, Temp_bool_Variable) == 0x000018, "Member 'WBP_Settings_Entry_InputSelector_C_SetupOptionalLabel::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_InputSelector_C_SetupOptionalLabel, K2Node_Select_Default) == 0x000019, "Member 'WBP_Settings_Entry_InputSelector_C_SetupOptionalLabel::K2Node_Select_Default' has a wrong offset!");

}

