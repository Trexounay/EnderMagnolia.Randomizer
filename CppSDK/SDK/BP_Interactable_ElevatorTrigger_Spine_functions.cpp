#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Interactable_ElevatorTrigger_Spine

#include "Basic.hpp"

#include "BP_Interactable_ElevatorTrigger_Spine_classes.hpp"
#include "BP_Interactable_ElevatorTrigger_Spine_parameters.hpp"


namespace SDK
{

// Function BP_Interactable_ElevatorTrigger_Spine.BP_Interactable_ElevatorTrigger_Spine_C.ExecuteUbergraph_BP_Interactable_ElevatorTrigger_Spine
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Interactable_ElevatorTrigger_Spine_C::ExecuteUbergraph_BP_Interactable_ElevatorTrigger_Spine(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Interactable_ElevatorTrigger_Spine_C", "ExecuteUbergraph_BP_Interactable_ElevatorTrigger_Spine");

	Params::BP_Interactable_ElevatorTrigger_Spine_C_ExecuteUbergraph_BP_Interactable_ElevatorTrigger_Spine Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Interactable_ElevatorTrigger_Spine.BP_Interactable_ElevatorTrigger_Spine_C.OnCanBeInteractedChanged
// (Event, Protected, BlueprintEvent)

void ABP_Interactable_ElevatorTrigger_Spine_C::OnCanBeInteractedChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Interactable_ElevatorTrigger_Spine_C", "OnCanBeInteractedChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Interactable_ElevatorTrigger_Spine.BP_Interactable_ElevatorTrigger_Spine_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Interactable_ElevatorTrigger_Spine_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Interactable_ElevatorTrigger_Spine_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Interactable_ElevatorTrigger_Spine.BP_Interactable_ElevatorTrigger_Spine_C.RefreshAnimations
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_Interactable_ElevatorTrigger_Spine_C::RefreshAnimations()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Interactable_ElevatorTrigger_Spine_C", "RefreshAnimations");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Interactable_ElevatorTrigger_Spine.BP_Interactable_ElevatorTrigger_Spine_C.SetElevator
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMovingPlatform_Elevator*         Elevator_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Interactable_ElevatorTrigger_Spine_C::SetElevator(class AMovingPlatform_Elevator* Elevator_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Interactable_ElevatorTrigger_Spine_C", "SetElevator");

	Params::BP_Interactable_ElevatorTrigger_Spine_C_SetElevator Parms{};

	Parms.Elevator_0 = Elevator_0;

	UObject::ProcessEvent(Func, &Parms);
}

}

