#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_InventoryEntry_Text

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "Zion_structs.hpp"


namespace SDK::Params
{

// Function WBP_InventoryEntry_Text.WBP_InventoryEntry_Text_C.ExecuteUbergraph_WBP_InventoryEntry_Text
// 0x0010 (0x0010 - 0x0000)
struct WBP_InventoryEntry_Text_C_ExecuteUbergraph_WBP_InventoryEntry_Text final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerControllerZion*                  CallFunc_Get_ReturnValue;                          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEntry_Text_C_ExecuteUbergraph_WBP_InventoryEntry_Text) == 0x000008, "Wrong alignment on WBP_InventoryEntry_Text_C_ExecuteUbergraph_WBP_InventoryEntry_Text");
static_assert(sizeof(WBP_InventoryEntry_Text_C_ExecuteUbergraph_WBP_InventoryEntry_Text) == 0x000010, "Wrong size on WBP_InventoryEntry_Text_C_ExecuteUbergraph_WBP_InventoryEntry_Text");
static_assert(offsetof(WBP_InventoryEntry_Text_C_ExecuteUbergraph_WBP_InventoryEntry_Text, EntryPoint) == 0x000000, "Member 'WBP_InventoryEntry_Text_C_ExecuteUbergraph_WBP_InventoryEntry_Text::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEntry_Text_C_ExecuteUbergraph_WBP_InventoryEntry_Text, CallFunc_Get_ReturnValue) == 0x000008, "Member 'WBP_InventoryEntry_Text_C_ExecuteUbergraph_WBP_InventoryEntry_Text::CallFunc_Get_ReturnValue' has a wrong offset!");

// Function WBP_InventoryEntry_Text.WBP_InventoryEntry_Text_C.RefreshNewVisibility
// 0x0007 (0x0007 - 0x0000)
struct WBP_InventoryEntry_Text_C_RefreshNewVisibility final
{
public:
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemChecked_ReturnValue;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEntry_Text_C_RefreshNewVisibility) == 0x000001, "Wrong alignment on WBP_InventoryEntry_Text_C_RefreshNewVisibility");
static_assert(sizeof(WBP_InventoryEntry_Text_C_RefreshNewVisibility) == 0x000007, "Wrong size on WBP_InventoryEntry_Text_C_RefreshNewVisibility");
static_assert(offsetof(WBP_InventoryEntry_Text_C_RefreshNewVisibility, Temp_byte_Variable) == 0x000000, "Member 'WBP_InventoryEntry_Text_C_RefreshNewVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEntry_Text_C_RefreshNewVisibility, Temp_byte_Variable_1) == 0x000001, "Member 'WBP_InventoryEntry_Text_C_RefreshNewVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEntry_Text_C_RefreshNewVisibility, Temp_bool_Variable) == 0x000002, "Member 'WBP_InventoryEntry_Text_C_RefreshNewVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEntry_Text_C_RefreshNewVisibility, CallFunc_IsValid_ReturnValue) == 0x000003, "Member 'WBP_InventoryEntry_Text_C_RefreshNewVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEntry_Text_C_RefreshNewVisibility, CallFunc_IsItemChecked_ReturnValue) == 0x000004, "Member 'WBP_InventoryEntry_Text_C_RefreshNewVisibility::CallFunc_IsItemChecked_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEntry_Text_C_RefreshNewVisibility, CallFunc_IsValid_ReturnValue_1) == 0x000005, "Member 'WBP_InventoryEntry_Text_C_RefreshNewVisibility::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEntry_Text_C_RefreshNewVisibility, K2Node_Select_Default) == 0x000006, "Member 'WBP_InventoryEntry_Text_C_RefreshNewVisibility::K2Node_Select_Default' has a wrong offset!");

// Function WBP_InventoryEntry_Text.WBP_InventoryEntry_Text_C.SetFocusedState
// 0x0010 (0x0010 - 0x0000)
struct WBP_InventoryEntry_Text_C_SetFocusedState final
{
public:
	bool                                          Focus;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEntry_Text_C_SetFocusedState) == 0x000008, "Wrong alignment on WBP_InventoryEntry_Text_C_SetFocusedState");
static_assert(sizeof(WBP_InventoryEntry_Text_C_SetFocusedState) == 0x000010, "Wrong size on WBP_InventoryEntry_Text_C_SetFocusedState");
static_assert(offsetof(WBP_InventoryEntry_Text_C_SetFocusedState, Focus) == 0x000000, "Member 'WBP_InventoryEntry_Text_C_SetFocusedState::Focus' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEntry_Text_C_SetFocusedState, Temp_byte_Variable) == 0x000001, "Member 'WBP_InventoryEntry_Text_C_SetFocusedState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEntry_Text_C_SetFocusedState, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_InventoryEntry_Text_C_SetFocusedState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEntry_Text_C_SetFocusedState, Temp_bool_Variable) == 0x000003, "Member 'WBP_InventoryEntry_Text_C_SetFocusedState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEntry_Text_C_SetFocusedState, K2Node_Select_Default) == 0x000004, "Member 'WBP_InventoryEntry_Text_C_SetFocusedState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEntry_Text_C_SetFocusedState, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WBP_InventoryEntry_Text_C_SetFocusedState::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_InventoryEntry_Text.WBP_InventoryEntry_Text_C.Setup
// 0x01A0 (0x01A0 - 0x0000)
struct WBP_InventoryEntry_Text_C_Setup final
{
public:
	struct FDataTableRowHandle                    ItemHandle_0;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	int32                                         Count;                                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   FallbackText;                                      // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          bNew;                                              // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInventoryItemData                     CallFunc_GetInventoryItemData_out_ItemData;        // 0x0030(0x0168)()
	bool                                          CallFunc_GetInventoryItemData_ReturnValue;         // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x019A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x019B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEntry_Text_C_Setup) == 0x000008, "Wrong alignment on WBP_InventoryEntry_Text_C_Setup");
static_assert(sizeof(WBP_InventoryEntry_Text_C_Setup) == 0x0001A0, "Wrong size on WBP_InventoryEntry_Text_C_Setup");
static_assert(offsetof(WBP_InventoryEntry_Text_C_Setup, ItemHandle_0) == 0x000000, "Member 'WBP_InventoryEntry_Text_C_Setup::ItemHandle_0' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEntry_Text_C_Setup, Count) == 0x000010, "Member 'WBP_InventoryEntry_Text_C_Setup::Count' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEntry_Text_C_Setup, FallbackText) == 0x000018, "Member 'WBP_InventoryEntry_Text_C_Setup::FallbackText' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEntry_Text_C_Setup, bNew) == 0x000028, "Member 'WBP_InventoryEntry_Text_C_Setup::bNew' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEntry_Text_C_Setup, Temp_byte_Variable) == 0x000029, "Member 'WBP_InventoryEntry_Text_C_Setup::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEntry_Text_C_Setup, CallFunc_GetInventoryItemData_out_ItemData) == 0x000030, "Member 'WBP_InventoryEntry_Text_C_Setup::CallFunc_GetInventoryItemData_out_ItemData' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEntry_Text_C_Setup, CallFunc_GetInventoryItemData_ReturnValue) == 0x000198, "Member 'WBP_InventoryEntry_Text_C_Setup::CallFunc_GetInventoryItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEntry_Text_C_Setup, Temp_byte_Variable_1) == 0x000199, "Member 'WBP_InventoryEntry_Text_C_Setup::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEntry_Text_C_Setup, Temp_bool_Variable) == 0x00019A, "Member 'WBP_InventoryEntry_Text_C_Setup::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEntry_Text_C_Setup, K2Node_Select_Default) == 0x00019B, "Member 'WBP_InventoryEntry_Text_C_Setup::K2Node_Select_Default' has a wrong offset!");

// Function WBP_InventoryEntry_Text.WBP_InventoryEntry_Text_C.TryMarkItemAsChecked
// 0x0001 (0x0001 - 0x0000)
struct WBP_InventoryEntry_Text_C_TryMarkItemAsChecked final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEntry_Text_C_TryMarkItemAsChecked) == 0x000001, "Wrong alignment on WBP_InventoryEntry_Text_C_TryMarkItemAsChecked");
static_assert(sizeof(WBP_InventoryEntry_Text_C_TryMarkItemAsChecked) == 0x000001, "Wrong size on WBP_InventoryEntry_Text_C_TryMarkItemAsChecked");
static_assert(offsetof(WBP_InventoryEntry_Text_C_TryMarkItemAsChecked, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_InventoryEntry_Text_C_TryMarkItemAsChecked::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

