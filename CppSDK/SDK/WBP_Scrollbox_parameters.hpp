#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Scrollbox

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Slate_structs.hpp"


namespace SDK::Params
{

// Function WBP_Scrollbox.WBP_Scrollbox_C.ExecuteUbergraph_WBP_Scrollbox
// 0x0038 (0x0038 - 0x0000)
struct WBP_Scrollbox_C_ExecuteUbergraph_WBP_Scrollbox final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSubsystem*                          CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFocusingFromMouse_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UScrollBoxSlot*                         CallFunc_SlotAsScrollBoxSlot_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNativeWidgetHost*                      K2Node_Event_FocusedWidgetHost;                    // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFocusEvent                            K2Node_Event_FocusEvent;                           // 0x0028(0x0008)(ConstParm, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFocusCause                                   CallFunc_GetFocusCause_ReturnValue;                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Scrollbox_C_ExecuteUbergraph_WBP_Scrollbox) == 0x000008, "Wrong alignment on WBP_Scrollbox_C_ExecuteUbergraph_WBP_Scrollbox");
static_assert(sizeof(WBP_Scrollbox_C_ExecuteUbergraph_WBP_Scrollbox) == 0x000038, "Wrong size on WBP_Scrollbox_C_ExecuteUbergraph_WBP_Scrollbox");
static_assert(offsetof(WBP_Scrollbox_C_ExecuteUbergraph_WBP_Scrollbox, EntryPoint) == 0x000000, "Member 'WBP_Scrollbox_C_ExecuteUbergraph_WBP_Scrollbox::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Scrollbox_C_ExecuteUbergraph_WBP_Scrollbox, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'WBP_Scrollbox_C_ExecuteUbergraph_WBP_Scrollbox::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Scrollbox_C_ExecuteUbergraph_WBP_Scrollbox, CallFunc_IsFocusingFromMouse_ReturnValue) == 0x000010, "Member 'WBP_Scrollbox_C_ExecuteUbergraph_WBP_Scrollbox::CallFunc_IsFocusingFromMouse_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Scrollbox_C_ExecuteUbergraph_WBP_Scrollbox, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'WBP_Scrollbox_C_ExecuteUbergraph_WBP_Scrollbox::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Scrollbox_C_ExecuteUbergraph_WBP_Scrollbox, CallFunc_SlotAsScrollBoxSlot_ReturnValue) == 0x000018, "Member 'WBP_Scrollbox_C_ExecuteUbergraph_WBP_Scrollbox::CallFunc_SlotAsScrollBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Scrollbox_C_ExecuteUbergraph_WBP_Scrollbox, K2Node_Event_FocusedWidgetHost) == 0x000020, "Member 'WBP_Scrollbox_C_ExecuteUbergraph_WBP_Scrollbox::K2Node_Event_FocusedWidgetHost' has a wrong offset!");
static_assert(offsetof(WBP_Scrollbox_C_ExecuteUbergraph_WBP_Scrollbox, K2Node_Event_FocusEvent) == 0x000028, "Member 'WBP_Scrollbox_C_ExecuteUbergraph_WBP_Scrollbox::K2Node_Event_FocusEvent' has a wrong offset!");
static_assert(offsetof(WBP_Scrollbox_C_ExecuteUbergraph_WBP_Scrollbox, K2Node_Event_IsDesignTime) == 0x000030, "Member 'WBP_Scrollbox_C_ExecuteUbergraph_WBP_Scrollbox::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_Scrollbox_C_ExecuteUbergraph_WBP_Scrollbox, CallFunc_GetFocusCause_ReturnValue) == 0x000031, "Member 'WBP_Scrollbox_C_ExecuteUbergraph_WBP_Scrollbox::CallFunc_GetFocusCause_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Scrollbox_C_ExecuteUbergraph_WBP_Scrollbox, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000032, "Member 'WBP_Scrollbox_C_ExecuteUbergraph_WBP_Scrollbox::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Scrollbox_C_ExecuteUbergraph_WBP_Scrollbox, CallFunc_BooleanAND_ReturnValue) == 0x000033, "Member 'WBP_Scrollbox_C_ExecuteUbergraph_WBP_Scrollbox::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_Scrollbox.WBP_Scrollbox_C.OnChildFocused
// 0x0010 (0x0010 - 0x0000)
struct WBP_Scrollbox_C_OnChildFocused final
{
public:
	class UNativeWidgetHost*                      FocusedWidgetHost;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFocusEvent                            FocusEvent;                                        // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(WBP_Scrollbox_C_OnChildFocused) == 0x000008, "Wrong alignment on WBP_Scrollbox_C_OnChildFocused");
static_assert(sizeof(WBP_Scrollbox_C_OnChildFocused) == 0x000010, "Wrong size on WBP_Scrollbox_C_OnChildFocused");
static_assert(offsetof(WBP_Scrollbox_C_OnChildFocused, FocusedWidgetHost) == 0x000000, "Member 'WBP_Scrollbox_C_OnChildFocused::FocusedWidgetHost' has a wrong offset!");
static_assert(offsetof(WBP_Scrollbox_C_OnChildFocused, FocusEvent) == 0x000008, "Member 'WBP_Scrollbox_C_OnChildFocused::FocusEvent' has a wrong offset!");

// Function WBP_Scrollbox.WBP_Scrollbox_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_Scrollbox_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Scrollbox_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_Scrollbox_C_PreConstruct");
static_assert(sizeof(WBP_Scrollbox_C_PreConstruct) == 0x000001, "Wrong size on WBP_Scrollbox_C_PreConstruct");
static_assert(offsetof(WBP_Scrollbox_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_Scrollbox_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_Scrollbox.WBP_Scrollbox_C.ScrollWidgetIntoView
// 0x0020 (0x0020 - 0x0000)
struct WBP_Scrollbox_C_ScrollWidgetIntoView final
{
public:
	class UWidget*                                WidgetToFind;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          AnimateScroll;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDescendantScrollDestination                  ScrollDestination;                                 // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Padding_0;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ScrollWidgetIntoView_Padding_ImplicitCast; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Scrollbox_C_ScrollWidgetIntoView) == 0x000008, "Wrong alignment on WBP_Scrollbox_C_ScrollWidgetIntoView");
static_assert(sizeof(WBP_Scrollbox_C_ScrollWidgetIntoView) == 0x000020, "Wrong size on WBP_Scrollbox_C_ScrollWidgetIntoView");
static_assert(offsetof(WBP_Scrollbox_C_ScrollWidgetIntoView, WidgetToFind) == 0x000000, "Member 'WBP_Scrollbox_C_ScrollWidgetIntoView::WidgetToFind' has a wrong offset!");
static_assert(offsetof(WBP_Scrollbox_C_ScrollWidgetIntoView, AnimateScroll) == 0x000008, "Member 'WBP_Scrollbox_C_ScrollWidgetIntoView::AnimateScroll' has a wrong offset!");
static_assert(offsetof(WBP_Scrollbox_C_ScrollWidgetIntoView, ScrollDestination) == 0x000009, "Member 'WBP_Scrollbox_C_ScrollWidgetIntoView::ScrollDestination' has a wrong offset!");
static_assert(offsetof(WBP_Scrollbox_C_ScrollWidgetIntoView, Padding_0) == 0x000010, "Member 'WBP_Scrollbox_C_ScrollWidgetIntoView::Padding_0' has a wrong offset!");
static_assert(offsetof(WBP_Scrollbox_C_ScrollWidgetIntoView, CallFunc_ScrollWidgetIntoView_Padding_ImplicitCast) == 0x000018, "Member 'WBP_Scrollbox_C_ScrollWidgetIntoView::CallFunc_ScrollWidgetIntoView_Padding_ImplicitCast' has a wrong offset!");

// Function WBP_Scrollbox.WBP_Scrollbox_C.SetScrollNavigationCustomBoundary
// 0x0014 (0x0014 - 0x0000)
struct WBP_Scrollbox_C_SetScrollNavigationCustomBoundary final
{
public:
	EUINavigation                                 Direction;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EUINavigation Navigation)>     InCustomDelegate;                                  // 0x0004(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Scrollbox_C_SetScrollNavigationCustomBoundary) == 0x000004, "Wrong alignment on WBP_Scrollbox_C_SetScrollNavigationCustomBoundary");
static_assert(sizeof(WBP_Scrollbox_C_SetScrollNavigationCustomBoundary) == 0x000014, "Wrong size on WBP_Scrollbox_C_SetScrollNavigationCustomBoundary");
static_assert(offsetof(WBP_Scrollbox_C_SetScrollNavigationCustomBoundary, Direction) == 0x000000, "Member 'WBP_Scrollbox_C_SetScrollNavigationCustomBoundary::Direction' has a wrong offset!");
static_assert(offsetof(WBP_Scrollbox_C_SetScrollNavigationCustomBoundary, InCustomDelegate) == 0x000004, "Member 'WBP_Scrollbox_C_SetScrollNavigationCustomBoundary::InCustomDelegate' has a wrong offset!");

// Function WBP_Scrollbox.WBP_Scrollbox_C.SetScrollNavigationRuleBase
// 0x0002 (0x0002 - 0x0000)
struct WBP_Scrollbox_C_SetScrollNavigationRuleBase final
{
public:
	EUINavigation                                 Direction;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUINavigationRule                             Rule;                                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Scrollbox_C_SetScrollNavigationRuleBase) == 0x000001, "Wrong alignment on WBP_Scrollbox_C_SetScrollNavigationRuleBase");
static_assert(sizeof(WBP_Scrollbox_C_SetScrollNavigationRuleBase) == 0x000002, "Wrong size on WBP_Scrollbox_C_SetScrollNavigationRuleBase");
static_assert(offsetof(WBP_Scrollbox_C_SetScrollNavigationRuleBase, Direction) == 0x000000, "Member 'WBP_Scrollbox_C_SetScrollNavigationRuleBase::Direction' has a wrong offset!");
static_assert(offsetof(WBP_Scrollbox_C_SetScrollNavigationRuleBase, Rule) == 0x000001, "Member 'WBP_Scrollbox_C_SetScrollNavigationRuleBase::Rule' has a wrong offset!");

// Function WBP_Scrollbox.WBP_Scrollbox_C.SetupNavigation
// 0x0001 (0x0001 - 0x0000)
struct WBP_Scrollbox_C_SetupNavigation final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Scrollbox_C_SetupNavigation) == 0x000001, "Wrong alignment on WBP_Scrollbox_C_SetupNavigation");
static_assert(sizeof(WBP_Scrollbox_C_SetupNavigation) == 0x000001, "Wrong size on WBP_Scrollbox_C_SetupNavigation");
static_assert(offsetof(WBP_Scrollbox_C_SetupNavigation, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_Scrollbox_C_SetupNavigation::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

