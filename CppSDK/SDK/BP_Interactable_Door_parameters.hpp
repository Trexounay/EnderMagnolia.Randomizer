#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Interactable_Door

#include "Basic.hpp"

#include "Zion_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Interactable_Door.BP_Interactable_Door_C.BndEvt__BP_Interactable_Door_ClearComponent_K2Node_ComponentBoundEvent_1_ClearableDelegate__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_Interactable_Door_C_BndEvt__BP_Interactable_Door_ClearComponent_K2Node_ComponentBoundEvent_1_ClearableDelegate__DelegateSignature final
{
public:
	EClearStatus                                  ClearStatus;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Interactable_Door_C_BndEvt__BP_Interactable_Door_ClearComponent_K2Node_ComponentBoundEvent_1_ClearableDelegate__DelegateSignature) == 0x000001, "Wrong alignment on BP_Interactable_Door_C_BndEvt__BP_Interactable_Door_ClearComponent_K2Node_ComponentBoundEvent_1_ClearableDelegate__DelegateSignature");
static_assert(sizeof(BP_Interactable_Door_C_BndEvt__BP_Interactable_Door_ClearComponent_K2Node_ComponentBoundEvent_1_ClearableDelegate__DelegateSignature) == 0x000001, "Wrong size on BP_Interactable_Door_C_BndEvt__BP_Interactable_Door_ClearComponent_K2Node_ComponentBoundEvent_1_ClearableDelegate__DelegateSignature");
static_assert(offsetof(BP_Interactable_Door_C_BndEvt__BP_Interactable_Door_ClearComponent_K2Node_ComponentBoundEvent_1_ClearableDelegate__DelegateSignature, ClearStatus) == 0x000000, "Member 'BP_Interactable_Door_C_BndEvt__BP_Interactable_Door_ClearComponent_K2Node_ComponentBoundEvent_1_ClearableDelegate__DelegateSignature::ClearStatus' has a wrong offset!");

// Function BP_Interactable_Door.BP_Interactable_Door_C.ExecuteUbergraph_BP_Interactable_Door
// 0x0158 (0x0158 - 0x0000)
struct BP_Interactable_Door_C_ExecuteUbergraph_BP_Interactable_Door final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EClearStatus                                  K2Node_ComponentBoundEvent_ClearStatus;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_Event_Controller_1;                         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnyDoorMoving_IsMoving;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_Event_Controller;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWorldSpaceWidgetHolder*                CallFunc_CreateWorldSpaceWidgetHolder_ReturnValue; // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0058(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Interactable_Door_C_ExecuteUbergraph_BP_Interactable_Door) == 0x000008, "Wrong alignment on BP_Interactable_Door_C_ExecuteUbergraph_BP_Interactable_Door");
static_assert(sizeof(BP_Interactable_Door_C_ExecuteUbergraph_BP_Interactable_Door) == 0x000158, "Wrong size on BP_Interactable_Door_C_ExecuteUbergraph_BP_Interactable_Door");
static_assert(offsetof(BP_Interactable_Door_C_ExecuteUbergraph_BP_Interactable_Door, EntryPoint) == 0x000000, "Member 'BP_Interactable_Door_C_ExecuteUbergraph_BP_Interactable_Door::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_ExecuteUbergraph_BP_Interactable_Door, K2Node_ComponentBoundEvent_ClearStatus) == 0x000004, "Member 'BP_Interactable_Door_C_ExecuteUbergraph_BP_Interactable_Door::K2Node_ComponentBoundEvent_ClearStatus' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_ExecuteUbergraph_BP_Interactable_Door, K2Node_Event_Controller_1) == 0x000008, "Member 'BP_Interactable_Door_C_ExecuteUbergraph_BP_Interactable_Door::K2Node_Event_Controller_1' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_ExecuteUbergraph_BP_Interactable_Door, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'BP_Interactable_Door_C_ExecuteUbergraph_BP_Interactable_Door::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_ExecuteUbergraph_BP_Interactable_Door, CallFunc_IsAnyDoorMoving_IsMoving) == 0x000011, "Member 'BP_Interactable_Door_C_ExecuteUbergraph_BP_Interactable_Door::CallFunc_IsAnyDoorMoving_IsMoving' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_ExecuteUbergraph_BP_Interactable_Door, CallFunc_Not_PreBool_ReturnValue) == 0x000012, "Member 'BP_Interactable_Door_C_ExecuteUbergraph_BP_Interactable_Door::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_ExecuteUbergraph_BP_Interactable_Door, K2Node_Event_Controller) == 0x000018, "Member 'BP_Interactable_Door_C_ExecuteUbergraph_BP_Interactable_Door::K2Node_Event_Controller' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_ExecuteUbergraph_BP_Interactable_Door, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'BP_Interactable_Door_C_ExecuteUbergraph_BP_Interactable_Door::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_ExecuteUbergraph_BP_Interactable_Door, CallFunc_CreateWorldSpaceWidgetHolder_ReturnValue) == 0x000038, "Member 'BP_Interactable_Door_C_ExecuteUbergraph_BP_Interactable_Door::CallFunc_CreateWorldSpaceWidgetHolder_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_ExecuteUbergraph_BP_Interactable_Door, CallFunc_Add_VectorVector_ReturnValue) == 0x000040, "Member 'BP_Interactable_Door_C_ExecuteUbergraph_BP_Interactable_Door::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_ExecuteUbergraph_BP_Interactable_Door, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000058, "Member 'BP_Interactable_Door_C_ExecuteUbergraph_BP_Interactable_Door::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_ExecuteUbergraph_BP_Interactable_Door, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000150, "Member 'BP_Interactable_Door_C_ExecuteUbergraph_BP_Interactable_Door::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");

// Function BP_Interactable_Door.BP_Interactable_Door_C.FlipDoor
// 0x0010 (0x0010 - 0x0000)
struct BP_Interactable_Door_C_FlipDoor final
{
public:
	class ABP_Door_C*                             Door;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          RequestInstant;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsOpen_IsOpen;                         // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Interactable_Door_C_FlipDoor) == 0x000008, "Wrong alignment on BP_Interactable_Door_C_FlipDoor");
static_assert(sizeof(BP_Interactable_Door_C_FlipDoor) == 0x000010, "Wrong size on BP_Interactable_Door_C_FlipDoor");
static_assert(offsetof(BP_Interactable_Door_C_FlipDoor, Door) == 0x000000, "Member 'BP_Interactable_Door_C_FlipDoor::Door' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_FlipDoor, RequestInstant) == 0x000008, "Member 'BP_Interactable_Door_C_FlipDoor::RequestInstant' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_FlipDoor, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_Interactable_Door_C_FlipDoor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_FlipDoor, CallFunc_GetIsOpen_IsOpen) == 0x00000A, "Member 'BP_Interactable_Door_C_FlipDoor::CallFunc_GetIsOpen_IsOpen' has a wrong offset!");

// Function BP_Interactable_Door.BP_Interactable_Door_C.FlipDoors
// 0x0028 (0x0028 - 0x0000)
struct BP_Interactable_Door_C_FlipDoors final
{
public:
	bool                                          RequestInstant;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Door_C*                             CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Interactable_Door_C_FlipDoors) == 0x000008, "Wrong alignment on BP_Interactable_Door_C_FlipDoors");
static_assert(sizeof(BP_Interactable_Door_C_FlipDoors) == 0x000028, "Wrong size on BP_Interactable_Door_C_FlipDoors");
static_assert(offsetof(BP_Interactable_Door_C_FlipDoors, RequestInstant) == 0x000000, "Member 'BP_Interactable_Door_C_FlipDoors::RequestInstant' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_FlipDoors, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_Interactable_Door_C_FlipDoors::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_FlipDoors, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_Interactable_Door_C_FlipDoors::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_FlipDoors, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_Interactable_Door_C_FlipDoors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_FlipDoors, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_Interactable_Door_C_FlipDoors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_FlipDoors, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_Interactable_Door_C_FlipDoors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_FlipDoors, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_Interactable_Door_C_FlipDoors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Interactable_Door.BP_Interactable_Door_C.GetMapIconActorWithDependencies
// 0x0030 (0x0030 - 0x0000)
struct BP_Interactable_Door_C_GetMapIconActorWithDependencies final
{
public:
	struct FMapIconProviderData                   OutMapIconProviderData;                            // 0x0000(0x0018)(Parm, OutParm)
	struct FMapIconProviderData                   K2Node_MakeStruct_MapIconProviderData;             // 0x0018(0x0018)()
};
static_assert(alignof(BP_Interactable_Door_C_GetMapIconActorWithDependencies) == 0x000008, "Wrong alignment on BP_Interactable_Door_C_GetMapIconActorWithDependencies");
static_assert(sizeof(BP_Interactable_Door_C_GetMapIconActorWithDependencies) == 0x000030, "Wrong size on BP_Interactable_Door_C_GetMapIconActorWithDependencies");
static_assert(offsetof(BP_Interactable_Door_C_GetMapIconActorWithDependencies, OutMapIconProviderData) == 0x000000, "Member 'BP_Interactable_Door_C_GetMapIconActorWithDependencies::OutMapIconProviderData' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_GetMapIconActorWithDependencies, K2Node_MakeStruct_MapIconProviderData) == 0x000018, "Member 'BP_Interactable_Door_C_GetMapIconActorWithDependencies::K2Node_MakeStruct_MapIconProviderData' has a wrong offset!");

// Function BP_Interactable_Door.BP_Interactable_Door_C.OnInteract
// 0x0008 (0x0008 - 0x0000)
struct BP_Interactable_Door_C_OnInteract final
{
public:
	class APlayerController*                      Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Interactable_Door_C_OnInteract) == 0x000008, "Wrong alignment on BP_Interactable_Door_C_OnInteract");
static_assert(sizeof(BP_Interactable_Door_C_OnInteract) == 0x000008, "Wrong size on BP_Interactable_Door_C_OnInteract");
static_assert(offsetof(BP_Interactable_Door_C_OnInteract, Controller) == 0x000000, "Member 'BP_Interactable_Door_C_OnInteract::Controller' has a wrong offset!");

// Function BP_Interactable_Door.BP_Interactable_Door_C.OnInteract_ConditionCheckFailed
// 0x0008 (0x0008 - 0x0000)
struct BP_Interactable_Door_C_OnInteract_ConditionCheckFailed final
{
public:
	class APlayerController*                      Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Interactable_Door_C_OnInteract_ConditionCheckFailed) == 0x000008, "Wrong alignment on BP_Interactable_Door_C_OnInteract_ConditionCheckFailed");
static_assert(sizeof(BP_Interactable_Door_C_OnInteract_ConditionCheckFailed) == 0x000008, "Wrong size on BP_Interactable_Door_C_OnInteract_ConditionCheckFailed");
static_assert(offsetof(BP_Interactable_Door_C_OnInteract_ConditionCheckFailed, Controller) == 0x000000, "Member 'BP_Interactable_Door_C_OnInteract_ConditionCheckFailed::Controller' has a wrong offset!");

// Function BP_Interactable_Door.BP_Interactable_Door_C.PlayAnimation
// 0x0002 (0x0002 - 0x0000)
struct BP_Interactable_Door_C_PlayAnimation final
{
public:
	bool                                          bOpen;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRequestInstant;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Interactable_Door_C_PlayAnimation) == 0x000001, "Wrong alignment on BP_Interactable_Door_C_PlayAnimation");
static_assert(sizeof(BP_Interactable_Door_C_PlayAnimation) == 0x000002, "Wrong size on BP_Interactable_Door_C_PlayAnimation");
static_assert(offsetof(BP_Interactable_Door_C_PlayAnimation, bOpen) == 0x000000, "Member 'BP_Interactable_Door_C_PlayAnimation::bOpen' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_PlayAnimation, bRequestInstant) == 0x000001, "Member 'BP_Interactable_Door_C_PlayAnimation::bRequestInstant' has a wrong offset!");

// Function BP_Interactable_Door.BP_Interactable_Door_C.CanAnyDoorBeFlipped
// 0x0028 (0x0028 - 0x0000)
struct BP_Interactable_Door_C_CanAnyDoorBeFlipped final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Door_C*                             CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanDoorBeFlipped_ReturnValue;             // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Interactable_Door_C_CanAnyDoorBeFlipped) == 0x000008, "Wrong alignment on BP_Interactable_Door_C_CanAnyDoorBeFlipped");
static_assert(sizeof(BP_Interactable_Door_C_CanAnyDoorBeFlipped) == 0x000028, "Wrong size on BP_Interactable_Door_C_CanAnyDoorBeFlipped");
static_assert(offsetof(BP_Interactable_Door_C_CanAnyDoorBeFlipped, ReturnValue) == 0x000000, "Member 'BP_Interactable_Door_C_CanAnyDoorBeFlipped::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_CanAnyDoorBeFlipped, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_Interactable_Door_C_CanAnyDoorBeFlipped::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_CanAnyDoorBeFlipped, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_Interactable_Door_C_CanAnyDoorBeFlipped::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_CanAnyDoorBeFlipped, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_Interactable_Door_C_CanAnyDoorBeFlipped::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_CanAnyDoorBeFlipped, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_Interactable_Door_C_CanAnyDoorBeFlipped::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_CanAnyDoorBeFlipped, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_Interactable_Door_C_CanAnyDoorBeFlipped::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_CanAnyDoorBeFlipped, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_Interactable_Door_C_CanAnyDoorBeFlipped::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_CanAnyDoorBeFlipped, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_Interactable_Door_C_CanAnyDoorBeFlipped::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_CanAnyDoorBeFlipped, CallFunc_CanDoorBeFlipped_ReturnValue) == 0x000022, "Member 'BP_Interactable_Door_C_CanAnyDoorBeFlipped::CallFunc_CanDoorBeFlipped_ReturnValue' has a wrong offset!");

// Function BP_Interactable_Door.BP_Interactable_Door_C.CanBeInteracted
// 0x0010 (0x0010 - 0x0000)
struct BP_Interactable_Door_C_CanBeInteracted final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnyDoorMoving_IsMoving;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanAnyDoorBeFlipped_ReturnValue;          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanBeInteracted_ReturnValue;              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Interactable_Door_C_CanBeInteracted) == 0x000004, "Wrong alignment on BP_Interactable_Door_C_CanBeInteracted");
static_assert(sizeof(BP_Interactable_Door_C_CanBeInteracted) == 0x000010, "Wrong size on BP_Interactable_Door_C_CanBeInteracted");
static_assert(offsetof(BP_Interactable_Door_C_CanBeInteracted, ReturnValue) == 0x000000, "Member 'BP_Interactable_Door_C_CanBeInteracted::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_CanBeInteracted, CallFunc_IsAnyDoorMoving_IsMoving) == 0x000001, "Member 'BP_Interactable_Door_C_CanBeInteracted::CallFunc_IsAnyDoorMoving_IsMoving' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_CanBeInteracted, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'BP_Interactable_Door_C_CanBeInteracted::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_CanBeInteracted, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'BP_Interactable_Door_C_CanBeInteracted::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_CanBeInteracted, CallFunc_Greater_IntInt_ReturnValue) == 0x000009, "Member 'BP_Interactable_Door_C_CanBeInteracted::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_CanBeInteracted, CallFunc_CanAnyDoorBeFlipped_ReturnValue) == 0x00000A, "Member 'BP_Interactable_Door_C_CanBeInteracted::CallFunc_CanAnyDoorBeFlipped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_CanBeInteracted, CallFunc_CanBeInteracted_ReturnValue) == 0x00000B, "Member 'BP_Interactable_Door_C_CanBeInteracted::CallFunc_CanBeInteracted_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_CanBeInteracted, CallFunc_BooleanAND_ReturnValue) == 0x00000C, "Member 'BP_Interactable_Door_C_CanBeInteracted::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_CanBeInteracted, CallFunc_BooleanAND_ReturnValue_1) == 0x00000D, "Member 'BP_Interactable_Door_C_CanBeInteracted::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_Interactable_Door.BP_Interactable_Door_C.CanDoorBeFlipped
// 0x0010 (0x0010 - 0x0000)
struct BP_Interactable_Door_C_CanDoorBeFlipped final
{
public:
	class ABP_Door_C*                             Door;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsOpen_IsOpen;                         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsOpen_IsOpen_1;                       // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Interactable_Door_C_CanDoorBeFlipped) == 0x000008, "Wrong alignment on BP_Interactable_Door_C_CanDoorBeFlipped");
static_assert(sizeof(BP_Interactable_Door_C_CanDoorBeFlipped) == 0x000010, "Wrong size on BP_Interactable_Door_C_CanDoorBeFlipped");
static_assert(offsetof(BP_Interactable_Door_C_CanDoorBeFlipped, Door) == 0x000000, "Member 'BP_Interactable_Door_C_CanDoorBeFlipped::Door' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_CanDoorBeFlipped, ReturnValue) == 0x000008, "Member 'BP_Interactable_Door_C_CanDoorBeFlipped::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_CanDoorBeFlipped, CallFunc_GetIsOpen_IsOpen) == 0x000009, "Member 'BP_Interactable_Door_C_CanDoorBeFlipped::CallFunc_GetIsOpen_IsOpen' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_CanDoorBeFlipped, CallFunc_GetIsOpen_IsOpen_1) == 0x00000A, "Member 'BP_Interactable_Door_C_CanDoorBeFlipped::CallFunc_GetIsOpen_IsOpen_1' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_CanDoorBeFlipped, CallFunc_IsValid_ReturnValue) == 0x00000B, "Member 'BP_Interactable_Door_C_CanDoorBeFlipped::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_CanDoorBeFlipped, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'BP_Interactable_Door_C_CanDoorBeFlipped::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_CanDoorBeFlipped, CallFunc_BooleanAND_ReturnValue) == 0x00000D, "Member 'BP_Interactable_Door_C_CanDoorBeFlipped::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_CanDoorBeFlipped, CallFunc_BooleanAND_ReturnValue_1) == 0x00000E, "Member 'BP_Interactable_Door_C_CanDoorBeFlipped::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_CanDoorBeFlipped, CallFunc_BooleanOR_ReturnValue) == 0x00000F, "Member 'BP_Interactable_Door_C_CanDoorBeFlipped::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_Interactable_Door.BP_Interactable_Door_C.IsAnyDoorMoving
// 0x0028 (0x0028 - 0x0000)
struct BP_Interactable_Door_C_IsAnyDoorMoving final
{
public:
	bool                                          IsMoving;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Door_C*                             CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMoving_bMoving;                         // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Interactable_Door_C_IsAnyDoorMoving) == 0x000008, "Wrong alignment on BP_Interactable_Door_C_IsAnyDoorMoving");
static_assert(sizeof(BP_Interactable_Door_C_IsAnyDoorMoving) == 0x000028, "Wrong size on BP_Interactable_Door_C_IsAnyDoorMoving");
static_assert(offsetof(BP_Interactable_Door_C_IsAnyDoorMoving, IsMoving) == 0x000000, "Member 'BP_Interactable_Door_C_IsAnyDoorMoving::IsMoving' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_IsAnyDoorMoving, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_Interactable_Door_C_IsAnyDoorMoving::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_IsAnyDoorMoving, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_Interactable_Door_C_IsAnyDoorMoving::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_IsAnyDoorMoving, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_Interactable_Door_C_IsAnyDoorMoving::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_IsAnyDoorMoving, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_Interactable_Door_C_IsAnyDoorMoving::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_IsAnyDoorMoving, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_Interactable_Door_C_IsAnyDoorMoving::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_IsAnyDoorMoving, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_Interactable_Door_C_IsAnyDoorMoving::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_IsAnyDoorMoving, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_Interactable_Door_C_IsAnyDoorMoving::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_C_IsAnyDoorMoving, CallFunc_IsMoving_bMoving) == 0x000022, "Member 'BP_Interactable_Door_C_IsAnyDoorMoving::CallFunc_IsMoving_bMoving' has a wrong offset!");

}

