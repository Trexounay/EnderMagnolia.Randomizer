#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PassiveUnlock

#include "Basic.hpp"

#include "Zion_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_PassiveUnlock.WBP_PassiveUnlock_C.CanUpgradePassiveData
// 0x0280 (0x0280 - 0x0000)
struct WBP_PassiveUnlock_C_CanUpgradePassiveData final
{
public:
	struct FInventoryItemPassiveData              InventoryItemPassiveData;                          // 0x0000(0x0268)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          CanBeUpgraded;                                     // 0x0268(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeZion*                          CallFunc_Get_ReturnValue;                          // 0x0270(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInNewGamePlus_ReturnValue;              // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0279(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x027A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x027B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PassiveUnlock_C_CanUpgradePassiveData) == 0x000008, "Wrong alignment on WBP_PassiveUnlock_C_CanUpgradePassiveData");
static_assert(sizeof(WBP_PassiveUnlock_C_CanUpgradePassiveData) == 0x000280, "Wrong size on WBP_PassiveUnlock_C_CanUpgradePassiveData");
static_assert(offsetof(WBP_PassiveUnlock_C_CanUpgradePassiveData, InventoryItemPassiveData) == 0x000000, "Member 'WBP_PassiveUnlock_C_CanUpgradePassiveData::InventoryItemPassiveData' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_CanUpgradePassiveData, CanBeUpgraded) == 0x000268, "Member 'WBP_PassiveUnlock_C_CanUpgradePassiveData::CanBeUpgraded' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_CanUpgradePassiveData, CallFunc_Get_ReturnValue) == 0x000270, "Member 'WBP_PassiveUnlock_C_CanUpgradePassiveData::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_CanUpgradePassiveData, CallFunc_IsInNewGamePlus_ReturnValue) == 0x000278, "Member 'WBP_PassiveUnlock_C_CanUpgradePassiveData::CallFunc_IsInNewGamePlus_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_CanUpgradePassiveData, CallFunc_Not_PreBool_ReturnValue) == 0x000279, "Member 'WBP_PassiveUnlock_C_CanUpgradePassiveData::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_CanUpgradePassiveData, CallFunc_BooleanOR_ReturnValue) == 0x00027A, "Member 'WBP_PassiveUnlock_C_CanUpgradePassiveData::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_CanUpgradePassiveData, CallFunc_BooleanAND_ReturnValue) == 0x00027B, "Member 'WBP_PassiveUnlock_C_CanUpgradePassiveData::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_PassiveUnlock.WBP_PassiveUnlock_C.CanUpgradePassiveDataHandle
// 0x0288 (0x0288 - 0x0000)
struct WBP_PassiveUnlock_C_CanUpgradePassiveDataHandle final
{
public:
	struct FDataTableRowHandle                    Handle;                                            // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	bool                                          CanBeUpgraded;                                     // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInventoryItemPassiveData              CallFunc_GetItemPassiveData_out_ItemData;          // 0x0018(0x0268)()
	bool                                          CallFunc_GetItemPassiveData_ReturnValue;           // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanUpgradePassiveData_CanBeUpgraded;      // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PassiveUnlock_C_CanUpgradePassiveDataHandle) == 0x000008, "Wrong alignment on WBP_PassiveUnlock_C_CanUpgradePassiveDataHandle");
static_assert(sizeof(WBP_PassiveUnlock_C_CanUpgradePassiveDataHandle) == 0x000288, "Wrong size on WBP_PassiveUnlock_C_CanUpgradePassiveDataHandle");
static_assert(offsetof(WBP_PassiveUnlock_C_CanUpgradePassiveDataHandle, Handle) == 0x000000, "Member 'WBP_PassiveUnlock_C_CanUpgradePassiveDataHandle::Handle' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_CanUpgradePassiveDataHandle, CanBeUpgraded) == 0x000010, "Member 'WBP_PassiveUnlock_C_CanUpgradePassiveDataHandle::CanBeUpgraded' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_CanUpgradePassiveDataHandle, CallFunc_GetItemPassiveData_out_ItemData) == 0x000018, "Member 'WBP_PassiveUnlock_C_CanUpgradePassiveDataHandle::CallFunc_GetItemPassiveData_out_ItemData' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_CanUpgradePassiveDataHandle, CallFunc_GetItemPassiveData_ReturnValue) == 0x000280, "Member 'WBP_PassiveUnlock_C_CanUpgradePassiveDataHandle::CallFunc_GetItemPassiveData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_CanUpgradePassiveDataHandle, CallFunc_CanUpgradePassiveData_CanBeUpgraded) == 0x000281, "Member 'WBP_PassiveUnlock_C_CanUpgradePassiveDataHandle::CallFunc_CanUpgradePassiveData_CanBeUpgraded' has a wrong offset!");

// Function WBP_PassiveUnlock.WBP_PassiveUnlock_C.CanUpgradePassiveEntry
// 0x0010 (0x0010 - 0x0000)
struct WBP_PassiveUnlock_C_CanUpgradePassiveEntry final
{
public:
	class UWBP_PassiveEntry_C*                    PassiveEntry;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CanBeUpgraded;                                     // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanUpgradePassiveDataHandle_CanBeUpgraded; // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PassiveUnlock_C_CanUpgradePassiveEntry) == 0x000008, "Wrong alignment on WBP_PassiveUnlock_C_CanUpgradePassiveEntry");
static_assert(sizeof(WBP_PassiveUnlock_C_CanUpgradePassiveEntry) == 0x000010, "Wrong size on WBP_PassiveUnlock_C_CanUpgradePassiveEntry");
static_assert(offsetof(WBP_PassiveUnlock_C_CanUpgradePassiveEntry, PassiveEntry) == 0x000000, "Member 'WBP_PassiveUnlock_C_CanUpgradePassiveEntry::PassiveEntry' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_CanUpgradePassiveEntry, CanBeUpgraded) == 0x000008, "Member 'WBP_PassiveUnlock_C_CanUpgradePassiveEntry::CanBeUpgraded' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_CanUpgradePassiveEntry, CallFunc_CanUpgradePassiveDataHandle_CanBeUpgraded) == 0x000009, "Member 'WBP_PassiveUnlock_C_CanUpgradePassiveEntry::CallFunc_CanUpgradePassiveDataHandle_CanBeUpgraded' has a wrong offset!");

// Function WBP_PassiveUnlock.WBP_PassiveUnlock_C.CreatePassiveList
// 0x00F8 (0x00F8 - 0x0000)
struct WBP_PassiveUnlock_C_CreatePassiveList final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWBP_PassiveEntry_C* PassiveEntry)> K2Node_CreateDelegate_OutputDelegate;   // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_PassiveEntry_C*                    CallFunc_Create_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UInventory*                             CallFunc_GetPassiveInventory_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UDataTable*                       CallFunc_GetDataTable_ReturnValue;                 // 0x0038(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, int32>                      CallFunc_GetAllItemsAvailable_ReturnValue;         // 0x0040(0x0050)()
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0090(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPassiveEquipped_ReturnValue;            // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AE[0x2];                                       // 0x00AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle;              // 0x00B0(0x0010)(NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default;                             // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWBP_PassiveEntry_C* PassiveEntry)> K2Node_CreateDelegate_OutputDelegate_1; // 0x00D4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWBP_PassiveEntry_C* PassiveEntry)> K2Node_CreateDelegate_OutputDelegate_2; // 0x00E4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PassiveUnlock_C_CreatePassiveList) == 0x000008, "Wrong alignment on WBP_PassiveUnlock_C_CreatePassiveList");
static_assert(sizeof(WBP_PassiveUnlock_C_CreatePassiveList) == 0x0000F8, "Wrong size on WBP_PassiveUnlock_C_CreatePassiveList");
static_assert(offsetof(WBP_PassiveUnlock_C_CreatePassiveList, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_PassiveUnlock_C_CreatePassiveList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_CreatePassiveList, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_PassiveUnlock_C_CreatePassiveList::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_CreatePassiveList, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'WBP_PassiveUnlock_C_CreatePassiveList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_CreatePassiveList, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'WBP_PassiveUnlock_C_CreatePassiveList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_CreatePassiveList, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'WBP_PassiveUnlock_C_CreatePassiveList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_CreatePassiveList, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000020, "Member 'WBP_PassiveUnlock_C_CreatePassiveList::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_CreatePassiveList, CallFunc_Create_ReturnValue) == 0x000028, "Member 'WBP_PassiveUnlock_C_CreatePassiveList::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_CreatePassiveList, CallFunc_GetPassiveInventory_ReturnValue) == 0x000030, "Member 'WBP_PassiveUnlock_C_CreatePassiveList::CallFunc_GetPassiveInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_CreatePassiveList, CallFunc_GetDataTable_ReturnValue) == 0x000038, "Member 'WBP_PassiveUnlock_C_CreatePassiveList::CallFunc_GetDataTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_CreatePassiveList, CallFunc_GetAllItemsAvailable_ReturnValue) == 0x000040, "Member 'WBP_PassiveUnlock_C_CreatePassiveList::CallFunc_GetAllItemsAvailable_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_CreatePassiveList, CallFunc_Map_Keys_Keys) == 0x000090, "Member 'WBP_PassiveUnlock_C_CreatePassiveList::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_CreatePassiveList, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'WBP_PassiveUnlock_C_CreatePassiveList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_CreatePassiveList, CallFunc_Array_Length_ReturnValue_1) == 0x0000A8, "Member 'WBP_PassiveUnlock_C_CreatePassiveList::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_CreatePassiveList, CallFunc_IsPassiveEquipped_ReturnValue) == 0x0000AC, "Member 'WBP_PassiveUnlock_C_CreatePassiveList::CallFunc_IsPassiveEquipped_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_CreatePassiveList, CallFunc_Less_IntInt_ReturnValue) == 0x0000AD, "Member 'WBP_PassiveUnlock_C_CreatePassiveList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_CreatePassiveList, K2Node_MakeStruct_DataTableRowHandle) == 0x0000B0, "Member 'WBP_PassiveUnlock_C_CreatePassiveList::K2Node_MakeStruct_DataTableRowHandle' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_CreatePassiveList, Temp_bool_Variable) == 0x0000C0, "Member 'WBP_PassiveUnlock_C_CreatePassiveList::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_CreatePassiveList, K2Node_Select_Default) == 0x0000C8, "Member 'WBP_PassiveUnlock_C_CreatePassiveList::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_CreatePassiveList, CallFunc_Array_Add_ReturnValue) == 0x0000D0, "Member 'WBP_PassiveUnlock_C_CreatePassiveList::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_CreatePassiveList, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000D4, "Member 'WBP_PassiveUnlock_C_CreatePassiveList::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_CreatePassiveList, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000E4, "Member 'WBP_PassiveUnlock_C_CreatePassiveList::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");

// Function WBP_PassiveUnlock.WBP_PassiveUnlock_C.ExecuteUbergraph_WBP_PassiveUnlock
// 0x0398 (0x0398 - 0x0000)
struct WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetGamePaused_ReturnValue;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_Dialog_YesNo_C*                    CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_Dialog_OK_C*                       CallFunc_Create_ReturnValue_1;                     // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_Dialog_OK_C*                       CallFunc_Create_ReturnValue_2;                     // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_PassiveUnlock_Anim_Upgrade_C*      CallFunc_Create_ReturnValue_3;                     // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_GameMenu_C*                        CallFunc_Create_ReturnValue_4;                     // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPlayUMGAnimationAsyncAction*           CallFunc_PlayUMGAnimation_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0058(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerControllerZion*                  CallFunc_Get_ReturnValue;                          // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPlayUMGAnimationAsyncAction*           CallFunc_PlayUMGAnimation_ReturnValue_1;           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetGamePaused_ReturnValue_1;              // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetGamePaused_ReturnValue_2;              // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_83[0x5];                                       // 0x0083(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerControllerZion*                  CallFunc_Get_ReturnValue_1;                        // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_PassiveEntry_C*                    K2Node_CustomEvent_PassiveEntry_2;                 // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasEnoughCurrencyForUpgrade_HasEnoughCurrency; // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanUpgradePassiveEntry_CanBeUpgraded;     // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_PassiveEntry_C*                    K2Node_CustomEvent_PassiveEntry_1;                 // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x00A8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x00B8(0x0010)(ConstParm)
	class FText                                   Temp_text_Variable_1;                              // 0x00C8(0x0010)(ConstParm)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x00E0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FInventoryItemPassiveData              CallFunc_GetItemPassiveData_out_ItemData;          // 0x00F0(0x0268)()
	bool                                          CallFunc_GetItemPassiveData_ReturnValue;           // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359[0x7];                                      // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_2;                              // 0x0360(0x0010)(ConstParm)
	class UWBP_PassiveEntry_C*                    K2Node_CustomEvent_PassiveEntry;                   // 0x0370(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0378(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x0388(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock) == 0x000008, "Wrong alignment on WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock");
static_assert(sizeof(WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock) == 0x000398, "Wrong size on WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock");
static_assert(offsetof(WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock, EntryPoint) == 0x000000, "Member 'WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock, CallFunc_SetGamePaused_ReturnValue) == 0x000004, "Member 'WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock::CallFunc_SetGamePaused_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock, CallFunc_Create_ReturnValue) == 0x000018, "Member 'WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock, CallFunc_Create_ReturnValue_1) == 0x000020, "Member 'WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock, CallFunc_Create_ReturnValue_2) == 0x000028, "Member 'WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock::CallFunc_Create_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock, CallFunc_Create_ReturnValue_3) == 0x000038, "Member 'WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock::CallFunc_Create_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock, CallFunc_IsValid_ReturnValue_1) == 0x000040, "Member 'WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock, CallFunc_IsValid_ReturnValue_2) == 0x000041, "Member 'WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock, CallFunc_Create_ReturnValue_4) == 0x000048, "Member 'WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock::CallFunc_Create_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock, CallFunc_PlayUMGAnimation_ReturnValue) == 0x000050, "Member 'WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock::CallFunc_PlayUMGAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock, K2Node_CreateDelegate_OutputDelegate_1) == 0x000058, "Member 'WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock, CallFunc_IsValid_ReturnValue_3) == 0x000068, "Member 'WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock, CallFunc_Get_ReturnValue) == 0x000070, "Member 'WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock, CallFunc_PlayUMGAnimation_ReturnValue_1) == 0x000078, "Member 'WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock::CallFunc_PlayUMGAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock, CallFunc_IsValid_ReturnValue_4) == 0x000080, "Member 'WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock, CallFunc_SetGamePaused_ReturnValue_1) == 0x000081, "Member 'WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock::CallFunc_SetGamePaused_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock, CallFunc_SetGamePaused_ReturnValue_2) == 0x000082, "Member 'WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock::CallFunc_SetGamePaused_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock, CallFunc_Get_ReturnValue_1) == 0x000088, "Member 'WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock::CallFunc_Get_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock, K2Node_CustomEvent_PassiveEntry_2) == 0x000090, "Member 'WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock::K2Node_CustomEvent_PassiveEntry_2' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock, CallFunc_HasEnoughCurrencyForUpgrade_HasEnoughCurrency) == 0x000098, "Member 'WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock::CallFunc_HasEnoughCurrencyForUpgrade_HasEnoughCurrency' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock, CallFunc_CanUpgradePassiveEntry_CanBeUpgraded) == 0x000099, "Member 'WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock::CallFunc_CanUpgradePassiveEntry_CanBeUpgraded' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock, K2Node_CustomEvent_PassiveEntry_1) == 0x0000A0, "Member 'WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock::K2Node_CustomEvent_PassiveEntry_1' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000A8, "Member 'WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock, Temp_text_Variable) == 0x0000B8, "Member 'WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock, Temp_text_Variable_1) == 0x0000C8, "Member 'WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock, CallFunc_AddChild_ReturnValue) == 0x0000D8, "Member 'WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000E0, "Member 'WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock, CallFunc_GetItemPassiveData_out_ItemData) == 0x0000F0, "Member 'WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock::CallFunc_GetItemPassiveData_out_ItemData' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock, CallFunc_GetItemPassiveData_ReturnValue) == 0x000358, "Member 'WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock::CallFunc_GetItemPassiveData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock, Temp_text_Variable_2) == 0x000360, "Member 'WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock, K2Node_CustomEvent_PassiveEntry) == 0x000370, "Member 'WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock::K2Node_CustomEvent_PassiveEntry' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock, K2Node_CreateDelegate_OutputDelegate_4) == 0x000378, "Member 'WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock, K2Node_CreateDelegate_OutputDelegate_5) == 0x000388, "Member 'WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");

// Function WBP_PassiveUnlock.WBP_PassiveUnlock_C.HasEnoughCurrencyForUpgrade
// 0x0290 (0x0290 - 0x0000)
struct WBP_PassiveUnlock_C_HasEnoughCurrencyForUpgrade final
{
public:
	class UWBP_PassiveEntry_C*                    PassiveEntry;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          HasEnoughCurrency;                                 // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrency_ReturnValue;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInventoryItemPassiveData              CallFunc_GetItemPassiveData_out_ItemData;          // 0x0010(0x0268)()
	bool                                          CallFunc_GetItemPassiveData_ReturnValue;           // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_279[0x3];                                      // 0x0279(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCurrencyValue                         CallFunc_ToCurrencyValue_ReturnValue;              // 0x027C(0x0008)(NoDestructor)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PassiveUnlock_C_HasEnoughCurrencyForUpgrade) == 0x000008, "Wrong alignment on WBP_PassiveUnlock_C_HasEnoughCurrencyForUpgrade");
static_assert(sizeof(WBP_PassiveUnlock_C_HasEnoughCurrencyForUpgrade) == 0x000290, "Wrong size on WBP_PassiveUnlock_C_HasEnoughCurrencyForUpgrade");
static_assert(offsetof(WBP_PassiveUnlock_C_HasEnoughCurrencyForUpgrade, PassiveEntry) == 0x000000, "Member 'WBP_PassiveUnlock_C_HasEnoughCurrencyForUpgrade::PassiveEntry' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_HasEnoughCurrencyForUpgrade, HasEnoughCurrency) == 0x000008, "Member 'WBP_PassiveUnlock_C_HasEnoughCurrencyForUpgrade::HasEnoughCurrency' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_HasEnoughCurrencyForUpgrade, CallFunc_GetCurrency_ReturnValue) == 0x00000C, "Member 'WBP_PassiveUnlock_C_HasEnoughCurrencyForUpgrade::CallFunc_GetCurrency_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_HasEnoughCurrencyForUpgrade, CallFunc_GetItemPassiveData_out_ItemData) == 0x000010, "Member 'WBP_PassiveUnlock_C_HasEnoughCurrencyForUpgrade::CallFunc_GetItemPassiveData_out_ItemData' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_HasEnoughCurrencyForUpgrade, CallFunc_GetItemPassiveData_ReturnValue) == 0x000278, "Member 'WBP_PassiveUnlock_C_HasEnoughCurrencyForUpgrade::CallFunc_GetItemPassiveData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_HasEnoughCurrencyForUpgrade, CallFunc_ToCurrencyValue_ReturnValue) == 0x00027C, "Member 'WBP_PassiveUnlock_C_HasEnoughCurrencyForUpgrade::CallFunc_ToCurrencyValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_HasEnoughCurrencyForUpgrade, CallFunc_Subtract_IntInt_ReturnValue) == 0x000284, "Member 'WBP_PassiveUnlock_C_HasEnoughCurrencyForUpgrade::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_HasEnoughCurrencyForUpgrade, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000288, "Member 'WBP_PassiveUnlock_C_HasEnoughCurrencyForUpgrade::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_PassiveUnlock.WBP_PassiveUnlock_C.OnFocusedPassiveEntry
// 0x0008 (0x0008 - 0x0000)
struct WBP_PassiveUnlock_C_OnFocusedPassiveEntry final
{
public:
	class UWBP_PassiveEntry_C*                    PassiveEntry;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PassiveUnlock_C_OnFocusedPassiveEntry) == 0x000008, "Wrong alignment on WBP_PassiveUnlock_C_OnFocusedPassiveEntry");
static_assert(sizeof(WBP_PassiveUnlock_C_OnFocusedPassiveEntry) == 0x000008, "Wrong size on WBP_PassiveUnlock_C_OnFocusedPassiveEntry");
static_assert(offsetof(WBP_PassiveUnlock_C_OnFocusedPassiveEntry, PassiveEntry) == 0x000000, "Member 'WBP_PassiveUnlock_C_OnFocusedPassiveEntry::PassiveEntry' has a wrong offset!");

// Function WBP_PassiveUnlock.WBP_PassiveUnlock_C.OnFocusReceived
// 0x01B8 (0x01B8 - 0x0000)
struct WBP_PassiveUnlock_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x00F8(0x00B8)()
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PassiveUnlock_C_OnFocusReceived) == 0x000008, "Wrong alignment on WBP_PassiveUnlock_C_OnFocusReceived");
static_assert(sizeof(WBP_PassiveUnlock_C_OnFocusReceived) == 0x0001B8, "Wrong size on WBP_PassiveUnlock_C_OnFocusReceived");
static_assert(offsetof(WBP_PassiveUnlock_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'WBP_PassiveUnlock_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'WBP_PassiveUnlock_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'WBP_PassiveUnlock_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_OnFocusReceived, CallFunc_Handled_ReturnValue) == 0x0000F8, "Member 'WBP_PassiveUnlock_C_OnFocusReceived::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_OnFocusReceived, CallFunc_GetChildAt_ReturnValue) == 0x0001B0, "Member 'WBP_PassiveUnlock_C_OnFocusReceived::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");

// Function WBP_PassiveUnlock.WBP_PassiveUnlock_C.OnPressCancel
// 0x01B0 (0x01B0 - 0x0000)
struct WBP_PassiveUnlock_C_OnPressCancel final
{
public:
	struct FKeyEvent                              KeyEvent;                                          // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x00F8(0x00B8)()
};
static_assert(alignof(WBP_PassiveUnlock_C_OnPressCancel) == 0x000008, "Wrong alignment on WBP_PassiveUnlock_C_OnPressCancel");
static_assert(sizeof(WBP_PassiveUnlock_C_OnPressCancel) == 0x0001B0, "Wrong size on WBP_PassiveUnlock_C_OnPressCancel");
static_assert(offsetof(WBP_PassiveUnlock_C_OnPressCancel, KeyEvent) == 0x000000, "Member 'WBP_PassiveUnlock_C_OnPressCancel::KeyEvent' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_OnPressCancel, ReturnValue) == 0x000040, "Member 'WBP_PassiveUnlock_C_OnPressCancel::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_OnPressCancel, CallFunc_Handled_ReturnValue) == 0x0000F8, "Member 'WBP_PassiveUnlock_C_OnPressCancel::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function WBP_PassiveUnlock.WBP_PassiveUnlock_C.OnPressedContextEntry
// 0x0008 (0x0008 - 0x0000)
struct WBP_PassiveUnlock_C_OnPressedContextEntry final
{
public:
	class UWBP_PassiveEntry_C*                    PassiveEntry;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PassiveUnlock_C_OnPressedContextEntry) == 0x000008, "Wrong alignment on WBP_PassiveUnlock_C_OnPressedContextEntry");
static_assert(sizeof(WBP_PassiveUnlock_C_OnPressedContextEntry) == 0x000008, "Wrong size on WBP_PassiveUnlock_C_OnPressedContextEntry");
static_assert(offsetof(WBP_PassiveUnlock_C_OnPressedContextEntry, PassiveEntry) == 0x000000, "Member 'WBP_PassiveUnlock_C_OnPressedContextEntry::PassiveEntry' has a wrong offset!");

// Function WBP_PassiveUnlock.WBP_PassiveUnlock_C.OnPressedPassiveEntry
// 0x0008 (0x0008 - 0x0000)
struct WBP_PassiveUnlock_C_OnPressedPassiveEntry final
{
public:
	class UWBP_PassiveEntry_C*                    PassiveEntry;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PassiveUnlock_C_OnPressedPassiveEntry) == 0x000008, "Wrong alignment on WBP_PassiveUnlock_C_OnPressedPassiveEntry");
static_assert(sizeof(WBP_PassiveUnlock_C_OnPressedPassiveEntry) == 0x000008, "Wrong size on WBP_PassiveUnlock_C_OnPressedPassiveEntry");
static_assert(offsetof(WBP_PassiveUnlock_C_OnPressedPassiveEntry, PassiveEntry) == 0x000000, "Member 'WBP_PassiveUnlock_C_OnPressedPassiveEntry::PassiveEntry' has a wrong offset!");

// Function WBP_PassiveUnlock.WBP_PassiveUnlock_C.RefreshCurrency
// 0x0298 (0x0298 - 0x0000)
struct WBP_PassiveUnlock_C_RefreshCurrency final
{
public:
	class UWBP_PassiveEntry_C*                    PassiveEntry;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         HeldCurrency;                                      // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInventoryItemPassiveData              CallFunc_GetItemPassiveData_out_ItemData;          // 0x0010(0x0268)()
	bool                                          CallFunc_GetItemPassiveData_ReturnValue;           // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_279[0x3];                                      // 0x0279(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCurrencyValue                         CallFunc_ToCurrencyValue_ReturnValue;              // 0x027C(0x0008)(NoDestructor)
	uint8                                         Pad_284[0x4];                                      // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0288(0x0010)()
};
static_assert(alignof(WBP_PassiveUnlock_C_RefreshCurrency) == 0x000008, "Wrong alignment on WBP_PassiveUnlock_C_RefreshCurrency");
static_assert(sizeof(WBP_PassiveUnlock_C_RefreshCurrency) == 0x000298, "Wrong size on WBP_PassiveUnlock_C_RefreshCurrency");
static_assert(offsetof(WBP_PassiveUnlock_C_RefreshCurrency, PassiveEntry) == 0x000000, "Member 'WBP_PassiveUnlock_C_RefreshCurrency::PassiveEntry' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_RefreshCurrency, HeldCurrency) == 0x000008, "Member 'WBP_PassiveUnlock_C_RefreshCurrency::HeldCurrency' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_RefreshCurrency, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'WBP_PassiveUnlock_C_RefreshCurrency::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_RefreshCurrency, CallFunc_GetItemPassiveData_out_ItemData) == 0x000010, "Member 'WBP_PassiveUnlock_C_RefreshCurrency::CallFunc_GetItemPassiveData_out_ItemData' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_RefreshCurrency, CallFunc_GetItemPassiveData_ReturnValue) == 0x000278, "Member 'WBP_PassiveUnlock_C_RefreshCurrency::CallFunc_GetItemPassiveData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_RefreshCurrency, CallFunc_ToCurrencyValue_ReturnValue) == 0x00027C, "Member 'WBP_PassiveUnlock_C_RefreshCurrency::CallFunc_ToCurrencyValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_RefreshCurrency, CallFunc_Conv_IntToText_ReturnValue) == 0x000288, "Member 'WBP_PassiveUnlock_C_RefreshCurrency::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WBP_PassiveUnlock.WBP_PassiveUnlock_C.RefreshPassiveEntries
// 0x0290 (0x0290 - 0x0000)
struct WBP_PassiveUnlock_C_RefreshPassiveEntries final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_PassiveEntry_C*                    CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasEnoughCurrencyForUpgrade_HasEnoughCurrency; // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInventoryItemPassiveData              CallFunc_GetItemPassiveData_out_ItemData;          // 0x0020(0x0268)()
	bool                                          CallFunc_GetItemPassiveData_ReturnValue;           // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPassiveEquipped_ReturnValue;            // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanUpgradePassiveData_CanBeUpgraded;      // 0x028A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PassiveUnlock_C_RefreshPassiveEntries) == 0x000008, "Wrong alignment on WBP_PassiveUnlock_C_RefreshPassiveEntries");
static_assert(sizeof(WBP_PassiveUnlock_C_RefreshPassiveEntries) == 0x000290, "Wrong size on WBP_PassiveUnlock_C_RefreshPassiveEntries");
static_assert(offsetof(WBP_PassiveUnlock_C_RefreshPassiveEntries, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_PassiveUnlock_C_RefreshPassiveEntries::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_RefreshPassiveEntries, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_PassiveUnlock_C_RefreshPassiveEntries::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_RefreshPassiveEntries, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_PassiveUnlock_C_RefreshPassiveEntries::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_RefreshPassiveEntries, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'WBP_PassiveUnlock_C_RefreshPassiveEntries::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_RefreshPassiveEntries, CallFunc_Array_Get_Item) == 0x000010, "Member 'WBP_PassiveUnlock_C_RefreshPassiveEntries::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_RefreshPassiveEntries, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'WBP_PassiveUnlock_C_RefreshPassiveEntries::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_RefreshPassiveEntries, CallFunc_HasEnoughCurrencyForUpgrade_HasEnoughCurrency) == 0x000019, "Member 'WBP_PassiveUnlock_C_RefreshPassiveEntries::CallFunc_HasEnoughCurrencyForUpgrade_HasEnoughCurrency' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_RefreshPassiveEntries, CallFunc_GetItemPassiveData_out_ItemData) == 0x000020, "Member 'WBP_PassiveUnlock_C_RefreshPassiveEntries::CallFunc_GetItemPassiveData_out_ItemData' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_RefreshPassiveEntries, CallFunc_GetItemPassiveData_ReturnValue) == 0x000288, "Member 'WBP_PassiveUnlock_C_RefreshPassiveEntries::CallFunc_GetItemPassiveData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_RefreshPassiveEntries, CallFunc_IsPassiveEquipped_ReturnValue) == 0x000289, "Member 'WBP_PassiveUnlock_C_RefreshPassiveEntries::CallFunc_IsPassiveEquipped_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_RefreshPassiveEntries, CallFunc_CanUpgradePassiveData_CanBeUpgraded) == 0x00028A, "Member 'WBP_PassiveUnlock_C_RefreshPassiveEntries::CallFunc_CanUpgradePassiveData_CanBeUpgraded' has a wrong offset!");

// Function WBP_PassiveUnlock.WBP_PassiveUnlock_C.SetupUIForPassiveEntry
// 0x02B8 (0x02B8 - 0x0000)
struct WBP_PassiveUnlock_C_SetupUIForPassiveEntry final
{
public:
	class UWBP_PassiveEntry_C*                    PassiveEntry;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FInventoryItemUpgradeInfo>      UpgradeInfoList;                                   // 0x0008(0x0010)(Edit, BlueprintVisible)
	struct FDataTableRowHandle                    UpgradePassiveDataHandle;                          // 0x0018(0x0010)(Edit, BlueprintVisible, NoDestructor)
	struct FDataTableRowHandle                    PassiveEntryDataHandle;                            // 0x0028(0x0010)(Edit, BlueprintVisible, NoDestructor)
	bool                                          CallFunc_HasEnoughCurrencyForUpgrade_HasEnoughCurrency; // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInventoryItemPassiveData              CallFunc_GetItemPassiveData_out_ItemData;          // 0x0040(0x0268)()
	bool                                          CallFunc_GetItemPassiveData_ReturnValue;           // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanUpgradePassiveData_CanBeUpgraded;      // 0x02A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x02AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AB[0x5];                                      // 0x02AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default;                             // 0x02B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PassiveUnlock_C_SetupUIForPassiveEntry) == 0x000008, "Wrong alignment on WBP_PassiveUnlock_C_SetupUIForPassiveEntry");
static_assert(sizeof(WBP_PassiveUnlock_C_SetupUIForPassiveEntry) == 0x0002B8, "Wrong size on WBP_PassiveUnlock_C_SetupUIForPassiveEntry");
static_assert(offsetof(WBP_PassiveUnlock_C_SetupUIForPassiveEntry, PassiveEntry) == 0x000000, "Member 'WBP_PassiveUnlock_C_SetupUIForPassiveEntry::PassiveEntry' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_SetupUIForPassiveEntry, UpgradeInfoList) == 0x000008, "Member 'WBP_PassiveUnlock_C_SetupUIForPassiveEntry::UpgradeInfoList' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_SetupUIForPassiveEntry, UpgradePassiveDataHandle) == 0x000018, "Member 'WBP_PassiveUnlock_C_SetupUIForPassiveEntry::UpgradePassiveDataHandle' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_SetupUIForPassiveEntry, PassiveEntryDataHandle) == 0x000028, "Member 'WBP_PassiveUnlock_C_SetupUIForPassiveEntry::PassiveEntryDataHandle' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_SetupUIForPassiveEntry, CallFunc_HasEnoughCurrencyForUpgrade_HasEnoughCurrency) == 0x000038, "Member 'WBP_PassiveUnlock_C_SetupUIForPassiveEntry::CallFunc_HasEnoughCurrencyForUpgrade_HasEnoughCurrency' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_SetupUIForPassiveEntry, CallFunc_GetItemPassiveData_out_ItemData) == 0x000040, "Member 'WBP_PassiveUnlock_C_SetupUIForPassiveEntry::CallFunc_GetItemPassiveData_out_ItemData' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_SetupUIForPassiveEntry, CallFunc_GetItemPassiveData_ReturnValue) == 0x0002A8, "Member 'WBP_PassiveUnlock_C_SetupUIForPassiveEntry::CallFunc_GetItemPassiveData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_SetupUIForPassiveEntry, CallFunc_CanUpgradePassiveData_CanBeUpgraded) == 0x0002A9, "Member 'WBP_PassiveUnlock_C_SetupUIForPassiveEntry::CallFunc_CanUpgradePassiveData_CanBeUpgraded' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_SetupUIForPassiveEntry, Temp_bool_Variable) == 0x0002AA, "Member 'WBP_PassiveUnlock_C_SetupUIForPassiveEntry::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_SetupUIForPassiveEntry, K2Node_Select_Default) == 0x0002B0, "Member 'WBP_PassiveUnlock_C_SetupUIForPassiveEntry::K2Node_Select_Default' has a wrong offset!");

// Function WBP_PassiveUnlock.WBP_PassiveUnlock_C.UpgradePassiveEntry
// 0x02B8 (0x02B8 - 0x0000)
struct WBP_PassiveUnlock_C_UpgradePassiveEntry final
{
public:
	class UWBP_PassiveEntry_C*                    PassiveEntry;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         PassiveIndex;                                      // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   PassiveIDPreUpgrade;                               // 0x000C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FocusedEntryIndex;                                 // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WasPassiveEquipped;                                // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInventoryItemPassiveData              CallFunc_GetItemPassiveData_out_ItemData;          // 0x0020(0x0268)()
	bool                                          CallFunc_GetItemPassiveData_ReturnValue;           // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_289[0x3];                                      // 0x0289(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCurrencyValue                         CallFunc_ToCurrencyValue_ReturnValue;              // 0x028C(0x0008)(NoDestructor)
	bool                                          CallFunc_IsPassiveEquipped_ReturnValue;            // 0x0294(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_295[0x3];                                      // 0x0295(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_PassiveEntry_C*                    CallFunc_Array_Get_Item;                           // 0x0298(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPassiveEquipResult                           CallFunc_EquipPassive_ReturnValue;                 // 0x02A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddItem_ReturnValue;                      // 0x02A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A6[0x2];                                      // 0x02A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SpendCurrency_ReturnValue;                // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveItem_ReturnValue;                   // 0x02AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AD[0x3];                                      // 0x02AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_UnequipPassive_OutPassiveIndex;           // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UnequipPassive_ReturnValue;               // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPassiveEquipped_ReturnValue_1;          // 0x02B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PassiveUnlock_C_UpgradePassiveEntry) == 0x000008, "Wrong alignment on WBP_PassiveUnlock_C_UpgradePassiveEntry");
static_assert(sizeof(WBP_PassiveUnlock_C_UpgradePassiveEntry) == 0x0002B8, "Wrong size on WBP_PassiveUnlock_C_UpgradePassiveEntry");
static_assert(offsetof(WBP_PassiveUnlock_C_UpgradePassiveEntry, PassiveEntry) == 0x000000, "Member 'WBP_PassiveUnlock_C_UpgradePassiveEntry::PassiveEntry' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_UpgradePassiveEntry, PassiveIndex) == 0x000008, "Member 'WBP_PassiveUnlock_C_UpgradePassiveEntry::PassiveIndex' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_UpgradePassiveEntry, PassiveIDPreUpgrade) == 0x00000C, "Member 'WBP_PassiveUnlock_C_UpgradePassiveEntry::PassiveIDPreUpgrade' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_UpgradePassiveEntry, FocusedEntryIndex) == 0x000014, "Member 'WBP_PassiveUnlock_C_UpgradePassiveEntry::FocusedEntryIndex' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_UpgradePassiveEntry, WasPassiveEquipped) == 0x000018, "Member 'WBP_PassiveUnlock_C_UpgradePassiveEntry::WasPassiveEquipped' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_UpgradePassiveEntry, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'WBP_PassiveUnlock_C_UpgradePassiveEntry::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_UpgradePassiveEntry, CallFunc_GetItemPassiveData_out_ItemData) == 0x000020, "Member 'WBP_PassiveUnlock_C_UpgradePassiveEntry::CallFunc_GetItemPassiveData_out_ItemData' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_UpgradePassiveEntry, CallFunc_GetItemPassiveData_ReturnValue) == 0x000288, "Member 'WBP_PassiveUnlock_C_UpgradePassiveEntry::CallFunc_GetItemPassiveData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_UpgradePassiveEntry, CallFunc_ToCurrencyValue_ReturnValue) == 0x00028C, "Member 'WBP_PassiveUnlock_C_UpgradePassiveEntry::CallFunc_ToCurrencyValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_UpgradePassiveEntry, CallFunc_IsPassiveEquipped_ReturnValue) == 0x000294, "Member 'WBP_PassiveUnlock_C_UpgradePassiveEntry::CallFunc_IsPassiveEquipped_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_UpgradePassiveEntry, CallFunc_Array_Get_Item) == 0x000298, "Member 'WBP_PassiveUnlock_C_UpgradePassiveEntry::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_UpgradePassiveEntry, CallFunc_Array_Find_ReturnValue) == 0x0002A0, "Member 'WBP_PassiveUnlock_C_UpgradePassiveEntry::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_UpgradePassiveEntry, CallFunc_EquipPassive_ReturnValue) == 0x0002A4, "Member 'WBP_PassiveUnlock_C_UpgradePassiveEntry::CallFunc_EquipPassive_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_UpgradePassiveEntry, CallFunc_AddItem_ReturnValue) == 0x0002A5, "Member 'WBP_PassiveUnlock_C_UpgradePassiveEntry::CallFunc_AddItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_UpgradePassiveEntry, CallFunc_SpendCurrency_ReturnValue) == 0x0002A8, "Member 'WBP_PassiveUnlock_C_UpgradePassiveEntry::CallFunc_SpendCurrency_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_UpgradePassiveEntry, CallFunc_RemoveItem_ReturnValue) == 0x0002AC, "Member 'WBP_PassiveUnlock_C_UpgradePassiveEntry::CallFunc_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_UpgradePassiveEntry, CallFunc_UnequipPassive_OutPassiveIndex) == 0x0002B0, "Member 'WBP_PassiveUnlock_C_UpgradePassiveEntry::CallFunc_UnequipPassive_OutPassiveIndex' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_UpgradePassiveEntry, CallFunc_UnequipPassive_ReturnValue) == 0x0002B4, "Member 'WBP_PassiveUnlock_C_UpgradePassiveEntry::CallFunc_UnequipPassive_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveUnlock_C_UpgradePassiveEntry, CallFunc_IsPassiveEquipped_ReturnValue_1) == 0x0002B5, "Member 'WBP_PassiveUnlock_C_UpgradePassiveEntry::CallFunc_IsPassiveEquipped_ReturnValue_1' has a wrong offset!");

}

