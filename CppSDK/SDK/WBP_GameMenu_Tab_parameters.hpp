#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_GameMenu_Tab

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_GameMenu_Tab.WBP_GameMenu_Tab_C.ExecuteUbergraph_WBP_GameMenu_Tab
// 0x0140 (0x0140 - 0x0000)
struct WBP_GameMenu_Tab_C_ExecuteUbergraph_WBP_GameMenu_Tab final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x0040(0x0078)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x00B8(0x0078)(ConstParm)
	class UZionInputDeviceSubsystem*              CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInIsEnabled;                         // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCursorVisible_ReturnValue;              // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Tab_C_ExecuteUbergraph_WBP_GameMenu_Tab) == 0x000008, "Wrong alignment on WBP_GameMenu_Tab_C_ExecuteUbergraph_WBP_GameMenu_Tab");
static_assert(sizeof(WBP_GameMenu_Tab_C_ExecuteUbergraph_WBP_GameMenu_Tab) == 0x000140, "Wrong size on WBP_GameMenu_Tab_C_ExecuteUbergraph_WBP_GameMenu_Tab");
static_assert(offsetof(WBP_GameMenu_Tab_C_ExecuteUbergraph_WBP_GameMenu_Tab, EntryPoint) == 0x000000, "Member 'WBP_GameMenu_Tab_C_ExecuteUbergraph_WBP_GameMenu_Tab::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Tab_C_ExecuteUbergraph_WBP_GameMenu_Tab, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_GameMenu_Tab_C_ExecuteUbergraph_WBP_GameMenu_Tab::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Tab_C_ExecuteUbergraph_WBP_GameMenu_Tab, K2Node_Event_MyGeometry) == 0x000008, "Member 'WBP_GameMenu_Tab_C_ExecuteUbergraph_WBP_GameMenu_Tab::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Tab_C_ExecuteUbergraph_WBP_GameMenu_Tab, K2Node_Event_MouseEvent_1) == 0x000040, "Member 'WBP_GameMenu_Tab_C_ExecuteUbergraph_WBP_GameMenu_Tab::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Tab_C_ExecuteUbergraph_WBP_GameMenu_Tab, K2Node_Event_MouseEvent) == 0x0000B8, "Member 'WBP_GameMenu_Tab_C_ExecuteUbergraph_WBP_GameMenu_Tab::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Tab_C_ExecuteUbergraph_WBP_GameMenu_Tab, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000130, "Member 'WBP_GameMenu_Tab_C_ExecuteUbergraph_WBP_GameMenu_Tab::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Tab_C_ExecuteUbergraph_WBP_GameMenu_Tab, K2Node_Event_bInIsEnabled) == 0x000138, "Member 'WBP_GameMenu_Tab_C_ExecuteUbergraph_WBP_GameMenu_Tab::K2Node_Event_bInIsEnabled' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Tab_C_ExecuteUbergraph_WBP_GameMenu_Tab, CallFunc_IsCursorVisible_ReturnValue) == 0x000139, "Member 'WBP_GameMenu_Tab_C_ExecuteUbergraph_WBP_GameMenu_Tab::CallFunc_IsCursorVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Tab_C_ExecuteUbergraph_WBP_GameMenu_Tab, CallFunc_Not_PreBool_ReturnValue) == 0x00013A, "Member 'WBP_GameMenu_Tab_C_ExecuteUbergraph_WBP_GameMenu_Tab::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WBP_GameMenu_Tab.WBP_GameMenu_Tab_C.OnMouseEnter
// 0x00B0 (0x00B0 - 0x0000)
struct WBP_GameMenu_Tab_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_GameMenu_Tab_C_OnMouseEnter) == 0x000008, "Wrong alignment on WBP_GameMenu_Tab_C_OnMouseEnter");
static_assert(sizeof(WBP_GameMenu_Tab_C_OnMouseEnter) == 0x0000B0, "Wrong size on WBP_GameMenu_Tab_C_OnMouseEnter");
static_assert(offsetof(WBP_GameMenu_Tab_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'WBP_GameMenu_Tab_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Tab_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'WBP_GameMenu_Tab_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function WBP_GameMenu_Tab.WBP_GameMenu_Tab_C.OnMouseLeave
// 0x0078 (0x0078 - 0x0000)
struct WBP_GameMenu_Tab_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_GameMenu_Tab_C_OnMouseLeave) == 0x000008, "Wrong alignment on WBP_GameMenu_Tab_C_OnMouseLeave");
static_assert(sizeof(WBP_GameMenu_Tab_C_OnMouseLeave) == 0x000078, "Wrong size on WBP_GameMenu_Tab_C_OnMouseLeave");
static_assert(offsetof(WBP_GameMenu_Tab_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'WBP_GameMenu_Tab_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function WBP_GameMenu_Tab.WBP_GameMenu_Tab_C.OnPressConfirm
// 0x01B0 (0x01B0 - 0x0000)
struct WBP_GameMenu_Tab_C_OnPressConfirm final
{
public:
	struct FKeyEvent                              KeyEvent;                                          // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x00F8(0x00B8)()
};
static_assert(alignof(WBP_GameMenu_Tab_C_OnPressConfirm) == 0x000008, "Wrong alignment on WBP_GameMenu_Tab_C_OnPressConfirm");
static_assert(sizeof(WBP_GameMenu_Tab_C_OnPressConfirm) == 0x0001B0, "Wrong size on WBP_GameMenu_Tab_C_OnPressConfirm");
static_assert(offsetof(WBP_GameMenu_Tab_C_OnPressConfirm, KeyEvent) == 0x000000, "Member 'WBP_GameMenu_Tab_C_OnPressConfirm::KeyEvent' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Tab_C_OnPressConfirm, ReturnValue) == 0x000040, "Member 'WBP_GameMenu_Tab_C_OnPressConfirm::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Tab_C_OnPressConfirm, CallFunc_Handled_ReturnValue) == 0x0000F8, "Member 'WBP_GameMenu_Tab_C_OnPressConfirm::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function WBP_GameMenu_Tab.WBP_GameMenu_Tab_C.OnSetIsEnabled
// 0x0001 (0x0001 - 0x0000)
struct WBP_GameMenu_Tab_C_OnSetIsEnabled final
{
public:
	bool                                          bInIsEnabled;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Tab_C_OnSetIsEnabled) == 0x000001, "Wrong alignment on WBP_GameMenu_Tab_C_OnSetIsEnabled");
static_assert(sizeof(WBP_GameMenu_Tab_C_OnSetIsEnabled) == 0x000001, "Wrong size on WBP_GameMenu_Tab_C_OnSetIsEnabled");
static_assert(offsetof(WBP_GameMenu_Tab_C_OnSetIsEnabled, bInIsEnabled) == 0x000000, "Member 'WBP_GameMenu_Tab_C_OnSetIsEnabled::bInIsEnabled' has a wrong offset!");

// Function WBP_GameMenu_Tab.WBP_GameMenu_Tab_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_GameMenu_Tab_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Tab_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_GameMenu_Tab_C_PreConstruct");
static_assert(sizeof(WBP_GameMenu_Tab_C_PreConstruct) == 0x000001, "Wrong size on WBP_GameMenu_Tab_C_PreConstruct");
static_assert(offsetof(WBP_GameMenu_Tab_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_GameMenu_Tab_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_GameMenu_Tab.WBP_GameMenu_Tab_C.SetHoveredState
// 0x0010 (0x0010 - 0x0000)
struct WBP_GameMenu_Tab_C_SetHoveredState final
{
public:
	bool                                          bHovered;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Tab_C_SetHoveredState) == 0x000008, "Wrong alignment on WBP_GameMenu_Tab_C_SetHoveredState");
static_assert(sizeof(WBP_GameMenu_Tab_C_SetHoveredState) == 0x000010, "Wrong size on WBP_GameMenu_Tab_C_SetHoveredState");
static_assert(offsetof(WBP_GameMenu_Tab_C_SetHoveredState, bHovered) == 0x000000, "Member 'WBP_GameMenu_Tab_C_SetHoveredState::bHovered' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Tab_C_SetHoveredState, Temp_byte_Variable) == 0x000001, "Member 'WBP_GameMenu_Tab_C_SetHoveredState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Tab_C_SetHoveredState, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_GameMenu_Tab_C_SetHoveredState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Tab_C_SetHoveredState, Temp_bool_Variable) == 0x000003, "Member 'WBP_GameMenu_Tab_C_SetHoveredState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Tab_C_SetHoveredState, K2Node_Select_Default) == 0x000004, "Member 'WBP_GameMenu_Tab_C_SetHoveredState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Tab_C_SetHoveredState, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WBP_GameMenu_Tab_C_SetHoveredState::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_GameMenu_Tab.WBP_GameMenu_Tab_C.SetLocked
// 0x0010 (0x0010 - 0x0000)
struct WBP_GameMenu_Tab_C_SetLocked final
{
public:
	bool                                          bLocked;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Tab_C_SetLocked) == 0x000004, "Wrong alignment on WBP_GameMenu_Tab_C_SetLocked");
static_assert(sizeof(WBP_GameMenu_Tab_C_SetLocked) == 0x000010, "Wrong size on WBP_GameMenu_Tab_C_SetLocked");
static_assert(offsetof(WBP_GameMenu_Tab_C_SetLocked, bLocked) == 0x000000, "Member 'WBP_GameMenu_Tab_C_SetLocked::bLocked' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Tab_C_SetLocked, Temp_bool_Variable) == 0x000001, "Member 'WBP_GameMenu_Tab_C_SetLocked::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Tab_C_SetLocked, Temp_int_Variable) == 0x000004, "Member 'WBP_GameMenu_Tab_C_SetLocked::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Tab_C_SetLocked, Temp_int_Variable_1) == 0x000008, "Member 'WBP_GameMenu_Tab_C_SetLocked::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Tab_C_SetLocked, K2Node_Select_Default) == 0x00000C, "Member 'WBP_GameMenu_Tab_C_SetLocked::K2Node_Select_Default' has a wrong offset!");

// Function WBP_GameMenu_Tab.WBP_GameMenu_Tab_C.SetSelected
// 0x0018 (0x0018 - 0x0000)
struct WBP_GameMenu_Tab_C_SetSelected final
{
public:
	bool                                          Selected;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       K2Node_Select_Default;                             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Tab_C_SetSelected) == 0x000008, "Wrong alignment on WBP_GameMenu_Tab_C_SetSelected");
static_assert(sizeof(WBP_GameMenu_Tab_C_SetSelected) == 0x000018, "Wrong size on WBP_GameMenu_Tab_C_SetSelected");
static_assert(offsetof(WBP_GameMenu_Tab_C_SetSelected, Selected) == 0x000000, "Member 'WBP_GameMenu_Tab_C_SetSelected::Selected' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Tab_C_SetSelected, Temp_bool_Variable) == 0x000001, "Member 'WBP_GameMenu_Tab_C_SetSelected::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Tab_C_SetSelected, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000002, "Member 'WBP_GameMenu_Tab_C_SetSelected::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Tab_C_SetSelected, K2Node_Select_Default) == 0x000008, "Member 'WBP_GameMenu_Tab_C_SetSelected::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Tab_C_SetSelected, CallFunc_PlayAnimationForward_ReturnValue) == 0x000010, "Member 'WBP_GameMenu_Tab_C_SetSelected::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

// Function WBP_GameMenu_Tab.WBP_GameMenu_Tab_C.SetText
// 0x0010 (0x0010 - 0x0000)
struct WBP_GameMenu_Tab_C_SetText final
{
public:
	class FText                                   Text_0;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_GameMenu_Tab_C_SetText) == 0x000008, "Wrong alignment on WBP_GameMenu_Tab_C_SetText");
static_assert(sizeof(WBP_GameMenu_Tab_C_SetText) == 0x000010, "Wrong size on WBP_GameMenu_Tab_C_SetText");
static_assert(offsetof(WBP_GameMenu_Tab_C_SetText, Text_0) == 0x000000, "Member 'WBP_GameMenu_Tab_C_SetText::Text_0' has a wrong offset!");

}

