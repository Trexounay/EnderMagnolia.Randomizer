#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MapLegend

#include "Basic.hpp"

#include "Zion_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_MapLegend.WBP_MapLegend_C.Show
// 0x0001 (0x0001 - 0x0000)
struct WBP_MapLegend_C_Show final
{
public:
	bool                                          bInstant;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapLegend_C_Show) == 0x000001, "Wrong alignment on WBP_MapLegend_C_Show");
static_assert(sizeof(WBP_MapLegend_C_Show) == 0x000001, "Wrong size on WBP_MapLegend_C_Show");
static_assert(offsetof(WBP_MapLegend_C_Show, bInstant) == 0x000000, "Member 'WBP_MapLegend_C_Show::bInstant' has a wrong offset!");

// Function WBP_MapLegend.WBP_MapLegend_C.OnLegendInitialized
// 0x0050 (0x0050 - 0x0000)
struct WBP_MapLegend_C_OnLegendInitialized final
{
public:
	TSet<EMapIconType>                            VisibleIconTypes;                                  // 0x0000(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_MapLegend_C_OnLegendInitialized) == 0x000008, "Wrong alignment on WBP_MapLegend_C_OnLegendInitialized");
static_assert(sizeof(WBP_MapLegend_C_OnLegendInitialized) == 0x000050, "Wrong size on WBP_MapLegend_C_OnLegendInitialized");
static_assert(offsetof(WBP_MapLegend_C_OnLegendInitialized, VisibleIconTypes) == 0x000000, "Member 'WBP_MapLegend_C_OnLegendInitialized::VisibleIconTypes' has a wrong offset!");

// Function WBP_MapLegend.WBP_MapLegend_C.HideAndRemoveFromParent
// 0x0001 (0x0001 - 0x0000)
struct WBP_MapLegend_C_HideAndRemoveFromParent final
{
public:
	bool                                          bInstant;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapLegend_C_HideAndRemoveFromParent) == 0x000001, "Wrong alignment on WBP_MapLegend_C_HideAndRemoveFromParent");
static_assert(sizeof(WBP_MapLegend_C_HideAndRemoveFromParent) == 0x000001, "Wrong size on WBP_MapLegend_C_HideAndRemoveFromParent");
static_assert(offsetof(WBP_MapLegend_C_HideAndRemoveFromParent, bInstant) == 0x000000, "Member 'WBP_MapLegend_C_HideAndRemoveFromParent::bInstant' has a wrong offset!");

// Function WBP_MapLegend.WBP_MapLegend_C.Hide
// 0x0001 (0x0001 - 0x0000)
struct WBP_MapLegend_C_Hide final
{
public:
	bool                                          bInstant;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapLegend_C_Hide) == 0x000001, "Wrong alignment on WBP_MapLegend_C_Hide");
static_assert(sizeof(WBP_MapLegend_C_Hide) == 0x000001, "Wrong size on WBP_MapLegend_C_Hide");
static_assert(offsetof(WBP_MapLegend_C_Hide, bInstant) == 0x000000, "Member 'WBP_MapLegend_C_Hide::bInstant' has a wrong offset!");

// Function WBP_MapLegend.WBP_MapLegend_C.ExecuteUbergraph_WBP_MapLegend
// 0x00E8 (0x00E8 - 0x0000)
struct WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0008(0x0010)(ReferenceParm, ContainsInstancedReference)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_MapLegendEntry_C*                  K2Node_DynamicCast_AsWBP_Map_Legend_Entry;         // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInstant_2;                           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInstant_1;                           // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInstant;                             // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result;    // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue; // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x007C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<EMapIconType>                            K2Node_Event_VisibleIconTypes;                     // 0x0090(0x0050)(ConstParm)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend) == 0x000008, "Wrong alignment on WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend");
static_assert(sizeof(WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend) == 0x0000E8, "Wrong size on WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend");
static_assert(offsetof(WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend, EntryPoint) == 0x000000, "Member 'WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend, Temp_bool_Variable) == 0x000004, "Member 'WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend, CallFunc_GetAllChildren_ReturnValue) == 0x000008, "Member 'WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend, Temp_byte_Variable) == 0x000018, "Member 'WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend, Temp_byte_Variable_1) == 0x000020, "Member 'WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend, Temp_int_Array_Index_Variable) == 0x000024, "Member 'WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend, CallFunc_Array_Get_Item) == 0x000030, "Member 'WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend, K2Node_DynamicCast_AsWBP_Map_Legend_Entry) == 0x000038, "Member 'WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend::K2Node_DynamicCast_AsWBP_Map_Legend_Entry' has a wrong offset!");
static_assert(offsetof(WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend, CallFunc_Less_IntInt_ReturnValue) == 0x000041, "Member 'WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend, K2Node_Event_bInstant_2) == 0x000048, "Member 'WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend::K2Node_Event_bInstant_2' has a wrong offset!");
static_assert(offsetof(WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend, K2Node_Event_bInstant_1) == 0x000049, "Member 'WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend::K2Node_Event_bInstant_1' has a wrong offset!");
static_assert(offsetof(WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend, CallFunc_Not_PreBool_ReturnValue) == 0x00004A, "Member 'WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend, CallFunc_Not_PreBool_ReturnValue_1) == 0x00004B, "Member 'WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend, K2Node_Event_bInstant) == 0x00004C, "Member 'WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend::K2Node_Event_bInstant' has a wrong offset!");
static_assert(offsetof(WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend, CallFunc_PlayAnimationForward_ReturnValue) == 0x000050, "Member 'WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend, CallFunc_Not_PreBool_ReturnValue_2) == 0x000058, "Member 'WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x000060, "Member 'WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend, CallFunc_CreatePlayAnimationProxyObject_Result) == 0x000068, "Member 'WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend::CallFunc_CreatePlayAnimationProxyObject_Result' has a wrong offset!");
static_assert(offsetof(WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend, CallFunc_CreatePlayAnimationProxyObject_ReturnValue) == 0x000070, "Member 'WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend::CallFunc_CreatePlayAnimationProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend, K2Node_CreateDelegate_OutputDelegate) == 0x00007C, "Member 'WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend, K2Node_Event_VisibleIconTypes) == 0x000090, "Member 'WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend::K2Node_Event_VisibleIconTypes' has a wrong offset!");
static_assert(offsetof(WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend, CallFunc_Set_Contains_ReturnValue) == 0x0000E0, "Member 'WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend, K2Node_Select_Default) == 0x0000E1, "Member 'WBP_MapLegend_C_ExecuteUbergraph_WBP_MapLegend::K2Node_Select_Default' has a wrong offset!");

}

