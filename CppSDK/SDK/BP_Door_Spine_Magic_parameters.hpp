#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Door_Spine_Magic

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Door_Spine_Magic.BP_Door_Spine_Magic_C.UserConstructionScript
// 0x0180 (0x0180 - 0x0000)
struct BP_Door_Spine_Magic_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0080(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_Spine_Magic_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_Door_Spine_Magic_C_UserConstructionScript");
static_assert(sizeof(BP_Door_Spine_Magic_C_UserConstructionScript) == 0x000180, "Wrong size on BP_Door_Spine_Magic_C_UserConstructionScript");
static_assert(offsetof(BP_Door_Spine_Magic_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_Door_Spine_Magic_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_Spine_Magic_C_UserConstructionScript, CallFunc_BreakVector_X) == 0x000008, "Member 'BP_Door_Spine_Magic_C_UserConstructionScript::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Door_Spine_Magic_C_UserConstructionScript, CallFunc_BreakVector_Y) == 0x000010, "Member 'BP_Door_Spine_Magic_C_UserConstructionScript::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Door_Spine_Magic_C_UserConstructionScript, CallFunc_BreakVector_Z) == 0x000018, "Member 'BP_Door_Spine_Magic_C_UserConstructionScript::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Door_Spine_Magic_C_UserConstructionScript, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000020, "Member 'BP_Door_Spine_Magic_C_UserConstructionScript::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_Spine_Magic_C_UserConstructionScript, CallFunc_Abs_ReturnValue) == 0x000038, "Member 'BP_Door_Spine_Magic_C_UserConstructionScript::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_Spine_Magic_C_UserConstructionScript, CallFunc_BreakRotator_Roll) == 0x000040, "Member 'BP_Door_Spine_Magic_C_UserConstructionScript::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_Door_Spine_Magic_C_UserConstructionScript, CallFunc_BreakRotator_Pitch) == 0x000044, "Member 'BP_Door_Spine_Magic_C_UserConstructionScript::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Door_Spine_Magic_C_UserConstructionScript, CallFunc_BreakRotator_Yaw) == 0x000048, "Member 'BP_Door_Spine_Magic_C_UserConstructionScript::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Door_Spine_Magic_C_UserConstructionScript, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000050, "Member 'BP_Door_Spine_Magic_C_UserConstructionScript::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_Spine_Magic_C_UserConstructionScript, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000058, "Member 'BP_Door_Spine_Magic_C_UserConstructionScript::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_Spine_Magic_C_UserConstructionScript, CallFunc_SelectFloat_ReturnValue) == 0x000060, "Member 'BP_Door_Spine_Magic_C_UserConstructionScript::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_Spine_Magic_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue) == 0x000068, "Member 'BP_Door_Spine_Magic_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_Spine_Magic_C_UserConstructionScript, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000080, "Member 'BP_Door_Spine_Magic_C_UserConstructionScript::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Door_Spine_Magic_C_UserConstructionScript, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000178, "Member 'BP_Door_Spine_Magic_C_UserConstructionScript::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_Door_Spine_Magic.BP_Door_Spine_Magic_C.OnOpen
// 0x0001 (0x0001 - 0x0000)
struct BP_Door_Spine_Magic_C_OnOpen final
{
public:
	bool                                          RequestInstant;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_Spine_Magic_C_OnOpen) == 0x000001, "Wrong alignment on BP_Door_Spine_Magic_C_OnOpen");
static_assert(sizeof(BP_Door_Spine_Magic_C_OnOpen) == 0x000001, "Wrong size on BP_Door_Spine_Magic_C_OnOpen");
static_assert(offsetof(BP_Door_Spine_Magic_C_OnOpen, RequestInstant) == 0x000000, "Member 'BP_Door_Spine_Magic_C_OnOpen::RequestInstant' has a wrong offset!");

// Function BP_Door_Spine_Magic.BP_Door_Spine_Magic_C.OnClose
// 0x0001 (0x0001 - 0x0000)
struct BP_Door_Spine_Magic_C_OnClose final
{
public:
	bool                                          RequestInstant;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_Spine_Magic_C_OnClose) == 0x000001, "Wrong alignment on BP_Door_Spine_Magic_C_OnClose");
static_assert(sizeof(BP_Door_Spine_Magic_C_OnClose) == 0x000001, "Wrong size on BP_Door_Spine_Magic_C_OnClose");
static_assert(offsetof(BP_Door_Spine_Magic_C_OnClose, RequestInstant) == 0x000000, "Member 'BP_Door_Spine_Magic_C_OnClose::RequestInstant' has a wrong offset!");

// Function BP_Door_Spine_Magic.BP_Door_Spine_Magic_C.ExecuteUbergraph_BP_Door_Spine_Magic
// 0x0018 (0x0018 - 0x0000)
struct BP_Door_Spine_Magic_C_ExecuteUbergraph_BP_Door_Spine_Magic final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_RequestInstant_1;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_RequestInstant;                       // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_Spine_Magic_C_ExecuteUbergraph_BP_Door_Spine_Magic) == 0x000008, "Wrong alignment on BP_Door_Spine_Magic_C_ExecuteUbergraph_BP_Door_Spine_Magic");
static_assert(sizeof(BP_Door_Spine_Magic_C_ExecuteUbergraph_BP_Door_Spine_Magic) == 0x000018, "Wrong size on BP_Door_Spine_Magic_C_ExecuteUbergraph_BP_Door_Spine_Magic");
static_assert(offsetof(BP_Door_Spine_Magic_C_ExecuteUbergraph_BP_Door_Spine_Magic, EntryPoint) == 0x000000, "Member 'BP_Door_Spine_Magic_C_ExecuteUbergraph_BP_Door_Spine_Magic::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Door_Spine_Magic_C_ExecuteUbergraph_BP_Door_Spine_Magic, CallFunc_SpawnSystemAttached_ReturnValue) == 0x000008, "Member 'BP_Door_Spine_Magic_C_ExecuteUbergraph_BP_Door_Spine_Magic::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_Spine_Magic_C_ExecuteUbergraph_BP_Door_Spine_Magic, K2Node_Event_RequestInstant_1) == 0x000010, "Member 'BP_Door_Spine_Magic_C_ExecuteUbergraph_BP_Door_Spine_Magic::K2Node_Event_RequestInstant_1' has a wrong offset!");
static_assert(offsetof(BP_Door_Spine_Magic_C_ExecuteUbergraph_BP_Door_Spine_Magic, K2Node_Event_RequestInstant) == 0x000011, "Member 'BP_Door_Spine_Magic_C_ExecuteUbergraph_BP_Door_Spine_Magic::K2Node_Event_RequestInstant' has a wrong offset!");

}

