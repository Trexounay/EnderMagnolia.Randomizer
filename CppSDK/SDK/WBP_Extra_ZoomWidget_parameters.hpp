#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Extra_ZoomWidget

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Zion_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_Extra_ZoomWidget.WBP_Extra_ZoomWidget_C.AnalogValueZoom
// 0x0028 (0x0028 - 0x0000)
struct WBP_Extra_ZoomWidget_C_AnalogValueZoom final
{
public:
	double                                        AnalogValue;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bReturnValue;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Extra_ZoomWidget_C_AnalogValueZoom) == 0x000008, "Wrong alignment on WBP_Extra_ZoomWidget_C_AnalogValueZoom");
static_assert(sizeof(WBP_Extra_ZoomWidget_C_AnalogValueZoom) == 0x000028, "Wrong size on WBP_Extra_ZoomWidget_C_AnalogValueZoom");
static_assert(offsetof(WBP_Extra_ZoomWidget_C_AnalogValueZoom, AnalogValue) == 0x000000, "Member 'WBP_Extra_ZoomWidget_C_AnalogValueZoom::AnalogValue' has a wrong offset!");
static_assert(offsetof(WBP_Extra_ZoomWidget_C_AnalogValueZoom, bReturnValue) == 0x000008, "Member 'WBP_Extra_ZoomWidget_C_AnalogValueZoom::bReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Extra_ZoomWidget_C_AnalogValueZoom, CallFunc_Abs_ReturnValue) == 0x000010, "Member 'WBP_Extra_ZoomWidget_C_AnalogValueZoom::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Extra_ZoomWidget_C_AnalogValueZoom, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000018, "Member 'WBP_Extra_ZoomWidget_C_AnalogValueZoom::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Extra_ZoomWidget_C_AnalogValueZoom, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'WBP_Extra_ZoomWidget_C_AnalogValueZoom::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function WBP_Extra_ZoomWidget.WBP_Extra_ZoomWidget_C.ExecuteUbergraph_WBP_Extra_ZoomWidget
// 0x0030 (0x0030 - 0x0000)
struct WBP_Extra_ZoomWidget_C_ExecuteUbergraph_WBP_Extra_ZoomWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_ZoomDelta;                      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEditor_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Extra_ZoomWidget_C_ExecuteUbergraph_WBP_Extra_ZoomWidget) == 0x000008, "Wrong alignment on WBP_Extra_ZoomWidget_C_ExecuteUbergraph_WBP_Extra_ZoomWidget");
static_assert(sizeof(WBP_Extra_ZoomWidget_C_ExecuteUbergraph_WBP_Extra_ZoomWidget) == 0x000030, "Wrong size on WBP_Extra_ZoomWidget_C_ExecuteUbergraph_WBP_Extra_ZoomWidget");
static_assert(offsetof(WBP_Extra_ZoomWidget_C_ExecuteUbergraph_WBP_Extra_ZoomWidget, EntryPoint) == 0x000000, "Member 'WBP_Extra_ZoomWidget_C_ExecuteUbergraph_WBP_Extra_ZoomWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Extra_ZoomWidget_C_ExecuteUbergraph_WBP_Extra_ZoomWidget, Temp_byte_Variable) == 0x000004, "Member 'WBP_Extra_ZoomWidget_C_ExecuteUbergraph_WBP_Extra_ZoomWidget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Extra_ZoomWidget_C_ExecuteUbergraph_WBP_Extra_ZoomWidget, Temp_byte_Variable_1) == 0x000005, "Member 'WBP_Extra_ZoomWidget_C_ExecuteUbergraph_WBP_Extra_ZoomWidget::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Extra_ZoomWidget_C_ExecuteUbergraph_WBP_Extra_ZoomWidget, K2Node_CustomEvent_ZoomDelta) == 0x000008, "Member 'WBP_Extra_ZoomWidget_C_ExecuteUbergraph_WBP_Extra_ZoomWidget::K2Node_CustomEvent_ZoomDelta' has a wrong offset!");
static_assert(offsetof(WBP_Extra_ZoomWidget_C_ExecuteUbergraph_WBP_Extra_ZoomWidget, Temp_bool_Variable) == 0x000010, "Member 'WBP_Extra_ZoomWidget_C_ExecuteUbergraph_WBP_Extra_ZoomWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Extra_ZoomWidget_C_ExecuteUbergraph_WBP_Extra_ZoomWidget, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'WBP_Extra_ZoomWidget_C_ExecuteUbergraph_WBP_Extra_ZoomWidget::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Extra_ZoomWidget_C_ExecuteUbergraph_WBP_Extra_ZoomWidget, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000020, "Member 'WBP_Extra_ZoomWidget_C_ExecuteUbergraph_WBP_Extra_ZoomWidget::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Extra_ZoomWidget_C_ExecuteUbergraph_WBP_Extra_ZoomWidget, CallFunc_IsEditor_ReturnValue) == 0x000028, "Member 'WBP_Extra_ZoomWidget_C_ExecuteUbergraph_WBP_Extra_ZoomWidget::CallFunc_IsEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Extra_ZoomWidget_C_ExecuteUbergraph_WBP_Extra_ZoomWidget, K2Node_Select_Default) == 0x000029, "Member 'WBP_Extra_ZoomWidget_C_ExecuteUbergraph_WBP_Extra_ZoomWidget::K2Node_Select_Default' has a wrong offset!");

// Function WBP_Extra_ZoomWidget.WBP_Extra_ZoomWidget_C.GetCurrentZoom
// 0x0008 (0x0008 - 0x0000)
struct WBP_Extra_ZoomWidget_C_GetCurrentZoom final
{
public:
	double                                        CurrentZoom_0;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Extra_ZoomWidget_C_GetCurrentZoom) == 0x000008, "Wrong alignment on WBP_Extra_ZoomWidget_C_GetCurrentZoom");
static_assert(sizeof(WBP_Extra_ZoomWidget_C_GetCurrentZoom) == 0x000008, "Wrong size on WBP_Extra_ZoomWidget_C_GetCurrentZoom");
static_assert(offsetof(WBP_Extra_ZoomWidget_C_GetCurrentZoom, CurrentZoom_0) == 0x000000, "Member 'WBP_Extra_ZoomWidget_C_GetCurrentZoom::CurrentZoom_0' has a wrong offset!");

// Function WBP_Extra_ZoomWidget.WBP_Extra_ZoomWidget_C.Initialize
// 0x00B0 (0x00B0 - 0x0000)
struct WBP_Extra_ZoomWidget_C_Initialize final
{
public:
	bool                                          bUseWidgetSizeRatio;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              WidgetSize;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FExtraItemZoomData                     ZoomData;                                          // 0x0018(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	double                                        MinZoom;                                           // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DefaultZoom;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxZoom;                                           // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize2D_ReturnValue;                      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNearlyZero2D_ReturnValue;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_A_ImplicitCast;               // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_A_ImplicitCast_1;             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Extra_ZoomWidget_C_Initialize) == 0x000008, "Wrong alignment on WBP_Extra_ZoomWidget_C_Initialize");
static_assert(sizeof(WBP_Extra_ZoomWidget_C_Initialize) == 0x0000B0, "Wrong size on WBP_Extra_ZoomWidget_C_Initialize");
static_assert(offsetof(WBP_Extra_ZoomWidget_C_Initialize, bUseWidgetSizeRatio) == 0x000000, "Member 'WBP_Extra_ZoomWidget_C_Initialize::bUseWidgetSizeRatio' has a wrong offset!");
static_assert(offsetof(WBP_Extra_ZoomWidget_C_Initialize, WidgetSize) == 0x000008, "Member 'WBP_Extra_ZoomWidget_C_Initialize::WidgetSize' has a wrong offset!");
static_assert(offsetof(WBP_Extra_ZoomWidget_C_Initialize, ZoomData) == 0x000018, "Member 'WBP_Extra_ZoomWidget_C_Initialize::ZoomData' has a wrong offset!");
static_assert(offsetof(WBP_Extra_ZoomWidget_C_Initialize, MinZoom) == 0x000030, "Member 'WBP_Extra_ZoomWidget_C_Initialize::MinZoom' has a wrong offset!");
static_assert(offsetof(WBP_Extra_ZoomWidget_C_Initialize, DefaultZoom) == 0x000038, "Member 'WBP_Extra_ZoomWidget_C_Initialize::DefaultZoom' has a wrong offset!");
static_assert(offsetof(WBP_Extra_ZoomWidget_C_Initialize, MaxZoom) == 0x000040, "Member 'WBP_Extra_ZoomWidget_C_Initialize::MaxZoom' has a wrong offset!");
static_assert(offsetof(WBP_Extra_ZoomWidget_C_Initialize, CallFunc_VSize2D_ReturnValue) == 0x000048, "Member 'WBP_Extra_ZoomWidget_C_Initialize::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Extra_ZoomWidget_C_Initialize, CallFunc_IsNearlyZero2D_ReturnValue) == 0x000050, "Member 'WBP_Extra_ZoomWidget_C_Initialize::CallFunc_IsNearlyZero2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Extra_ZoomWidget_C_Initialize, CallFunc_SelectFloat_ReturnValue) == 0x000058, "Member 'WBP_Extra_ZoomWidget_C_Initialize::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Extra_ZoomWidget_C_Initialize, CallFunc_Lerp_ReturnValue) == 0x000060, "Member 'WBP_Extra_ZoomWidget_C_Initialize::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Extra_ZoomWidget_C_Initialize, CallFunc_Lerp_ReturnValue_1) == 0x000068, "Member 'WBP_Extra_ZoomWidget_C_Initialize::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Extra_ZoomWidget_C_Initialize, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000070, "Member 'WBP_Extra_ZoomWidget_C_Initialize::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Extra_ZoomWidget_C_Initialize, CallFunc_SelectFloat_ReturnValue_1) == 0x000078, "Member 'WBP_Extra_ZoomWidget_C_Initialize::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Extra_ZoomWidget_C_Initialize, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000080, "Member 'WBP_Extra_ZoomWidget_C_Initialize::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Extra_ZoomWidget_C_Initialize, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000088, "Member 'WBP_Extra_ZoomWidget_C_Initialize::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Extra_ZoomWidget_C_Initialize, CallFunc_SelectFloat_ReturnValue_2) == 0x000090, "Member 'WBP_Extra_ZoomWidget_C_Initialize::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Extra_ZoomWidget_C_Initialize, CallFunc_SelectFloat_ReturnValue_3) == 0x000098, "Member 'WBP_Extra_ZoomWidget_C_Initialize::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Extra_ZoomWidget_C_Initialize, CallFunc_SelectFloat_A_ImplicitCast) == 0x0000A0, "Member 'WBP_Extra_ZoomWidget_C_Initialize::CallFunc_SelectFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Extra_ZoomWidget_C_Initialize, CallFunc_SelectFloat_A_ImplicitCast_1) == 0x0000A8, "Member 'WBP_Extra_ZoomWidget_C_Initialize::CallFunc_SelectFloat_A_ImplicitCast_1' has a wrong offset!");

// Function WBP_Extra_ZoomWidget.WBP_Extra_ZoomWidget_C.MouseWheelZoom
// 0x0010 (0x0010 - 0x0000)
struct WBP_Extra_ZoomWidget_C_MouseWheelZoom final
{
public:
	double                                        WheelDelta;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Extra_ZoomWidget_C_MouseWheelZoom) == 0x000008, "Wrong alignment on WBP_Extra_ZoomWidget_C_MouseWheelZoom");
static_assert(sizeof(WBP_Extra_ZoomWidget_C_MouseWheelZoom) == 0x000010, "Wrong size on WBP_Extra_ZoomWidget_C_MouseWheelZoom");
static_assert(offsetof(WBP_Extra_ZoomWidget_C_MouseWheelZoom, WheelDelta) == 0x000000, "Member 'WBP_Extra_ZoomWidget_C_MouseWheelZoom::WheelDelta' has a wrong offset!");
static_assert(offsetof(WBP_Extra_ZoomWidget_C_MouseWheelZoom, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'WBP_Extra_ZoomWidget_C_MouseWheelZoom::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function WBP_Extra_ZoomWidget.WBP_Extra_ZoomWidget_C.SetZoom
// 0x0050 (0x0050 - 0x0000)
struct WBP_Extra_ZoomWidget_C_SetZoom final
{
public:
	double                                        NewZoomValue;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0030(0x0010)()
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Extra_ZoomWidget_C_SetZoom) == 0x000008, "Wrong alignment on WBP_Extra_ZoomWidget_C_SetZoom");
static_assert(sizeof(WBP_Extra_ZoomWidget_C_SetZoom) == 0x000050, "Wrong size on WBP_Extra_ZoomWidget_C_SetZoom");
static_assert(offsetof(WBP_Extra_ZoomWidget_C_SetZoom, NewZoomValue) == 0x000000, "Member 'WBP_Extra_ZoomWidget_C_SetZoom::NewZoomValue' has a wrong offset!");
static_assert(offsetof(WBP_Extra_ZoomWidget_C_SetZoom, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000008, "Member 'WBP_Extra_ZoomWidget_C_SetZoom::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Extra_ZoomWidget_C_SetZoom, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000010, "Member 'WBP_Extra_ZoomWidget_C_SetZoom::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Extra_ZoomWidget_C_SetZoom, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'WBP_Extra_ZoomWidget_C_SetZoom::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Extra_ZoomWidget_C_SetZoom, CallFunc_FClamp_ReturnValue) == 0x000020, "Member 'WBP_Extra_ZoomWidget_C_SetZoom::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Extra_ZoomWidget_C_SetZoom, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000028, "Member 'WBP_Extra_ZoomWidget_C_SetZoom::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Extra_ZoomWidget_C_SetZoom, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000030, "Member 'WBP_Extra_ZoomWidget_C_SetZoom::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Extra_ZoomWidget_C_SetZoom, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000040, "Member 'WBP_Extra_ZoomWidget_C_SetZoom::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Extra_ZoomWidget_C_SetZoom, CallFunc_FClamp_ReturnValue_1) == 0x000048, "Member 'WBP_Extra_ZoomWidget_C_SetZoom::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");

// Function WBP_Extra_ZoomWidget.WBP_Extra_ZoomWidget_C.SetZoomMax
// 0x0008 (0x0008 - 0x0000)
struct WBP_Extra_ZoomWidget_C_SetZoomMax final
{
public:
	double                                        NewMaxZoom;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Extra_ZoomWidget_C_SetZoomMax) == 0x000008, "Wrong alignment on WBP_Extra_ZoomWidget_C_SetZoomMax");
static_assert(sizeof(WBP_Extra_ZoomWidget_C_SetZoomMax) == 0x000008, "Wrong size on WBP_Extra_ZoomWidget_C_SetZoomMax");
static_assert(offsetof(WBP_Extra_ZoomWidget_C_SetZoomMax, NewMaxZoom) == 0x000000, "Member 'WBP_Extra_ZoomWidget_C_SetZoomMax::NewMaxZoom' has a wrong offset!");

// Function WBP_Extra_ZoomWidget.WBP_Extra_ZoomWidget_C.SetZoomMin
// 0x0008 (0x0008 - 0x0000)
struct WBP_Extra_ZoomWidget_C_SetZoomMin final
{
public:
	double                                        NewMinZoom;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Extra_ZoomWidget_C_SetZoomMin) == 0x000008, "Wrong alignment on WBP_Extra_ZoomWidget_C_SetZoomMin");
static_assert(sizeof(WBP_Extra_ZoomWidget_C_SetZoomMin) == 0x000008, "Wrong size on WBP_Extra_ZoomWidget_C_SetZoomMin");
static_assert(offsetof(WBP_Extra_ZoomWidget_C_SetZoomMin, NewMinZoom) == 0x000000, "Member 'WBP_Extra_ZoomWidget_C_SetZoomMin::NewMinZoom' has a wrong offset!");

// Function WBP_Extra_ZoomWidget.WBP_Extra_ZoomWidget_C.SetZoomRatio
// 0x0018 (0x0018 - 0x0000)
struct WBP_Extra_ZoomWidget_C_SetZoomRatio final
{
public:
	double                                        ZoomRatio;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetValue_InValue_ImplicitCast;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Extra_ZoomWidget_C_SetZoomRatio) == 0x000008, "Wrong alignment on WBP_Extra_ZoomWidget_C_SetZoomRatio");
static_assert(sizeof(WBP_Extra_ZoomWidget_C_SetZoomRatio) == 0x000018, "Wrong size on WBP_Extra_ZoomWidget_C_SetZoomRatio");
static_assert(offsetof(WBP_Extra_ZoomWidget_C_SetZoomRatio, ZoomRatio) == 0x000000, "Member 'WBP_Extra_ZoomWidget_C_SetZoomRatio::ZoomRatio' has a wrong offset!");
static_assert(offsetof(WBP_Extra_ZoomWidget_C_SetZoomRatio, CallFunc_FClamp_ReturnValue) == 0x000008, "Member 'WBP_Extra_ZoomWidget_C_SetZoomRatio::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Extra_ZoomWidget_C_SetZoomRatio, CallFunc_SetValue_InValue_ImplicitCast) == 0x000010, "Member 'WBP_Extra_ZoomWidget_C_SetZoomRatio::CallFunc_SetValue_InValue_ImplicitCast' has a wrong offset!");

// Function WBP_Extra_ZoomWidget.WBP_Extra_ZoomWidget_C.Zoom
// 0x0008 (0x0008 - 0x0000)
struct WBP_Extra_ZoomWidget_C_Zoom final
{
public:
	double                                        ZoomDelta;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Extra_ZoomWidget_C_Zoom) == 0x000008, "Wrong alignment on WBP_Extra_ZoomWidget_C_Zoom");
static_assert(sizeof(WBP_Extra_ZoomWidget_C_Zoom) == 0x000008, "Wrong size on WBP_Extra_ZoomWidget_C_Zoom");
static_assert(offsetof(WBP_Extra_ZoomWidget_C_Zoom, ZoomDelta) == 0x000000, "Member 'WBP_Extra_ZoomWidget_C_Zoom::ZoomDelta' has a wrong offset!");

}

