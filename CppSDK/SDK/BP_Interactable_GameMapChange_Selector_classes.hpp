#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Interactable_GameMapChange_Selector

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Zion_structs.hpp"
#include "BP_Interactable_GameMapChange_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Interactable_GameMapChange_Selector.BP_Interactable_GameMapChange_Selector_C
// 0x0038 (0x03C0 - 0x0388)
class ABP_Interactable_GameMapChange_Selector_C final : public ABP_Interactable_GameMapChange_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Interactable_GameMapChange_Selector_C; // 0x0388(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FGameplayConditionChecker              SelectorConditions;                                // 0x0390(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference)
	struct FDataTableRowHandle                    SuccessGameMapHandle;                              // 0x03A8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor)
	class FName                                   SuccessPlayerStartTag;                             // 0x03B8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Interactable_GameMapChange_Selector(int32 EntryPoint);
	void GetTargetMapData(struct FDataTableRowHandle* GameMapHandle_0, class FName* PlayerStartTag_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Interactable_GameMapChange_Selector_C">();
	}
	static class ABP_Interactable_GameMapChange_Selector_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Interactable_GameMapChange_Selector_C>();
	}
};
static_assert(alignof(ABP_Interactable_GameMapChange_Selector_C) == 0x000008, "Wrong alignment on ABP_Interactable_GameMapChange_Selector_C");
static_assert(sizeof(ABP_Interactable_GameMapChange_Selector_C) == 0x0003C0, "Wrong size on ABP_Interactable_GameMapChange_Selector_C");
static_assert(offsetof(ABP_Interactable_GameMapChange_Selector_C, UberGraphFrame_BP_Interactable_GameMapChange_Selector_C) == 0x000388, "Member 'ABP_Interactable_GameMapChange_Selector_C::UberGraphFrame_BP_Interactable_GameMapChange_Selector_C' has a wrong offset!");
static_assert(offsetof(ABP_Interactable_GameMapChange_Selector_C, SelectorConditions) == 0x000390, "Member 'ABP_Interactable_GameMapChange_Selector_C::SelectorConditions' has a wrong offset!");
static_assert(offsetof(ABP_Interactable_GameMapChange_Selector_C, SuccessGameMapHandle) == 0x0003A8, "Member 'ABP_Interactable_GameMapChange_Selector_C::SuccessGameMapHandle' has a wrong offset!");
static_assert(offsetof(ABP_Interactable_GameMapChange_Selector_C, SuccessPlayerStartTag) == 0x0003B8, "Member 'ABP_Interactable_GameMapChange_Selector_C::SuccessPlayerStartTag' has a wrong offset!");

}

