#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Interactable_Door_Magic

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Zion_structs.hpp"


namespace SDK::Params
{

// Function BP_Interactable_Door_Magic.BP_Interactable_Door_Magic_C.UserConstructionScript
// 0x0178 (0x0178 - 0x0000)
struct BP_Interactable_Door_Magic_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0078(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Interactable_Door_Magic_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_Interactable_Door_Magic_C_UserConstructionScript");
static_assert(sizeof(BP_Interactable_Door_Magic_C_UserConstructionScript) == 0x000178, "Wrong size on BP_Interactable_Door_Magic_C_UserConstructionScript");
static_assert(offsetof(BP_Interactable_Door_Magic_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_Interactable_Door_Magic_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_Magic_C_UserConstructionScript, CallFunc_BreakVector_X) == 0x000008, "Member 'BP_Interactable_Door_Magic_C_UserConstructionScript::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_Magic_C_UserConstructionScript, CallFunc_BreakVector_Y) == 0x000010, "Member 'BP_Interactable_Door_Magic_C_UserConstructionScript::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_Magic_C_UserConstructionScript, CallFunc_BreakVector_Z) == 0x000018, "Member 'BP_Interactable_Door_Magic_C_UserConstructionScript::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_Magic_C_UserConstructionScript, CallFunc_Abs_ReturnValue) == 0x000020, "Member 'BP_Interactable_Door_Magic_C_UserConstructionScript::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_Magic_C_UserConstructionScript, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000028, "Member 'BP_Interactable_Door_Magic_C_UserConstructionScript::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_Magic_C_UserConstructionScript, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_Interactable_Door_Magic_C_UserConstructionScript::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_Magic_C_UserConstructionScript, CallFunc_BreakRotator_Roll) == 0x000048, "Member 'BP_Interactable_Door_Magic_C_UserConstructionScript::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_Magic_C_UserConstructionScript, CallFunc_BreakRotator_Pitch) == 0x00004C, "Member 'BP_Interactable_Door_Magic_C_UserConstructionScript::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_Magic_C_UserConstructionScript, CallFunc_BreakRotator_Yaw) == 0x000050, "Member 'BP_Interactable_Door_Magic_C_UserConstructionScript::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_Magic_C_UserConstructionScript, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000054, "Member 'BP_Interactable_Door_Magic_C_UserConstructionScript::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_Magic_C_UserConstructionScript, CallFunc_SelectFloat_ReturnValue) == 0x000058, "Member 'BP_Interactable_Door_Magic_C_UserConstructionScript::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_Magic_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue) == 0x000060, "Member 'BP_Interactable_Door_Magic_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_Magic_C_UserConstructionScript, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000078, "Member 'BP_Interactable_Door_Magic_C_UserConstructionScript::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_Magic_C_UserConstructionScript, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000170, "Member 'BP_Interactable_Door_Magic_C_UserConstructionScript::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_Interactable_Door_Magic.BP_Interactable_Door_Magic_C.UnbindPlayerEvent
// 0x0028 (0x0028 - 0x0000)
struct BP_Interactable_Door_Magic_C_UnbindPlayerEvent final
{
public:
	TDelegate<void(const class UInventory* Inventory, const class FName& ItemId, int32 AddedCount)> K2Node_CreateDelegate_OutputDelegate; // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UInventoryComponent*                    CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Interactable_Door_Magic_C_UnbindPlayerEvent) == 0x000008, "Wrong alignment on BP_Interactable_Door_Magic_C_UnbindPlayerEvent");
static_assert(sizeof(BP_Interactable_Door_Magic_C_UnbindPlayerEvent) == 0x000028, "Wrong size on BP_Interactable_Door_Magic_C_UnbindPlayerEvent");
static_assert(offsetof(BP_Interactable_Door_Magic_C_UnbindPlayerEvent, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_Interactable_Door_Magic_C_UnbindPlayerEvent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_Magic_C_UnbindPlayerEvent, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'BP_Interactable_Door_Magic_C_UnbindPlayerEvent::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_Magic_C_UnbindPlayerEvent, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'BP_Interactable_Door_Magic_C_UnbindPlayerEvent::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_Magic_C_UnbindPlayerEvent, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_Interactable_Door_Magic_C_UnbindPlayerEvent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_Magic_C_UnbindPlayerEvent, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'BP_Interactable_Door_Magic_C_UnbindPlayerEvent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_Interactable_Door_Magic.BP_Interactable_Door_Magic_C.StopLightFX
// 0x0001 (0x0001 - 0x0000)
struct BP_Interactable_Door_Magic_C_StopLightFX final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Interactable_Door_Magic_C_StopLightFX) == 0x000001, "Wrong alignment on BP_Interactable_Door_Magic_C_StopLightFX");
static_assert(sizeof(BP_Interactable_Door_Magic_C_StopLightFX) == 0x000001, "Wrong size on BP_Interactable_Door_Magic_C_StopLightFX");
static_assert(offsetof(BP_Interactable_Door_Magic_C_StopLightFX, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_Interactable_Door_Magic_C_StopLightFX::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Interactable_Door_Magic.BP_Interactable_Door_Magic_C.RefreshLightFX
// 0x0040 (0x0040 - 0x0000)
struct BP_Interactable_Door_Magic_C_RefreshLightFX final
{
public:
	bool                                          ConditionsChecked_0;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Open;                                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_2;                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         K2Node_Select_Default_1;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Interactable_Door_Magic_C_RefreshLightFX) == 0x000008, "Wrong alignment on BP_Interactable_Door_Magic_C_RefreshLightFX");
static_assert(sizeof(BP_Interactable_Door_Magic_C_RefreshLightFX) == 0x000040, "Wrong size on BP_Interactable_Door_Magic_C_RefreshLightFX");
static_assert(offsetof(BP_Interactable_Door_Magic_C_RefreshLightFX, ConditionsChecked_0) == 0x000000, "Member 'BP_Interactable_Door_Magic_C_RefreshLightFX::ConditionsChecked_0' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_Magic_C_RefreshLightFX, Open) == 0x000001, "Member 'BP_Interactable_Door_Magic_C_RefreshLightFX::Open' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_Magic_C_RefreshLightFX, Temp_bool_Variable) == 0x000002, "Member 'BP_Interactable_Door_Magic_C_RefreshLightFX::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_Magic_C_RefreshLightFX, Temp_object_Variable) == 0x000008, "Member 'BP_Interactable_Door_Magic_C_RefreshLightFX::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_Magic_C_RefreshLightFX, Temp_object_Variable_1) == 0x000010, "Member 'BP_Interactable_Door_Magic_C_RefreshLightFX::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_Magic_C_RefreshLightFX, Temp_bool_Variable_1) == 0x000018, "Member 'BP_Interactable_Door_Magic_C_RefreshLightFX::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_Magic_C_RefreshLightFX, K2Node_Select_Default) == 0x000020, "Member 'BP_Interactable_Door_Magic_C_RefreshLightFX::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_Magic_C_RefreshLightFX, Temp_object_Variable_2) == 0x000028, "Member 'BP_Interactable_Door_Magic_C_RefreshLightFX::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_Magic_C_RefreshLightFX, K2Node_Select_Default_1) == 0x000030, "Member 'BP_Interactable_Door_Magic_C_RefreshLightFX::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_Magic_C_RefreshLightFX, CallFunc_SpawnSystemAttached_ReturnValue) == 0x000038, "Member 'BP_Interactable_Door_Magic_C_RefreshLightFX::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");

// Function BP_Interactable_Door_Magic.BP_Interactable_Door_Magic_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_Interactable_Door_Magic_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Interactable_Door_Magic_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_Interactable_Door_Magic_C_ReceiveEndPlay");
static_assert(sizeof(BP_Interactable_Door_Magic_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_Interactable_Door_Magic_C_ReceiveEndPlay");
static_assert(offsetof(BP_Interactable_Door_Magic_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_Interactable_Door_Magic_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_Interactable_Door_Magic.BP_Interactable_Door_Magic_C.PlayAnimation
// 0x0004 (0x0004 - 0x0000)
struct BP_Interactable_Door_Magic_C_PlayAnimation final
{
public:
	bool                                          bOpen;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRequestInstant;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ConditionsChecked_0;                               // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ConditionsChecked_ReturnValue;            // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Interactable_Door_Magic_C_PlayAnimation) == 0x000001, "Wrong alignment on BP_Interactable_Door_Magic_C_PlayAnimation");
static_assert(sizeof(BP_Interactable_Door_Magic_C_PlayAnimation) == 0x000004, "Wrong size on BP_Interactable_Door_Magic_C_PlayAnimation");
static_assert(offsetof(BP_Interactable_Door_Magic_C_PlayAnimation, bOpen) == 0x000000, "Member 'BP_Interactable_Door_Magic_C_PlayAnimation::bOpen' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_Magic_C_PlayAnimation, bRequestInstant) == 0x000001, "Member 'BP_Interactable_Door_Magic_C_PlayAnimation::bRequestInstant' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_Magic_C_PlayAnimation, ConditionsChecked_0) == 0x000002, "Member 'BP_Interactable_Door_Magic_C_PlayAnimation::ConditionsChecked_0' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_Magic_C_PlayAnimation, CallFunc_ConditionsChecked_ReturnValue) == 0x000003, "Member 'BP_Interactable_Door_Magic_C_PlayAnimation::CallFunc_ConditionsChecked_ReturnValue' has a wrong offset!");

// Function BP_Interactable_Door_Magic.BP_Interactable_Door_Magic_C.OnItemAdded_Event
// 0x0018 (0x0018 - 0x0000)
struct BP_Interactable_Door_Magic_C_OnItemAdded_Event final
{
public:
	const class UInventory*                       Inventory;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   ItemId;                                            // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AddedCount;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Interactable_Door_Magic_C_OnItemAdded_Event) == 0x000008, "Wrong alignment on BP_Interactable_Door_Magic_C_OnItemAdded_Event");
static_assert(sizeof(BP_Interactable_Door_Magic_C_OnItemAdded_Event) == 0x000018, "Wrong size on BP_Interactable_Door_Magic_C_OnItemAdded_Event");
static_assert(offsetof(BP_Interactable_Door_Magic_C_OnItemAdded_Event, Inventory) == 0x000000, "Member 'BP_Interactable_Door_Magic_C_OnItemAdded_Event::Inventory' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_Magic_C_OnItemAdded_Event, ItemId) == 0x000008, "Member 'BP_Interactable_Door_Magic_C_OnItemAdded_Event::ItemId' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_Magic_C_OnItemAdded_Event, AddedCount) == 0x000010, "Member 'BP_Interactable_Door_Magic_C_OnItemAdded_Event::AddedCount' has a wrong offset!");

// Function BP_Interactable_Door_Magic.BP_Interactable_Door_Magic_C.OnInteract
// 0x0008 (0x0008 - 0x0000)
struct BP_Interactable_Door_Magic_C_OnInteract final
{
public:
	class APlayerController*                      Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Interactable_Door_Magic_C_OnInteract) == 0x000008, "Wrong alignment on BP_Interactable_Door_Magic_C_OnInteract");
static_assert(sizeof(BP_Interactable_Door_Magic_C_OnInteract) == 0x000008, "Wrong size on BP_Interactable_Door_Magic_C_OnInteract");
static_assert(offsetof(BP_Interactable_Door_Magic_C_OnInteract, Controller) == 0x000000, "Member 'BP_Interactable_Door_Magic_C_OnInteract::Controller' has a wrong offset!");

// Function BP_Interactable_Door_Magic.BP_Interactable_Door_Magic_C.ExecuteUbergraph_BP_Interactable_Door_Magic
// 0x0050 (0x0050 - 0x0000)
struct BP_Interactable_Door_Magic_C_ExecuteUbergraph_BP_Interactable_Door_Magic final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class UInventory* Inventory, const class FName& ItemId, int32 AddedCount)> K2Node_CreateDelegate_OutputDelegate; // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UInventoryComponent*                    CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	const class UInventory*                       K2Node_CustomEvent_Inventory;                      // 0x0028(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_ItemID;                         // 0x0030(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_AddedCount;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ConditionsChecked_ReturnValue;            // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_Event_Controller;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EClearStatus                                  K2Node_ComponentBoundEvent_ClearStatus;            // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Interactable_Door_Magic_C_ExecuteUbergraph_BP_Interactable_Door_Magic) == 0x000008, "Wrong alignment on BP_Interactable_Door_Magic_C_ExecuteUbergraph_BP_Interactable_Door_Magic");
static_assert(sizeof(BP_Interactable_Door_Magic_C_ExecuteUbergraph_BP_Interactable_Door_Magic) == 0x000050, "Wrong size on BP_Interactable_Door_Magic_C_ExecuteUbergraph_BP_Interactable_Door_Magic");
static_assert(offsetof(BP_Interactable_Door_Magic_C_ExecuteUbergraph_BP_Interactable_Door_Magic, EntryPoint) == 0x000000, "Member 'BP_Interactable_Door_Magic_C_ExecuteUbergraph_BP_Interactable_Door_Magic::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_Magic_C_ExecuteUbergraph_BP_Interactable_Door_Magic, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_Interactable_Door_Magic_C_ExecuteUbergraph_BP_Interactable_Door_Magic::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_Magic_C_ExecuteUbergraph_BP_Interactable_Door_Magic, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BP_Interactable_Door_Magic_C_ExecuteUbergraph_BP_Interactable_Door_Magic::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_Magic_C_ExecuteUbergraph_BP_Interactable_Door_Magic, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'BP_Interactable_Door_Magic_C_ExecuteUbergraph_BP_Interactable_Door_Magic::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_Magic_C_ExecuteUbergraph_BP_Interactable_Door_Magic, K2Node_CustomEvent_Inventory) == 0x000028, "Member 'BP_Interactable_Door_Magic_C_ExecuteUbergraph_BP_Interactable_Door_Magic::K2Node_CustomEvent_Inventory' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_Magic_C_ExecuteUbergraph_BP_Interactable_Door_Magic, K2Node_CustomEvent_ItemID) == 0x000030, "Member 'BP_Interactable_Door_Magic_C_ExecuteUbergraph_BP_Interactable_Door_Magic::K2Node_CustomEvent_ItemID' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_Magic_C_ExecuteUbergraph_BP_Interactable_Door_Magic, K2Node_CustomEvent_AddedCount) == 0x000038, "Member 'BP_Interactable_Door_Magic_C_ExecuteUbergraph_BP_Interactable_Door_Magic::K2Node_CustomEvent_AddedCount' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_Magic_C_ExecuteUbergraph_BP_Interactable_Door_Magic, CallFunc_ConditionsChecked_ReturnValue) == 0x00003C, "Member 'BP_Interactable_Door_Magic_C_ExecuteUbergraph_BP_Interactable_Door_Magic::CallFunc_ConditionsChecked_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_Magic_C_ExecuteUbergraph_BP_Interactable_Door_Magic, K2Node_Event_Controller) == 0x000040, "Member 'BP_Interactable_Door_Magic_C_ExecuteUbergraph_BP_Interactable_Door_Magic::K2Node_Event_Controller' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_Magic_C_ExecuteUbergraph_BP_Interactable_Door_Magic, CallFunc_Not_PreBool_ReturnValue) == 0x000048, "Member 'BP_Interactable_Door_Magic_C_ExecuteUbergraph_BP_Interactable_Door_Magic::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_Magic_C_ExecuteUbergraph_BP_Interactable_Door_Magic, CallFunc_BooleanAND_ReturnValue) == 0x000049, "Member 'BP_Interactable_Door_Magic_C_ExecuteUbergraph_BP_Interactable_Door_Magic::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_Magic_C_ExecuteUbergraph_BP_Interactable_Door_Magic, K2Node_Event_EndPlayReason) == 0x00004A, "Member 'BP_Interactable_Door_Magic_C_ExecuteUbergraph_BP_Interactable_Door_Magic::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_Magic_C_ExecuteUbergraph_BP_Interactable_Door_Magic, K2Node_ComponentBoundEvent_ClearStatus) == 0x00004B, "Member 'BP_Interactable_Door_Magic_C_ExecuteUbergraph_BP_Interactable_Door_Magic::K2Node_ComponentBoundEvent_ClearStatus' has a wrong offset!");
static_assert(offsetof(BP_Interactable_Door_Magic_C_ExecuteUbergraph_BP_Interactable_Door_Magic, K2Node_SwitchEnum_CmpSuccess) == 0x00004C, "Member 'BP_Interactable_Door_Magic_C_ExecuteUbergraph_BP_Interactable_Door_Magic::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_Interactable_Door_Magic.BP_Interactable_Door_Magic_C.BndEvt__BP_Interactable_Door_Magic_ClearComponent_K2Node_ComponentBoundEvent_1_ClearableDelegate__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_Interactable_Door_Magic_C_BndEvt__BP_Interactable_Door_Magic_ClearComponent_K2Node_ComponentBoundEvent_1_ClearableDelegate__DelegateSignature final
{
public:
	EClearStatus                                  ClearStatus;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Interactable_Door_Magic_C_BndEvt__BP_Interactable_Door_Magic_ClearComponent_K2Node_ComponentBoundEvent_1_ClearableDelegate__DelegateSignature) == 0x000001, "Wrong alignment on BP_Interactable_Door_Magic_C_BndEvt__BP_Interactable_Door_Magic_ClearComponent_K2Node_ComponentBoundEvent_1_ClearableDelegate__DelegateSignature");
static_assert(sizeof(BP_Interactable_Door_Magic_C_BndEvt__BP_Interactable_Door_Magic_ClearComponent_K2Node_ComponentBoundEvent_1_ClearableDelegate__DelegateSignature) == 0x000001, "Wrong size on BP_Interactable_Door_Magic_C_BndEvt__BP_Interactable_Door_Magic_ClearComponent_K2Node_ComponentBoundEvent_1_ClearableDelegate__DelegateSignature");
static_assert(offsetof(BP_Interactable_Door_Magic_C_BndEvt__BP_Interactable_Door_Magic_ClearComponent_K2Node_ComponentBoundEvent_1_ClearableDelegate__DelegateSignature, ClearStatus) == 0x000000, "Member 'BP_Interactable_Door_Magic_C_BndEvt__BP_Interactable_Door_Magic_ClearComponent_K2Node_ComponentBoundEvent_1_ClearableDelegate__DelegateSignature::ClearStatus' has a wrong offset!");

}

