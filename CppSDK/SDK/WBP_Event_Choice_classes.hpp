#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Event_Choice

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Zion_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Event_Choice.WBP_Event_Choice_C
// 0x0038 (0x0498 - 0x0460)
class UWBP_Event_Choice_C final : public UUserWidgetZion
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0460(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWBP_Button_Generic_C*                  WBP_Button_Generic;                                // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0470(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ExposeOnSpawn)
	TMulticastInlineDelegate<void(class UWBP_Event_Choice_C* EventChoice)> OnConfirmed;              // 0x0480(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         ChoiceIndex;                                       // 0x0490(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	struct FEventReply OnPressConfirm(const struct FKeyEvent& KeyEvent);
	struct FEventReply OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent);
	void ExecuteUbergraph_WBP_Event_Choice(int32 EntryPoint);
	void Construct();
	void BndEvt__WBP_Event_Choice_WBP_Button_Generic_K2Node_ComponentBoundEvent_0_OnPressed__DelegateSignature(const struct FKeyEvent& KeyEvent);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Event_Choice_C">();
	}
	static class UWBP_Event_Choice_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Event_Choice_C>();
	}
};
static_assert(alignof(UWBP_Event_Choice_C) == 0x000008, "Wrong alignment on UWBP_Event_Choice_C");
static_assert(sizeof(UWBP_Event_Choice_C) == 0x000498, "Wrong size on UWBP_Event_Choice_C");
static_assert(offsetof(UWBP_Event_Choice_C, UberGraphFrame) == 0x000460, "Member 'UWBP_Event_Choice_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Event_Choice_C, WBP_Button_Generic) == 0x000468, "Member 'UWBP_Event_Choice_C::WBP_Button_Generic' has a wrong offset!");
static_assert(offsetof(UWBP_Event_Choice_C, Text) == 0x000470, "Member 'UWBP_Event_Choice_C::Text' has a wrong offset!");
static_assert(offsetof(UWBP_Event_Choice_C, OnConfirmed) == 0x000480, "Member 'UWBP_Event_Choice_C::OnConfirmed' has a wrong offset!");
static_assert(offsetof(UWBP_Event_Choice_C, ChoiceIndex) == 0x000490, "Member 'UWBP_Event_Choice_C::ChoiceIndex' has a wrong offset!");

}

