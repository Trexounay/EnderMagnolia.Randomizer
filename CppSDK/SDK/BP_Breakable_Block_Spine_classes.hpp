#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Breakable_Block_Spine

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_Breakable_Block_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Breakable_Block_Spine.BP_Breakable_Block_Spine_C
// 0x0050 (0x05A0 - 0x0550)
class ABP_Breakable_Block_Spine_C : public ABP_Breakable_Block_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Breakable_Block_Spine_C;         // 0x0550(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          Box_WakeTriggerTarget;                             // 0x0558(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USleepTargetComponent*                  SleepTarget;                                       // 0x0560(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    FMODAudio;                                         // 0x0568(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpineSkeletonAnimationExComponent*     SpineSkeletonAnimationEx;                          // 0x0570(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpineSkeletonRendererComponent*        SpineSkeletonRenderer;                             // 0x0578(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FString                                 IdleAnimationName;                                 // 0x0580(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         DamageAnimationNames;                              // 0x0590(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly)

public:
	void PlayDamageAnimation(const struct FDamageData& DamageData);
	void PlayAnimation(const class FString& AnimationName);
	void ExecuteUbergraph_BP_Breakable_Block_Spine(int32 EntryPoint);
	void BndEvt__BP_Breakable_Block_Spine_StatHPComponent_K2Node_ComponentBoundEvent_1_HPDamageDelegate__DelegateSignature(class AActor* Source, const struct FDamageData& DamageData);
	void UserConstructionScript();
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Breakable_Block_Spine_C">();
	}
	static class ABP_Breakable_Block_Spine_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Breakable_Block_Spine_C>();
	}
};
static_assert(alignof(ABP_Breakable_Block_Spine_C) == 0x000010, "Wrong alignment on ABP_Breakable_Block_Spine_C");
static_assert(sizeof(ABP_Breakable_Block_Spine_C) == 0x0005A0, "Wrong size on ABP_Breakable_Block_Spine_C");
static_assert(offsetof(ABP_Breakable_Block_Spine_C, UberGraphFrame_BP_Breakable_Block_Spine_C) == 0x000550, "Member 'ABP_Breakable_Block_Spine_C::UberGraphFrame_BP_Breakable_Block_Spine_C' has a wrong offset!");
static_assert(offsetof(ABP_Breakable_Block_Spine_C, Box_WakeTriggerTarget) == 0x000558, "Member 'ABP_Breakable_Block_Spine_C::Box_WakeTriggerTarget' has a wrong offset!");
static_assert(offsetof(ABP_Breakable_Block_Spine_C, SleepTarget) == 0x000560, "Member 'ABP_Breakable_Block_Spine_C::SleepTarget' has a wrong offset!");
static_assert(offsetof(ABP_Breakable_Block_Spine_C, FMODAudio) == 0x000568, "Member 'ABP_Breakable_Block_Spine_C::FMODAudio' has a wrong offset!");
static_assert(offsetof(ABP_Breakable_Block_Spine_C, SpineSkeletonAnimationEx) == 0x000570, "Member 'ABP_Breakable_Block_Spine_C::SpineSkeletonAnimationEx' has a wrong offset!");
static_assert(offsetof(ABP_Breakable_Block_Spine_C, SpineSkeletonRenderer) == 0x000578, "Member 'ABP_Breakable_Block_Spine_C::SpineSkeletonRenderer' has a wrong offset!");
static_assert(offsetof(ABP_Breakable_Block_Spine_C, IdleAnimationName) == 0x000580, "Member 'ABP_Breakable_Block_Spine_C::IdleAnimationName' has a wrong offset!");
static_assert(offsetof(ABP_Breakable_Block_Spine_C, DamageAnimationNames) == 0x000590, "Member 'ABP_Breakable_Block_Spine_C::DamageAnimationNames' has a wrong offset!");

}

