#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Elevator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Zion_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Elevator.BP_Elevator_C
// 0x0048 (0x0430 - 0x03E8)
class ABP_Elevator_C : public AMovingPlatform_Elevator
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBillboardComponent*                    RopeDestinationBillboard;                          // 0x03F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   ElevatorTrigger;                                   // 0x03F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Billboard;                                         // 0x0400(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             StartElevatorFMODEvent;                            // 0x0408(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             StopElevatorFMODEvent;                             // 0x0410(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             LoopElevatorFMODEvent;                             // 0x0418(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    LoopElevatorFMODInstance;                          // 0x0420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	double                                        ElevatorTriggerScale;                              // 0x0428(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();
	void StopLoopSoundInstance();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveBeginPlay();
	void ExecuteUbergraph_BP_Elevator(int32 EntryPoint);
	void BndEvt__BP_Elevator_ElevatorMovementComponent_K2Node_ComponentBoundEvent_1_ElevatorMovementEvent__DelegateSignature(bool bInstant, bool bWasMoving);
	void BndEvt__BP_Elevator_ElevatorMovementComponent_K2Node_ComponentBoundEvent_0_ElevatorMovementEvent__DelegateSignature(bool bInstant, bool bWasMoving);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Elevator_C">();
	}
	static class ABP_Elevator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Elevator_C>();
	}
};
static_assert(alignof(ABP_Elevator_C) == 0x000008, "Wrong alignment on ABP_Elevator_C");
static_assert(sizeof(ABP_Elevator_C) == 0x000430, "Wrong size on ABP_Elevator_C");
static_assert(offsetof(ABP_Elevator_C, UberGraphFrame) == 0x0003E8, "Member 'ABP_Elevator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Elevator_C, RopeDestinationBillboard) == 0x0003F0, "Member 'ABP_Elevator_C::RopeDestinationBillboard' has a wrong offset!");
static_assert(offsetof(ABP_Elevator_C, ElevatorTrigger) == 0x0003F8, "Member 'ABP_Elevator_C::ElevatorTrigger' has a wrong offset!");
static_assert(offsetof(ABP_Elevator_C, Billboard) == 0x000400, "Member 'ABP_Elevator_C::Billboard' has a wrong offset!");
static_assert(offsetof(ABP_Elevator_C, StartElevatorFMODEvent) == 0x000408, "Member 'ABP_Elevator_C::StartElevatorFMODEvent' has a wrong offset!");
static_assert(offsetof(ABP_Elevator_C, StopElevatorFMODEvent) == 0x000410, "Member 'ABP_Elevator_C::StopElevatorFMODEvent' has a wrong offset!");
static_assert(offsetof(ABP_Elevator_C, LoopElevatorFMODEvent) == 0x000418, "Member 'ABP_Elevator_C::LoopElevatorFMODEvent' has a wrong offset!");
static_assert(offsetof(ABP_Elevator_C, LoopElevatorFMODInstance) == 0x000420, "Member 'ABP_Elevator_C::LoopElevatorFMODInstance' has a wrong offset!");
static_assert(offsetof(ABP_Elevator_C, ElevatorTriggerScale) == 0x000428, "Member 'ABP_Elevator_C::ElevatorTriggerScale' has a wrong offset!");

}

