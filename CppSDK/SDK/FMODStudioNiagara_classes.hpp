#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FMODStudioNiagara

#include "Basic.hpp"

#include "Niagara_classes.hpp"


namespace SDK
{

// Class FMODStudioNiagara.FMODNiagaraEventPlayer
// 0x0028 (0x0060 - 0x0038)
class UFMODNiagaraEventPlayer final : public UNiagaraDataInterface
{
public:
	class UFMODEvent*                             EventToPlay;                                       // 0x0038(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           ParameterNames;                                    // 0x0040(0x0010)(Edit, ZeroConstructor, EditConst, NoClear, NativeAccessSpecifierPublic)
	bool                                          bLimitPlaysPerTick;                                // 0x0050(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxPlaysPerTick;                                   // 0x0054(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bStopWhenComponentIsDestroyed;                     // 0x0058(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FMODNiagaraEventPlayer">();
	}
	static class UFMODNiagaraEventPlayer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFMODNiagaraEventPlayer>();
	}
};
static_assert(alignof(UFMODNiagaraEventPlayer) == 0x000008, "Wrong alignment on UFMODNiagaraEventPlayer");
static_assert(sizeof(UFMODNiagaraEventPlayer) == 0x000060, "Wrong size on UFMODNiagaraEventPlayer");
static_assert(offsetof(UFMODNiagaraEventPlayer, EventToPlay) == 0x000038, "Member 'UFMODNiagaraEventPlayer::EventToPlay' has a wrong offset!");
static_assert(offsetof(UFMODNiagaraEventPlayer, ParameterNames) == 0x000040, "Member 'UFMODNiagaraEventPlayer::ParameterNames' has a wrong offset!");
static_assert(offsetof(UFMODNiagaraEventPlayer, bLimitPlaysPerTick) == 0x000050, "Member 'UFMODNiagaraEventPlayer::bLimitPlaysPerTick' has a wrong offset!");
static_assert(offsetof(UFMODNiagaraEventPlayer, MaxPlaysPerTick) == 0x000054, "Member 'UFMODNiagaraEventPlayer::MaxPlaysPerTick' has a wrong offset!");
static_assert(offsetof(UFMODNiagaraEventPlayer, bStopWhenComponentIsDestroyed) == 0x000058, "Member 'UFMODNiagaraEventPlayer::bStopWhenComponentIsDestroyed' has a wrong offset!");

}

