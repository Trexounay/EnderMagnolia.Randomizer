#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BossSpawner

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_EnemySpawner_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "EventSystem_structs.hpp"
#include "Zion_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BossSpawner.BP_BossSpawner_C
// 0x0230 (0x0720 - 0x04F0)
class ABP_BossSpawner_C : public ABP_EnemySpawner_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UFieldMessageComponent*                 FieldMessage;                                      // 0x04F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x0500(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AStaticVolume_CameraModifier*           CameraModifierVolume;                              // 0x0508(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UEventAsset>             IntroEvent;                                        // 0x0510(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash)
	TSoftObjectPtr<class UEventAsset>             DefeatEvent;                                       // 0x0538(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash)
	TMap<class FName, class AActor*>              ActorBindings;                                     // 0x0560(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly)
	TMap<class FName, class ASpawner*>            SpawnerBindings;                                   // 0x05B0(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly)
	class UFMODEvent*                             BGM;                                               // 0x0600(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UFieldTalkAsset>         DefeatFieldTalkAsset;                              // 0x0608(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash)
	class UEventPlayer*                           EventPlayer;                                       // 0x0630(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	TMap<class FName, class AActor*>              GeneratedActorBindings;                            // 0x0638(0x0050)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, AdvancedDisplay)
	class UEventAsset*                            LoadedIntroEvent;                                  // 0x0688(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class UEventAsset*                            LoadedDefeatEvent;                                 // 0x0690(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	int32                                         ActivationCount;                                   // 0x0698(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	uint8                                         Pad_69C[0x4];                                      // 0x069C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFieldTalkAsset*                        LoadedDefeatFieldTalkAsset;                        // 0x06A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          bStopBGMOnDefeat;                                  // 0x06A8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRefreshAudioVolumesOnDefeat;                      // 0x06A9(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6AA[0x6];                                      // 0x06AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_Door_C*>                     DoorsToCloseOnStart;                               // 0x06B0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate)
	TArray<class ABP_Door_C*>                     DoorsToOpenOnPostDefeat;                           // 0x06C0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate)
	TSoftObjectPtr<class UFieldMessageAsset>      DefeatFieldMessageAsset;                           // 0x06D0(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash)
	class UFieldMessageAsset*                     LoadedDefeatFieldMessageAsset;                     // 0x06F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	struct FVector                                FieldMessageLocationOffset;                        // 0x0700(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CameraUnregisterDelay;                             // 0x0718(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFullyRestorePlayerOnDefeat;                       // 0x071C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UnregisterFromCamera(class APawn* Enemy);
	void TryStopBGM();
	void TryPlayBGM();
	void TryLoadEventBlocking(TSoftObjectPtr<class UObject> SoftEvent, class UObject*& Event);
	void RegisterToCamera(class APawn* Enemy);
	void PostIntro();
	void PostDefeat();
	void PlayFieldTalk();
	void PlayFieldMessage();
	void PlayEvent(class UEventAsset* EventAsset, const TDelegate<void(class UEventPlayer* EventPlayer, bool bCompletedEvent, EEventPlayerResult EventResult)>& InputPin);
	void OnUnregisterEnemy(class ACharacterZion* Enemy);
	void OnLoaded_D8062329490817C94DFE51B89305F3D3(class UObject* Loaded);
	void OnLoaded_9F62A72947E92945F3886895F4675E77(class UObject* Loaded);
	void OnLoaded_85231EA84F9FC27A62232D8209BDE433(class UObject* Loaded);
	void OnLoaded_02E6166A4FA74DD3D4472B91AB659B95(class UObject* Loaded);
	void OnIntroFinished(class UEventPlayer* EventPlayer_0, bool bCompletedEvent, EEventPlayerResult EventResult);
	void OnEnemyPreActivation();
	void OnEnemyDeathStart();
	void OnEnemyDeathEnd();
	void OnEnemyActivation();
	void OnDefeatEventFinished(class UEventPlayer* EventPlayer_0, bool bCompletedEvent, EEventPlayerResult EventResult);
	void FlushCamera(bool bInterruptOnGoingBlend);
	void ExecuteUbergraph_BP_BossSpawner(int32 EntryPoint);
	void BndEvt__BP_BossSpawner_ClearComponent_K2Node_ComponentBoundEvent_0_ClearableDelegate__DelegateSignature(EClearStatus ClearStatus);
	void BndEvt__BP_BossSpawner_Box1_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BossSpawner_C">();
	}
	static class ABP_BossSpawner_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BossSpawner_C>();
	}
};
static_assert(alignof(ABP_BossSpawner_C) == 0x000008, "Wrong alignment on ABP_BossSpawner_C");
static_assert(sizeof(ABP_BossSpawner_C) == 0x000720, "Wrong size on ABP_BossSpawner_C");
static_assert(offsetof(ABP_BossSpawner_C, UberGraphFrame) == 0x0004F0, "Member 'ABP_BossSpawner_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_BossSpawner_C, FieldMessage) == 0x0004F8, "Member 'ABP_BossSpawner_C::FieldMessage' has a wrong offset!");
static_assert(offsetof(ABP_BossSpawner_C, Box) == 0x000500, "Member 'ABP_BossSpawner_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_BossSpawner_C, CameraModifierVolume) == 0x000508, "Member 'ABP_BossSpawner_C::CameraModifierVolume' has a wrong offset!");
static_assert(offsetof(ABP_BossSpawner_C, IntroEvent) == 0x000510, "Member 'ABP_BossSpawner_C::IntroEvent' has a wrong offset!");
static_assert(offsetof(ABP_BossSpawner_C, DefeatEvent) == 0x000538, "Member 'ABP_BossSpawner_C::DefeatEvent' has a wrong offset!");
static_assert(offsetof(ABP_BossSpawner_C, ActorBindings) == 0x000560, "Member 'ABP_BossSpawner_C::ActorBindings' has a wrong offset!");
static_assert(offsetof(ABP_BossSpawner_C, SpawnerBindings) == 0x0005B0, "Member 'ABP_BossSpawner_C::SpawnerBindings' has a wrong offset!");
static_assert(offsetof(ABP_BossSpawner_C, BGM) == 0x000600, "Member 'ABP_BossSpawner_C::BGM' has a wrong offset!");
static_assert(offsetof(ABP_BossSpawner_C, DefeatFieldTalkAsset) == 0x000608, "Member 'ABP_BossSpawner_C::DefeatFieldTalkAsset' has a wrong offset!");
static_assert(offsetof(ABP_BossSpawner_C, EventPlayer) == 0x000630, "Member 'ABP_BossSpawner_C::EventPlayer' has a wrong offset!");
static_assert(offsetof(ABP_BossSpawner_C, GeneratedActorBindings) == 0x000638, "Member 'ABP_BossSpawner_C::GeneratedActorBindings' has a wrong offset!");
static_assert(offsetof(ABP_BossSpawner_C, LoadedIntroEvent) == 0x000688, "Member 'ABP_BossSpawner_C::LoadedIntroEvent' has a wrong offset!");
static_assert(offsetof(ABP_BossSpawner_C, LoadedDefeatEvent) == 0x000690, "Member 'ABP_BossSpawner_C::LoadedDefeatEvent' has a wrong offset!");
static_assert(offsetof(ABP_BossSpawner_C, ActivationCount) == 0x000698, "Member 'ABP_BossSpawner_C::ActivationCount' has a wrong offset!");
static_assert(offsetof(ABP_BossSpawner_C, LoadedDefeatFieldTalkAsset) == 0x0006A0, "Member 'ABP_BossSpawner_C::LoadedDefeatFieldTalkAsset' has a wrong offset!");
static_assert(offsetof(ABP_BossSpawner_C, bStopBGMOnDefeat) == 0x0006A8, "Member 'ABP_BossSpawner_C::bStopBGMOnDefeat' has a wrong offset!");
static_assert(offsetof(ABP_BossSpawner_C, bRefreshAudioVolumesOnDefeat) == 0x0006A9, "Member 'ABP_BossSpawner_C::bRefreshAudioVolumesOnDefeat' has a wrong offset!");
static_assert(offsetof(ABP_BossSpawner_C, DoorsToCloseOnStart) == 0x0006B0, "Member 'ABP_BossSpawner_C::DoorsToCloseOnStart' has a wrong offset!");
static_assert(offsetof(ABP_BossSpawner_C, DoorsToOpenOnPostDefeat) == 0x0006C0, "Member 'ABP_BossSpawner_C::DoorsToOpenOnPostDefeat' has a wrong offset!");
static_assert(offsetof(ABP_BossSpawner_C, DefeatFieldMessageAsset) == 0x0006D0, "Member 'ABP_BossSpawner_C::DefeatFieldMessageAsset' has a wrong offset!");
static_assert(offsetof(ABP_BossSpawner_C, LoadedDefeatFieldMessageAsset) == 0x0006F8, "Member 'ABP_BossSpawner_C::LoadedDefeatFieldMessageAsset' has a wrong offset!");
static_assert(offsetof(ABP_BossSpawner_C, FieldMessageLocationOffset) == 0x000700, "Member 'ABP_BossSpawner_C::FieldMessageLocationOffset' has a wrong offset!");
static_assert(offsetof(ABP_BossSpawner_C, CameraUnregisterDelay) == 0x000718, "Member 'ABP_BossSpawner_C::CameraUnregisterDelay' has a wrong offset!");
static_assert(offsetof(ABP_BossSpawner_C, bFullyRestorePlayerOnDefeat) == 0x00071C, "Member 'ABP_BossSpawner_C::bFullyRestorePlayerOnDefeat' has a wrong offset!");

}

