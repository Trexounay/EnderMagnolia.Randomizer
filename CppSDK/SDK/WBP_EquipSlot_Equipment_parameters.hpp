#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_EquipSlot_Equipment

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_EquipSlot_Equipment.WBP_EquipSlot_Equipment_C.ExecuteUbergraph_WBP_EquipSlot_Equipment
// 0x0010 (0x0010 - 0x0000)
struct WBP_EquipSlot_Equipment_C_ExecuteUbergraph_WBP_EquipSlot_Equipment final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerControllerZion*                  CallFunc_Get_ReturnValue;                          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EquipSlot_Equipment_C_ExecuteUbergraph_WBP_EquipSlot_Equipment) == 0x000008, "Wrong alignment on WBP_EquipSlot_Equipment_C_ExecuteUbergraph_WBP_EquipSlot_Equipment");
static_assert(sizeof(WBP_EquipSlot_Equipment_C_ExecuteUbergraph_WBP_EquipSlot_Equipment) == 0x000010, "Wrong size on WBP_EquipSlot_Equipment_C_ExecuteUbergraph_WBP_EquipSlot_Equipment");
static_assert(offsetof(WBP_EquipSlot_Equipment_C_ExecuteUbergraph_WBP_EquipSlot_Equipment, EntryPoint) == 0x000000, "Member 'WBP_EquipSlot_Equipment_C_ExecuteUbergraph_WBP_EquipSlot_Equipment::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_EquipSlot_Equipment_C_ExecuteUbergraph_WBP_EquipSlot_Equipment, CallFunc_Get_ReturnValue) == 0x000008, "Member 'WBP_EquipSlot_Equipment_C_ExecuteUbergraph_WBP_EquipSlot_Equipment::CallFunc_Get_ReturnValue' has a wrong offset!");

// Function WBP_EquipSlot_Equipment.WBP_EquipSlot_Equipment_C.Refresh
// 0x0028 (0x0028 - 0x0000)
struct WBP_EquipSlot_Equipment_C_Refresh final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetEquipmentIDFromSlot_ReturnValue;       // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle;              // 0x0010(0x0010)(NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EquipSlot_Equipment_C_Refresh) == 0x000008, "Wrong alignment on WBP_EquipSlot_Equipment_C_Refresh");
static_assert(sizeof(WBP_EquipSlot_Equipment_C_Refresh) == 0x000028, "Wrong size on WBP_EquipSlot_Equipment_C_Refresh");
static_assert(offsetof(WBP_EquipSlot_Equipment_C_Refresh, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_EquipSlot_Equipment_C_Refresh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EquipSlot_Equipment_C_Refresh, CallFunc_GetEquipmentIDFromSlot_ReturnValue) == 0x000004, "Member 'WBP_EquipSlot_Equipment_C_Refresh::CallFunc_GetEquipmentIDFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EquipSlot_Equipment_C_Refresh, K2Node_MakeStruct_DataTableRowHandle) == 0x000010, "Member 'WBP_EquipSlot_Equipment_C_Refresh::K2Node_MakeStruct_DataTableRowHandle' has a wrong offset!");
static_assert(offsetof(WBP_EquipSlot_Equipment_C_Refresh, CallFunc_NotEqual_NameName_ReturnValue) == 0x000020, "Member 'WBP_EquipSlot_Equipment_C_Refresh::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");

}

