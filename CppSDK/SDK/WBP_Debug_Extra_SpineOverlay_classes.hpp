#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Debug_Extra_SpineOverlay

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Zion_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Debug_Extra_SpineOverlay.WBP_Debug_Extra_SpineOverlay_C
// 0x00A8 (0x0508 - 0x0460)
class UWBP_Debug_Extra_SpineOverlay_C final : public UUserWidgetZion
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0460(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UOverlay*                               Debug_Overlay;                                     // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               SpinBox_SceneX;                                    // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               SpinBox_SceneY;                                    // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               SpinBox_X;                                         // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               SpinBox_Y;                                         // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               SpinBox_ZoomMax;                                   // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               SpinBox_ZoomMin;                                   // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FVector2D                              SpineOffset;                                       // 0x04A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(const struct FVector2D& PreviousOffset, const struct FVector2D& NewOffset)> OnOffsetChanged; // 0x04B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FVector2D                              SceneOffset;                                       // 0x04C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          bCallOffsetChangedEventDispatchers;                // 0x04D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          bCallSceneOffsetChangedEventDispatchers;           // 0x04D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          bCallZoomChangedEventDispatchers;                  // 0x04D2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	uint8                                         Pad_4D3[0x5];                                      // 0x04D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(const struct FVector2D& PreviousOffset, const struct FVector2D& NewOffset)> OnSceneOffsetChanged; // 0x04D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(double NewZoomMin)> OnZoomMinChanged;                              // 0x04E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(double NewZoomMax)> OnZoomMaxChanged;                              // 0x04F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void BndEvt__WBP_Debug_Extra_SpineOverlay_SpinBox_ZoomMin_K2Node_ComponentBoundEvent_3_OnSpinBoxValueChangedEvent__DelegateSignature(float InValue);
	void BndEvt__WBP_Debug_Extra_SpineOverlay_SpinBox_ZoomMax_K2Node_ComponentBoundEvent_4_OnSpinBoxValueChangedEvent__DelegateSignature(float InValue);
	void BndEvt__WBP_Debug_Extra_SpineOverlay_SpinBox_Y_K2Node_ComponentBoundEvent_2_OnSpinBoxValueChangedEvent__DelegateSignature(float InValue);
	void BndEvt__WBP_Debug_Extra_SpineOverlay_SpinBox_X_K2Node_ComponentBoundEvent_1_OnSpinBoxValueChangedEvent__DelegateSignature(float InValue);
	void BndEvt__WBP_Debug_Extra_SpineOverlay_SpinBox_SceneY_K2Node_ComponentBoundEvent_5_OnSpinBoxValueChangedEvent__DelegateSignature(float InValue);
	void BndEvt__WBP_Debug_Extra_SpineOverlay_SpinBox_SceneX_K2Node_ComponentBoundEvent_0_OnSpinBoxValueChangedEvent__DelegateSignature(float InValue);
	void SetZoomMinMax(float ZoomMin, float ZoomMax);
	void SetSceneOffset(const struct FVector2D& SceneOffset_0);
	void SetOffset(const struct FVector2D& Offset);
	void ExecuteUbergraph_WBP_Debug_Extra_SpineOverlay(int32 EntryPoint);
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Debug_Extra_SpineOverlay_C">();
	}
	static class UWBP_Debug_Extra_SpineOverlay_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Debug_Extra_SpineOverlay_C>();
	}
};
static_assert(alignof(UWBP_Debug_Extra_SpineOverlay_C) == 0x000008, "Wrong alignment on UWBP_Debug_Extra_SpineOverlay_C");
static_assert(sizeof(UWBP_Debug_Extra_SpineOverlay_C) == 0x000508, "Wrong size on UWBP_Debug_Extra_SpineOverlay_C");
static_assert(offsetof(UWBP_Debug_Extra_SpineOverlay_C, UberGraphFrame) == 0x000460, "Member 'UWBP_Debug_Extra_SpineOverlay_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Debug_Extra_SpineOverlay_C, Debug_Overlay) == 0x000468, "Member 'UWBP_Debug_Extra_SpineOverlay_C::Debug_Overlay' has a wrong offset!");
static_assert(offsetof(UWBP_Debug_Extra_SpineOverlay_C, SpinBox_SceneX) == 0x000470, "Member 'UWBP_Debug_Extra_SpineOverlay_C::SpinBox_SceneX' has a wrong offset!");
static_assert(offsetof(UWBP_Debug_Extra_SpineOverlay_C, SpinBox_SceneY) == 0x000478, "Member 'UWBP_Debug_Extra_SpineOverlay_C::SpinBox_SceneY' has a wrong offset!");
static_assert(offsetof(UWBP_Debug_Extra_SpineOverlay_C, SpinBox_X) == 0x000480, "Member 'UWBP_Debug_Extra_SpineOverlay_C::SpinBox_X' has a wrong offset!");
static_assert(offsetof(UWBP_Debug_Extra_SpineOverlay_C, SpinBox_Y) == 0x000488, "Member 'UWBP_Debug_Extra_SpineOverlay_C::SpinBox_Y' has a wrong offset!");
static_assert(offsetof(UWBP_Debug_Extra_SpineOverlay_C, SpinBox_ZoomMax) == 0x000490, "Member 'UWBP_Debug_Extra_SpineOverlay_C::SpinBox_ZoomMax' has a wrong offset!");
static_assert(offsetof(UWBP_Debug_Extra_SpineOverlay_C, SpinBox_ZoomMin) == 0x000498, "Member 'UWBP_Debug_Extra_SpineOverlay_C::SpinBox_ZoomMin' has a wrong offset!");
static_assert(offsetof(UWBP_Debug_Extra_SpineOverlay_C, SpineOffset) == 0x0004A0, "Member 'UWBP_Debug_Extra_SpineOverlay_C::SpineOffset' has a wrong offset!");
static_assert(offsetof(UWBP_Debug_Extra_SpineOverlay_C, OnOffsetChanged) == 0x0004B0, "Member 'UWBP_Debug_Extra_SpineOverlay_C::OnOffsetChanged' has a wrong offset!");
static_assert(offsetof(UWBP_Debug_Extra_SpineOverlay_C, SceneOffset) == 0x0004C0, "Member 'UWBP_Debug_Extra_SpineOverlay_C::SceneOffset' has a wrong offset!");
static_assert(offsetof(UWBP_Debug_Extra_SpineOverlay_C, bCallOffsetChangedEventDispatchers) == 0x0004D0, "Member 'UWBP_Debug_Extra_SpineOverlay_C::bCallOffsetChangedEventDispatchers' has a wrong offset!");
static_assert(offsetof(UWBP_Debug_Extra_SpineOverlay_C, bCallSceneOffsetChangedEventDispatchers) == 0x0004D1, "Member 'UWBP_Debug_Extra_SpineOverlay_C::bCallSceneOffsetChangedEventDispatchers' has a wrong offset!");
static_assert(offsetof(UWBP_Debug_Extra_SpineOverlay_C, bCallZoomChangedEventDispatchers) == 0x0004D2, "Member 'UWBP_Debug_Extra_SpineOverlay_C::bCallZoomChangedEventDispatchers' has a wrong offset!");
static_assert(offsetof(UWBP_Debug_Extra_SpineOverlay_C, OnSceneOffsetChanged) == 0x0004D8, "Member 'UWBP_Debug_Extra_SpineOverlay_C::OnSceneOffsetChanged' has a wrong offset!");
static_assert(offsetof(UWBP_Debug_Extra_SpineOverlay_C, OnZoomMinChanged) == 0x0004E8, "Member 'UWBP_Debug_Extra_SpineOverlay_C::OnZoomMinChanged' has a wrong offset!");
static_assert(offsetof(UWBP_Debug_Extra_SpineOverlay_C, OnZoomMaxChanged) == 0x0004F8, "Member 'UWBP_Debug_Extra_SpineOverlay_C::OnZoomMaxChanged' has a wrong offset!");

}

