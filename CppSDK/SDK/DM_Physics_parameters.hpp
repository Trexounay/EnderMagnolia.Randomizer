#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DM_Physics

#include "Basic.hpp"


namespace SDK::Params
{

// Function DM_Physics.DM_Physics_C.PlayerInitialize
// 0x0010 (0x0010 - 0x0000)
struct DM_Physics_C_PlayerInitialize final
{
public:
	class ABP_CharacterZion_C*                    Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_PhysicsInfo_C*                      CallFunc_AddComponentByClass_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DM_Physics_C_PlayerInitialize) == 0x000008, "Wrong alignment on DM_Physics_C_PlayerInitialize");
static_assert(sizeof(DM_Physics_C_PlayerInitialize) == 0x000010, "Wrong size on DM_Physics_C_PlayerInitialize");
static_assert(offsetof(DM_Physics_C_PlayerInitialize, Player) == 0x000000, "Member 'DM_Physics_C_PlayerInitialize::Player' has a wrong offset!");
static_assert(offsetof(DM_Physics_C_PlayerInitialize, CallFunc_AddComponentByClass_ReturnValue) == 0x000008, "Member 'DM_Physics_C_PlayerInitialize::CallFunc_AddComponentByClass_ReturnValue' has a wrong offset!");

// Function DM_Physics.DM_Physics_C.ServiceTick
// 0x0060 (0x0060 - 0x0000)
struct DM_Physics_C_ServiceTick final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WasInputKeyJustPressed_ReturnValue;       // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInputKeyDown_ReturnValue;               // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Add_ByteByte_ReturnValue;                 // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F[0x1];                                       // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACharacterZion*>                 CallFunc_GetAllActorsOfClass_OutActors;            // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacterZion*                         CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PhysicsInfo_C*                      CallFunc_AddComponentByClass_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_PhysicsInfo_C*                      CallFunc_GetComponentByClass_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DM_Physics_C_ServiceTick) == 0x000008, "Wrong alignment on DM_Physics_C_ServiceTick");
static_assert(sizeof(DM_Physics_C_ServiceTick) == 0x000060, "Wrong size on DM_Physics_C_ServiceTick");
static_assert(offsetof(DM_Physics_C_ServiceTick, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'DM_Physics_C_ServiceTick::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(DM_Physics_C_ServiceTick, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'DM_Physics_C_ServiceTick::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DM_Physics_C_ServiceTick, Temp_int_Array_Index_Variable) == 0x000008, "Member 'DM_Physics_C_ServiceTick::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(DM_Physics_C_ServiceTick, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'DM_Physics_C_ServiceTick::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(DM_Physics_C_ServiceTick, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'DM_Physics_C_ServiceTick::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(DM_Physics_C_ServiceTick, CallFunc_WasInputKeyJustPressed_ReturnValue) == 0x000019, "Member 'DM_Physics_C_ServiceTick::CallFunc_WasInputKeyJustPressed_ReturnValue' has a wrong offset!");
static_assert(offsetof(DM_Physics_C_ServiceTick, CallFunc_IsInputKeyDown_ReturnValue) == 0x00001A, "Member 'DM_Physics_C_ServiceTick::CallFunc_IsInputKeyDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(DM_Physics_C_ServiceTick, CallFunc_Not_PreBool_ReturnValue_1) == 0x00001B, "Member 'DM_Physics_C_ServiceTick::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DM_Physics_C_ServiceTick, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00001C, "Member 'DM_Physics_C_ServiceTick::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(DM_Physics_C_ServiceTick, CallFunc_BooleanAND_ReturnValue) == 0x00001D, "Member 'DM_Physics_C_ServiceTick::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(DM_Physics_C_ServiceTick, CallFunc_Add_ByteByte_ReturnValue) == 0x00001E, "Member 'DM_Physics_C_ServiceTick::CallFunc_Add_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(DM_Physics_C_ServiceTick, CallFunc_GetAllActorsOfClass_OutActors) == 0x000020, "Member 'DM_Physics_C_ServiceTick::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(DM_Physics_C_ServiceTick, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'DM_Physics_C_ServiceTick::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DM_Physics_C_ServiceTick, CallFunc_Array_Get_Item) == 0x000038, "Member 'DM_Physics_C_ServiceTick::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DM_Physics_C_ServiceTick, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'DM_Physics_C_ServiceTick::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DM_Physics_C_ServiceTick, CallFunc_AddComponentByClass_ReturnValue) == 0x000048, "Member 'DM_Physics_C_ServiceTick::CallFunc_AddComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(DM_Physics_C_ServiceTick, CallFunc_GetComponentByClass_ReturnValue) == 0x000050, "Member 'DM_Physics_C_ServiceTick::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(DM_Physics_C_ServiceTick, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'DM_Physics_C_ServiceTick::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

