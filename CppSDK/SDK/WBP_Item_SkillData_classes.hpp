#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Item_SkillData

#include "Basic.hpp"

#include "Zion_structs.hpp"
#include "Zion_classes.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Item_SkillData.WBP_Item_SkillData_C
// 0x00B8 (0x0518 - 0x0460)
class UWBP_Item_SkillData_C final : public UUserWidgetZion
{
public:
	class UImage*                                 CategoryImg;                                       // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             CooldownValue;                                     // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             CostSPValue;                                       // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBoxCooldown;                             // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBoxCooldownUpgrade;                      // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBoxSP;                                   // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_0;                                           // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             SkillCategory;                                     // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             UpgradedCooldownValue;                             // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_SkillData_ProgressBar_C*           WBP_SkillData_ProgressBar_Break;                   // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_SkillData_ProgressBar_C*           WBP_SkillData_ProgressBar_Power;                   // 0x04B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_SkillData_ProgressBar_C*           WBP_SkillData_ProgressBar_Range;                   // 0x04B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_SkillData_ProgressBar_C*           WBP_SkillData_ProgressBar_Speed;                   // 0x04C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMap<ECommandSetCategory, struct FSlateColor> ColorForCategories;                                // 0x04C8(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly)

public:
	void SetupUpgrade(const struct FSkillData& SkillData, const struct FSkillData& UpgradeSkillData);
	void SetupSPCost(int32 Value);
	void SetupCooldownCost(double Value);
	void Setup_Upgraded_Cooldown_Cost(double CurrCooldown, double UpgradeCooldown);
	void Setup(const struct FSkillData& SkillData);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Item_SkillData_C">();
	}
	static class UWBP_Item_SkillData_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Item_SkillData_C>();
	}
};
static_assert(alignof(UWBP_Item_SkillData_C) == 0x000008, "Wrong alignment on UWBP_Item_SkillData_C");
static_assert(sizeof(UWBP_Item_SkillData_C) == 0x000518, "Wrong size on UWBP_Item_SkillData_C");
static_assert(offsetof(UWBP_Item_SkillData_C, CategoryImg) == 0x000460, "Member 'UWBP_Item_SkillData_C::CategoryImg' has a wrong offset!");
static_assert(offsetof(UWBP_Item_SkillData_C, CooldownValue) == 0x000468, "Member 'UWBP_Item_SkillData_C::CooldownValue' has a wrong offset!");
static_assert(offsetof(UWBP_Item_SkillData_C, CostSPValue) == 0x000470, "Member 'UWBP_Item_SkillData_C::CostSPValue' has a wrong offset!");
static_assert(offsetof(UWBP_Item_SkillData_C, HorizontalBoxCooldown) == 0x000478, "Member 'UWBP_Item_SkillData_C::HorizontalBoxCooldown' has a wrong offset!");
static_assert(offsetof(UWBP_Item_SkillData_C, HorizontalBoxCooldownUpgrade) == 0x000480, "Member 'UWBP_Item_SkillData_C::HorizontalBoxCooldownUpgrade' has a wrong offset!");
static_assert(offsetof(UWBP_Item_SkillData_C, HorizontalBoxSP) == 0x000488, "Member 'UWBP_Item_SkillData_C::HorizontalBoxSP' has a wrong offset!");
static_assert(offsetof(UWBP_Item_SkillData_C, Image_0) == 0x000490, "Member 'UWBP_Item_SkillData_C::Image_0' has a wrong offset!");
static_assert(offsetof(UWBP_Item_SkillData_C, SkillCategory) == 0x000498, "Member 'UWBP_Item_SkillData_C::SkillCategory' has a wrong offset!");
static_assert(offsetof(UWBP_Item_SkillData_C, UpgradedCooldownValue) == 0x0004A0, "Member 'UWBP_Item_SkillData_C::UpgradedCooldownValue' has a wrong offset!");
static_assert(offsetof(UWBP_Item_SkillData_C, WBP_SkillData_ProgressBar_Break) == 0x0004A8, "Member 'UWBP_Item_SkillData_C::WBP_SkillData_ProgressBar_Break' has a wrong offset!");
static_assert(offsetof(UWBP_Item_SkillData_C, WBP_SkillData_ProgressBar_Power) == 0x0004B0, "Member 'UWBP_Item_SkillData_C::WBP_SkillData_ProgressBar_Power' has a wrong offset!");
static_assert(offsetof(UWBP_Item_SkillData_C, WBP_SkillData_ProgressBar_Range) == 0x0004B8, "Member 'UWBP_Item_SkillData_C::WBP_SkillData_ProgressBar_Range' has a wrong offset!");
static_assert(offsetof(UWBP_Item_SkillData_C, WBP_SkillData_ProgressBar_Speed) == 0x0004C0, "Member 'UWBP_Item_SkillData_C::WBP_SkillData_ProgressBar_Speed' has a wrong offset!");
static_assert(offsetof(UWBP_Item_SkillData_C, ColorForCategories) == 0x0004C8, "Member 'UWBP_Item_SkillData_C::ColorForCategories' has a wrong offset!");

}

