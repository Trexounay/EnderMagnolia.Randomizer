#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ZoneName

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_ZoneName.WBP_ZoneName_C.ExecuteUbergraph_WBP_ZoneName
// 0x00D0 (0x00D0 - 0x0000)
struct WBP_ZoneName_C_ExecuteUbergraph_WBP_ZoneName final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeZion*                          CallFunc_Get_ReturnValue;                          // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetActiveZoneName_ReturnValue;            // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0060(0x0010)()
	class FString                                 CallFunc_GetActiveZoneLevelName_ReturnValue;       // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class AInteractable*>                  CallFunc_GetAllActorsOfClass_OutActors;            // 0x0080(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0090(0x0010)()
	class AActor*                                 CallFunc_GetClosest_closest;                       // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x00C0(0x0010)()
};
static_assert(alignof(WBP_ZoneName_C_ExecuteUbergraph_WBP_ZoneName) == 0x000008, "Wrong alignment on WBP_ZoneName_C_ExecuteUbergraph_WBP_ZoneName");
static_assert(sizeof(WBP_ZoneName_C_ExecuteUbergraph_WBP_ZoneName) == 0x0000D0, "Wrong size on WBP_ZoneName_C_ExecuteUbergraph_WBP_ZoneName");
static_assert(offsetof(WBP_ZoneName_C_ExecuteUbergraph_WBP_ZoneName, EntryPoint) == 0x000000, "Member 'WBP_ZoneName_C_ExecuteUbergraph_WBP_ZoneName::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_ZoneName_C_ExecuteUbergraph_WBP_ZoneName, K2Node_Event_MyGeometry) == 0x000004, "Member 'WBP_ZoneName_C_ExecuteUbergraph_WBP_ZoneName::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_ZoneName_C_ExecuteUbergraph_WBP_ZoneName, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'WBP_ZoneName_C_ExecuteUbergraph_WBP_ZoneName::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_ZoneName_C_ExecuteUbergraph_WBP_ZoneName, CallFunc_Get_ReturnValue) == 0x000040, "Member 'WBP_ZoneName_C_ExecuteUbergraph_WBP_ZoneName::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ZoneName_C_ExecuteUbergraph_WBP_ZoneName, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'WBP_ZoneName_C_ExecuteUbergraph_WBP_ZoneName::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ZoneName_C_ExecuteUbergraph_WBP_ZoneName, CallFunc_GetActiveZoneName_ReturnValue) == 0x000050, "Member 'WBP_ZoneName_C_ExecuteUbergraph_WBP_ZoneName::CallFunc_GetActiveZoneName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ZoneName_C_ExecuteUbergraph_WBP_ZoneName, CallFunc_Conv_StringToText_ReturnValue) == 0x000060, "Member 'WBP_ZoneName_C_ExecuteUbergraph_WBP_ZoneName::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ZoneName_C_ExecuteUbergraph_WBP_ZoneName, CallFunc_GetActiveZoneLevelName_ReturnValue) == 0x000070, "Member 'WBP_ZoneName_C_ExecuteUbergraph_WBP_ZoneName::CallFunc_GetActiveZoneLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ZoneName_C_ExecuteUbergraph_WBP_ZoneName, CallFunc_GetAllActorsOfClass_OutActors) == 0x000080, "Member 'WBP_ZoneName_C_ExecuteUbergraph_WBP_ZoneName::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(WBP_ZoneName_C_ExecuteUbergraph_WBP_ZoneName, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000090, "Member 'WBP_ZoneName_C_ExecuteUbergraph_WBP_ZoneName::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ZoneName_C_ExecuteUbergraph_WBP_ZoneName, CallFunc_GetClosest_closest) == 0x0000A0, "Member 'WBP_ZoneName_C_ExecuteUbergraph_WBP_ZoneName::CallFunc_GetClosest_closest' has a wrong offset!");
static_assert(offsetof(WBP_ZoneName_C_ExecuteUbergraph_WBP_ZoneName, CallFunc_IsValid_ReturnValue_1) == 0x0000A8, "Member 'WBP_ZoneName_C_ExecuteUbergraph_WBP_ZoneName::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ZoneName_C_ExecuteUbergraph_WBP_ZoneName, CallFunc_GetDisplayName_ReturnValue) == 0x0000B0, "Member 'WBP_ZoneName_C_ExecuteUbergraph_WBP_ZoneName::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ZoneName_C_ExecuteUbergraph_WBP_ZoneName, CallFunc_Conv_StringToText_ReturnValue_2) == 0x0000C0, "Member 'WBP_ZoneName_C_ExecuteUbergraph_WBP_ZoneName::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");

// Function WBP_ZoneName.WBP_ZoneName_C.GetClosest
// 0x0068 (0x0068 - 0x0000)
struct WBP_ZoneName_C_GetClosest final
{
public:
	TArray<class AActor*>                         Actors;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class AActor*                                 closest;                                           // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	double                                        min_dist;                                          // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSquaredDistanceTo_ReturnValue;         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_min_dist_ImplicitCast;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ZoneName_C_GetClosest) == 0x000008, "Wrong alignment on WBP_ZoneName_C_GetClosest");
static_assert(sizeof(WBP_ZoneName_C_GetClosest) == 0x000068, "Wrong size on WBP_ZoneName_C_GetClosest");
static_assert(offsetof(WBP_ZoneName_C_GetClosest, Actors) == 0x000000, "Member 'WBP_ZoneName_C_GetClosest::Actors' has a wrong offset!");
static_assert(offsetof(WBP_ZoneName_C_GetClosest, closest) == 0x000010, "Member 'WBP_ZoneName_C_GetClosest::closest' has a wrong offset!");
static_assert(offsetof(WBP_ZoneName_C_GetClosest, Actor) == 0x000018, "Member 'WBP_ZoneName_C_GetClosest::Actor' has a wrong offset!");
static_assert(offsetof(WBP_ZoneName_C_GetClosest, min_dist) == 0x000020, "Member 'WBP_ZoneName_C_GetClosest::min_dist' has a wrong offset!");
static_assert(offsetof(WBP_ZoneName_C_GetClosest, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'WBP_ZoneName_C_GetClosest::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ZoneName_C_GetClosest, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'WBP_ZoneName_C_GetClosest::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ZoneName_C_GetClosest, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'WBP_ZoneName_C_GetClosest::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ZoneName_C_GetClosest, CallFunc_Array_Get_Item) == 0x000038, "Member 'WBP_ZoneName_C_GetClosest::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ZoneName_C_GetClosest, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'WBP_ZoneName_C_GetClosest::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ZoneName_C_GetClosest, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'WBP_ZoneName_C_GetClosest::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ZoneName_C_GetClosest, CallFunc_GetPlayerPawn_ReturnValue) == 0x000048, "Member 'WBP_ZoneName_C_GetClosest::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ZoneName_C_GetClosest, CallFunc_GetSquaredDistanceTo_ReturnValue) == 0x000050, "Member 'WBP_ZoneName_C_GetClosest::CallFunc_GetSquaredDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ZoneName_C_GetClosest, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000054, "Member 'WBP_ZoneName_C_GetClosest::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ZoneName_C_GetClosest, K2Node_VariableSet_min_dist_ImplicitCast) == 0x000058, "Member 'WBP_ZoneName_C_GetClosest::K2Node_VariableSet_min_dist_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_ZoneName_C_GetClosest, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x000060, "Member 'WBP_ZoneName_C_GetClosest::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function WBP_ZoneName.WBP_ZoneName_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_ZoneName_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ZoneName_C_Tick) == 0x000004, "Wrong alignment on WBP_ZoneName_C_Tick");
static_assert(sizeof(WBP_ZoneName_C_Tick) == 0x00003C, "Wrong size on WBP_ZoneName_C_Tick");
static_assert(offsetof(WBP_ZoneName_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_ZoneName_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_ZoneName_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_ZoneName_C_Tick::InDeltaTime' has a wrong offset!");

}

