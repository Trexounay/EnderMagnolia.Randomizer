#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Interactable_ElevatorTrigger_Spine

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_Interactable_ElevatorTrigger_Spine.BP_Interactable_ElevatorTrigger_Spine_C.SetElevator
// 0x0008 (0x0008 - 0x0000)
struct BP_Interactable_ElevatorTrigger_Spine_C_SetElevator final
{
public:
	class AMovingPlatform_Elevator*               Elevator_0;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Interactable_ElevatorTrigger_Spine_C_SetElevator) == 0x000008, "Wrong alignment on BP_Interactable_ElevatorTrigger_Spine_C_SetElevator");
static_assert(sizeof(BP_Interactable_ElevatorTrigger_Spine_C_SetElevator) == 0x000008, "Wrong size on BP_Interactable_ElevatorTrigger_Spine_C_SetElevator");
static_assert(offsetof(BP_Interactable_ElevatorTrigger_Spine_C_SetElevator, Elevator_0) == 0x000000, "Member 'BP_Interactable_ElevatorTrigger_Spine_C_SetElevator::Elevator_0' has a wrong offset!");

// Function BP_Interactable_ElevatorTrigger_Spine.BP_Interactable_ElevatorTrigger_Spine_C.RefreshAnimations
// 0x0030 (0x0030 - 0x0000)
struct BP_Interactable_ElevatorTrigger_Spine_C_RefreshAnimations final
{
public:
	bool                                          CallFunc_CanBeInteracted_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMoving_ReturnValue;                     // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UTrackEntry*                            CallFunc_AddAnimation_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTrackEntry*                            CallFunc_SetAnimation_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTrackEntry*                            CallFunc_AddAnimation_ReturnValue_1;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTrackEntry*                            CallFunc_SetAnimation_ReturnValue_1;               // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTrackEntry*                            CallFunc_SetAnimation_ReturnValue_2;               // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Interactable_ElevatorTrigger_Spine_C_RefreshAnimations) == 0x000008, "Wrong alignment on BP_Interactable_ElevatorTrigger_Spine_C_RefreshAnimations");
static_assert(sizeof(BP_Interactable_ElevatorTrigger_Spine_C_RefreshAnimations) == 0x000030, "Wrong size on BP_Interactable_ElevatorTrigger_Spine_C_RefreshAnimations");
static_assert(offsetof(BP_Interactable_ElevatorTrigger_Spine_C_RefreshAnimations, CallFunc_CanBeInteracted_ReturnValue) == 0x000000, "Member 'BP_Interactable_ElevatorTrigger_Spine_C_RefreshAnimations::CallFunc_CanBeInteracted_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_ElevatorTrigger_Spine_C_RefreshAnimations, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_Interactable_ElevatorTrigger_Spine_C_RefreshAnimations::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_ElevatorTrigger_Spine_C_RefreshAnimations, CallFunc_IsMoving_ReturnValue) == 0x000002, "Member 'BP_Interactable_ElevatorTrigger_Spine_C_RefreshAnimations::CallFunc_IsMoving_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_ElevatorTrigger_Spine_C_RefreshAnimations, CallFunc_AddAnimation_ReturnValue) == 0x000008, "Member 'BP_Interactable_ElevatorTrigger_Spine_C_RefreshAnimations::CallFunc_AddAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_ElevatorTrigger_Spine_C_RefreshAnimations, CallFunc_SetAnimation_ReturnValue) == 0x000010, "Member 'BP_Interactable_ElevatorTrigger_Spine_C_RefreshAnimations::CallFunc_SetAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_ElevatorTrigger_Spine_C_RefreshAnimations, CallFunc_AddAnimation_ReturnValue_1) == 0x000018, "Member 'BP_Interactable_ElevatorTrigger_Spine_C_RefreshAnimations::CallFunc_AddAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Interactable_ElevatorTrigger_Spine_C_RefreshAnimations, CallFunc_SetAnimation_ReturnValue_1) == 0x000020, "Member 'BP_Interactable_ElevatorTrigger_Spine_C_RefreshAnimations::CallFunc_SetAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Interactable_ElevatorTrigger_Spine_C_RefreshAnimations, CallFunc_SetAnimation_ReturnValue_2) == 0x000028, "Member 'BP_Interactable_ElevatorTrigger_Spine_C_RefreshAnimations::CallFunc_SetAnimation_ReturnValue_2' has a wrong offset!");

// Function BP_Interactable_ElevatorTrigger_Spine.BP_Interactable_ElevatorTrigger_Spine_C.ExecuteUbergraph_BP_Interactable_ElevatorTrigger_Spine
// 0x0004 (0x0004 - 0x0000)
struct BP_Interactable_ElevatorTrigger_Spine_C_ExecuteUbergraph_BP_Interactable_ElevatorTrigger_Spine final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Interactable_ElevatorTrigger_Spine_C_ExecuteUbergraph_BP_Interactable_ElevatorTrigger_Spine) == 0x000004, "Wrong alignment on BP_Interactable_ElevatorTrigger_Spine_C_ExecuteUbergraph_BP_Interactable_ElevatorTrigger_Spine");
static_assert(sizeof(BP_Interactable_ElevatorTrigger_Spine_C_ExecuteUbergraph_BP_Interactable_ElevatorTrigger_Spine) == 0x000004, "Wrong size on BP_Interactable_ElevatorTrigger_Spine_C_ExecuteUbergraph_BP_Interactable_ElevatorTrigger_Spine");
static_assert(offsetof(BP_Interactable_ElevatorTrigger_Spine_C_ExecuteUbergraph_BP_Interactable_ElevatorTrigger_Spine, EntryPoint) == 0x000000, "Member 'BP_Interactable_ElevatorTrigger_Spine_C_ExecuteUbergraph_BP_Interactable_ElevatorTrigger_Spine::EntryPoint' has a wrong offset!");

}

