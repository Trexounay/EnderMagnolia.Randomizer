#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Footer

#include "Basic.hpp"

#include "Zion_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_Footer.WBP_Footer_C.Add EntriesInternal
// 0x0080 (0x0080 - 0x0000)
struct WBP_Footer_C_Add_EntriesInternal final
{
public:
	TArray<struct FFooterData>                    FooterDataArray;                                   // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Temporary;                                         // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFooterData                            CallFunc_Array_Get_Item;                           // 0x0020(0x0058)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Footer_C_Add_EntriesInternal) == 0x000008, "Wrong alignment on WBP_Footer_C_Add_EntriesInternal");
static_assert(sizeof(WBP_Footer_C_Add_EntriesInternal) == 0x000080, "Wrong size on WBP_Footer_C_Add_EntriesInternal");
static_assert(offsetof(WBP_Footer_C_Add_EntriesInternal, FooterDataArray) == 0x000000, "Member 'WBP_Footer_C_Add_EntriesInternal::FooterDataArray' has a wrong offset!");
static_assert(offsetof(WBP_Footer_C_Add_EntriesInternal, Temporary) == 0x000010, "Member 'WBP_Footer_C_Add_EntriesInternal::Temporary' has a wrong offset!");
static_assert(offsetof(WBP_Footer_C_Add_EntriesInternal, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'WBP_Footer_C_Add_EntriesInternal::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Footer_C_Add_EntriesInternal, Temp_int_Array_Index_Variable) == 0x000018, "Member 'WBP_Footer_C_Add_EntriesInternal::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Footer_C_Add_EntriesInternal, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'WBP_Footer_C_Add_EntriesInternal::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Footer_C_Add_EntriesInternal, CallFunc_Array_Get_Item) == 0x000020, "Member 'WBP_Footer_C_Add_EntriesInternal::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Footer_C_Add_EntriesInternal, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'WBP_Footer_C_Add_EntriesInternal::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Footer_C_Add_EntriesInternal, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'WBP_Footer_C_Add_EntriesInternal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_Footer.WBP_Footer_C.AddEntries
// 0x0018 (0x0018 - 0x0000)
struct WBP_Footer_C_AddEntries final
{
public:
	TArray<struct FFooterData>                    FooterDataList;                                    // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          bTemporary;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Footer_C_AddEntries) == 0x000008, "Wrong alignment on WBP_Footer_C_AddEntries");
static_assert(sizeof(WBP_Footer_C_AddEntries) == 0x000018, "Wrong size on WBP_Footer_C_AddEntries");
static_assert(offsetof(WBP_Footer_C_AddEntries, FooterDataList) == 0x000000, "Member 'WBP_Footer_C_AddEntries::FooterDataList' has a wrong offset!");
static_assert(offsetof(WBP_Footer_C_AddEntries, bTemporary) == 0x000010, "Member 'WBP_Footer_C_AddEntries::bTemporary' has a wrong offset!");

// Function WBP_Footer.WBP_Footer_C.AddEntry
// 0x0060 (0x0060 - 0x0000)
struct WBP_Footer_C_AddEntry final
{
public:
	struct FFooterData                            FooterData;                                        // 0x0000(0x0058)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          bTemporary;                                        // 0x0058(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Footer_C_AddEntry) == 0x000008, "Wrong alignment on WBP_Footer_C_AddEntry");
static_assert(sizeof(WBP_Footer_C_AddEntry) == 0x000060, "Wrong size on WBP_Footer_C_AddEntry");
static_assert(offsetof(WBP_Footer_C_AddEntry, FooterData) == 0x000000, "Member 'WBP_Footer_C_AddEntry::FooterData' has a wrong offset!");
static_assert(offsetof(WBP_Footer_C_AddEntry, bTemporary) == 0x000058, "Member 'WBP_Footer_C_AddEntry::bTemporary' has a wrong offset!");

// Function WBP_Footer.WBP_Footer_C.AddEntryInternal
// 0x00C0 (0x00C0 - 0x0000)
struct WBP_Footer_C_AddEntryInternal final
{
public:
	struct FFooterData                            FooterData;                                        // 0x0000(0x0058)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Temporary;                                         // 0x0058(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        Children;                                          // 0x0060(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Footer_Entry_C*                    CallFunc_Create_ReturnValue;                       // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x00B0(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(WBP_Footer_C_AddEntryInternal) == 0x000008, "Wrong alignment on WBP_Footer_C_AddEntryInternal");
static_assert(sizeof(WBP_Footer_C_AddEntryInternal) == 0x0000C0, "Wrong size on WBP_Footer_C_AddEntryInternal");
static_assert(offsetof(WBP_Footer_C_AddEntryInternal, FooterData) == 0x000000, "Member 'WBP_Footer_C_AddEntryInternal::FooterData' has a wrong offset!");
static_assert(offsetof(WBP_Footer_C_AddEntryInternal, Temporary) == 0x000058, "Member 'WBP_Footer_C_AddEntryInternal::Temporary' has a wrong offset!");
static_assert(offsetof(WBP_Footer_C_AddEntryInternal, Children) == 0x000060, "Member 'WBP_Footer_C_AddEntryInternal::Children' has a wrong offset!");
static_assert(offsetof(WBP_Footer_C_AddEntryInternal, Temp_int_Array_Index_Variable) == 0x000070, "Member 'WBP_Footer_C_AddEntryInternal::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Footer_C_AddEntryInternal, Temp_int_Loop_Counter_Variable) == 0x000074, "Member 'WBP_Footer_C_AddEntryInternal::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Footer_C_AddEntryInternal, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'WBP_Footer_C_AddEntryInternal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Footer_C_AddEntryInternal, CallFunc_Array_Get_Item) == 0x000080, "Member 'WBP_Footer_C_AddEntryInternal::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Footer_C_AddEntryInternal, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'WBP_Footer_C_AddEntryInternal::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Footer_C_AddEntryInternal, CallFunc_Create_ReturnValue) == 0x000090, "Member 'WBP_Footer_C_AddEntryInternal::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Footer_C_AddEntryInternal, CallFunc_Less_IntInt_ReturnValue) == 0x000098, "Member 'WBP_Footer_C_AddEntryInternal::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Footer_C_AddEntryInternal, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x0000A0, "Member 'WBP_Footer_C_AddEntryInternal::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Footer_C_AddEntryInternal, CallFunc_Array_Add_ReturnValue) == 0x0000A8, "Member 'WBP_Footer_C_AddEntryInternal::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Footer_C_AddEntryInternal, CallFunc_GetAllChildren_ReturnValue) == 0x0000B0, "Member 'WBP_Footer_C_AddEntryInternal::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");

// Function WBP_Footer.WBP_Footer_C.ClearAllEntries
// 0x0002 (0x0002 - 0x0000)
struct WBP_Footer_C_ClearAllEntries final
{
public:
	bool                                          CallFunc_RemoveChildAt_ReturnValue;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyChildren_ReturnValue;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Footer_C_ClearAllEntries) == 0x000001, "Wrong alignment on WBP_Footer_C_ClearAllEntries");
static_assert(sizeof(WBP_Footer_C_ClearAllEntries) == 0x000002, "Wrong size on WBP_Footer_C_ClearAllEntries");
static_assert(offsetof(WBP_Footer_C_ClearAllEntries, CallFunc_RemoveChildAt_ReturnValue) == 0x000000, "Member 'WBP_Footer_C_ClearAllEntries::CallFunc_RemoveChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Footer_C_ClearAllEntries, CallFunc_HasAnyChildren_ReturnValue) == 0x000001, "Member 'WBP_Footer_C_ClearAllEntries::CallFunc_HasAnyChildren_ReturnValue' has a wrong offset!");

// Function WBP_Footer.WBP_Footer_C.ClearEntries
// 0x0001 (0x0001 - 0x0000)
struct WBP_Footer_C_ClearEntries final
{
public:
	bool                                          bTemporaryOnly;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Footer_C_ClearEntries) == 0x000001, "Wrong alignment on WBP_Footer_C_ClearEntries");
static_assert(sizeof(WBP_Footer_C_ClearEntries) == 0x000001, "Wrong size on WBP_Footer_C_ClearEntries");
static_assert(offsetof(WBP_Footer_C_ClearEntries, bTemporaryOnly) == 0x000000, "Member 'WBP_Footer_C_ClearEntries::bTemporaryOnly' has a wrong offset!");

// Function WBP_Footer.WBP_Footer_C.ClearTemporaryEntries
// 0x0020 (0x0020 - 0x0000)
struct WBP_Footer_C_ClearTemporaryEntries final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Footer_Entry_C*                    CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Footer_C_ClearTemporaryEntries) == 0x000008, "Wrong alignment on WBP_Footer_C_ClearTemporaryEntries");
static_assert(sizeof(WBP_Footer_C_ClearTemporaryEntries) == 0x000020, "Wrong size on WBP_Footer_C_ClearTemporaryEntries");
static_assert(offsetof(WBP_Footer_C_ClearTemporaryEntries, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_Footer_C_ClearTemporaryEntries::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Footer_C_ClearTemporaryEntries, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_Footer_C_ClearTemporaryEntries::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Footer_C_ClearTemporaryEntries, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_Footer_C_ClearTemporaryEntries::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Footer_C_ClearTemporaryEntries, CallFunc_Array_Get_Item) == 0x000010, "Member 'WBP_Footer_C_ClearTemporaryEntries::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Footer_C_ClearTemporaryEntries, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'WBP_Footer_C_ClearTemporaryEntries::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Footer_C_ClearTemporaryEntries, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'WBP_Footer_C_ClearTemporaryEntries::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_Footer.WBP_Footer_C.ExecuteUbergraph_WBP_Footer
// 0x00A0 (0x00A0 - 0x0000)
struct WBP_Footer_C_ExecuteUbergraph_WBP_Footer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bTemporaryOnly;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFooterData>                    K2Node_Event_FooterDataList_1;                     // 0x0010(0x0010)(ConstParm, ReferenceParm)
	bool                                          K2Node_Event_bTemporary_1;                         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFooterData                            K2Node_Event_FooterData;                           // 0x0028(0x0058)(ConstParm)
	bool                                          K2Node_Event_bTemporary;                           // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFooterData>                    K2Node_Event_FooterDataList;                       // 0x0088(0x0010)(ConstParm, ReferenceParm)
	bool                                          K2Node_Event_bVisible;                             // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Footer_C_ExecuteUbergraph_WBP_Footer) == 0x000008, "Wrong alignment on WBP_Footer_C_ExecuteUbergraph_WBP_Footer");
static_assert(sizeof(WBP_Footer_C_ExecuteUbergraph_WBP_Footer) == 0x0000A0, "Wrong size on WBP_Footer_C_ExecuteUbergraph_WBP_Footer");
static_assert(offsetof(WBP_Footer_C_ExecuteUbergraph_WBP_Footer, EntryPoint) == 0x000000, "Member 'WBP_Footer_C_ExecuteUbergraph_WBP_Footer::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Footer_C_ExecuteUbergraph_WBP_Footer, Temp_bool_Variable) == 0x000004, "Member 'WBP_Footer_C_ExecuteUbergraph_WBP_Footer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Footer_C_ExecuteUbergraph_WBP_Footer, Temp_byte_Variable) == 0x000005, "Member 'WBP_Footer_C_ExecuteUbergraph_WBP_Footer::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Footer_C_ExecuteUbergraph_WBP_Footer, Temp_byte_Variable_1) == 0x000006, "Member 'WBP_Footer_C_ExecuteUbergraph_WBP_Footer::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Footer_C_ExecuteUbergraph_WBP_Footer, K2Node_Event_IsDesignTime) == 0x000007, "Member 'WBP_Footer_C_ExecuteUbergraph_WBP_Footer::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_Footer_C_ExecuteUbergraph_WBP_Footer, K2Node_Event_bTemporaryOnly) == 0x000008, "Member 'WBP_Footer_C_ExecuteUbergraph_WBP_Footer::K2Node_Event_bTemporaryOnly' has a wrong offset!");
static_assert(offsetof(WBP_Footer_C_ExecuteUbergraph_WBP_Footer, K2Node_Event_FooterDataList_1) == 0x000010, "Member 'WBP_Footer_C_ExecuteUbergraph_WBP_Footer::K2Node_Event_FooterDataList_1' has a wrong offset!");
static_assert(offsetof(WBP_Footer_C_ExecuteUbergraph_WBP_Footer, K2Node_Event_bTemporary_1) == 0x000020, "Member 'WBP_Footer_C_ExecuteUbergraph_WBP_Footer::K2Node_Event_bTemporary_1' has a wrong offset!");
static_assert(offsetof(WBP_Footer_C_ExecuteUbergraph_WBP_Footer, K2Node_Event_FooterData) == 0x000028, "Member 'WBP_Footer_C_ExecuteUbergraph_WBP_Footer::K2Node_Event_FooterData' has a wrong offset!");
static_assert(offsetof(WBP_Footer_C_ExecuteUbergraph_WBP_Footer, K2Node_Event_bTemporary) == 0x000080, "Member 'WBP_Footer_C_ExecuteUbergraph_WBP_Footer::K2Node_Event_bTemporary' has a wrong offset!");
static_assert(offsetof(WBP_Footer_C_ExecuteUbergraph_WBP_Footer, K2Node_Event_FooterDataList) == 0x000088, "Member 'WBP_Footer_C_ExecuteUbergraph_WBP_Footer::K2Node_Event_FooterDataList' has a wrong offset!");
static_assert(offsetof(WBP_Footer_C_ExecuteUbergraph_WBP_Footer, K2Node_Event_bVisible) == 0x000098, "Member 'WBP_Footer_C_ExecuteUbergraph_WBP_Footer::K2Node_Event_bVisible' has a wrong offset!");
static_assert(offsetof(WBP_Footer_C_ExecuteUbergraph_WBP_Footer, K2Node_Select_Default) == 0x000099, "Member 'WBP_Footer_C_ExecuteUbergraph_WBP_Footer::K2Node_Select_Default' has a wrong offset!");

// Function WBP_Footer.WBP_Footer_C.InitializeWithEntries
// 0x0010 (0x0010 - 0x0000)
struct WBP_Footer_C_InitializeWithEntries final
{
public:
	TArray<struct FFooterData>                    FooterDataArray;                                   // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_Footer_C_InitializeWithEntries) == 0x000008, "Wrong alignment on WBP_Footer_C_InitializeWithEntries");
static_assert(sizeof(WBP_Footer_C_InitializeWithEntries) == 0x000010, "Wrong size on WBP_Footer_C_InitializeWithEntries");
static_assert(offsetof(WBP_Footer_C_InitializeWithEntries, FooterDataArray) == 0x000000, "Member 'WBP_Footer_C_InitializeWithEntries::FooterDataArray' has a wrong offset!");

// Function WBP_Footer.WBP_Footer_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_Footer_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Footer_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_Footer_C_PreConstruct");
static_assert(sizeof(WBP_Footer_C_PreConstruct) == 0x000001, "Wrong size on WBP_Footer_C_PreConstruct");
static_assert(offsetof(WBP_Footer_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_Footer_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_Footer.WBP_Footer_C.SetEntriesVisible
// 0x0001 (0x0001 - 0x0000)
struct WBP_Footer_C_SetEntriesVisible final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Footer_C_SetEntriesVisible) == 0x000001, "Wrong alignment on WBP_Footer_C_SetEntriesVisible");
static_assert(sizeof(WBP_Footer_C_SetEntriesVisible) == 0x000001, "Wrong size on WBP_Footer_C_SetEntriesVisible");
static_assert(offsetof(WBP_Footer_C_SetEntriesVisible, bVisible) == 0x000000, "Member 'WBP_Footer_C_SetEntriesVisible::bVisible' has a wrong offset!");

// Function WBP_Footer.WBP_Footer_C.Setup
// 0x0010 (0x0010 - 0x0000)
struct WBP_Footer_C_Setup final
{
public:
	TArray<struct FFooterData>                    FooterDataList;                                    // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_Footer_C_Setup) == 0x000008, "Wrong alignment on WBP_Footer_C_Setup");
static_assert(sizeof(WBP_Footer_C_Setup) == 0x000010, "Wrong size on WBP_Footer_C_Setup");
static_assert(offsetof(WBP_Footer_C_Setup, FooterDataList) == 0x000000, "Member 'WBP_Footer_C_Setup::FooterDataList' has a wrong offset!");

}

