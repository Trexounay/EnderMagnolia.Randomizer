#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EventSystem

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "EventSystem_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function EventSystem.EventAction.OnUpdateAction
// 0x0004 (0x0004 - 0x0000)
struct EventAction_OnUpdateAction final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EventAction_OnUpdateAction) == 0x000004, "Wrong alignment on EventAction_OnUpdateAction");
static_assert(sizeof(EventAction_OnUpdateAction) == 0x000004, "Wrong size on EventAction_OnUpdateAction");
static_assert(offsetof(EventAction_OnUpdateAction, DeltaTime) == 0x000000, "Member 'EventAction_OnUpdateAction::DeltaTime' has a wrong offset!");

// Function EventSystem.EventAction.GetContext
// 0x0008 (0x0008 - 0x0000)
struct EventAction_GetContext final
{
public:
	class UEventContext*                          ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EventAction_GetContext) == 0x000008, "Wrong alignment on EventAction_GetContext");
static_assert(sizeof(EventAction_GetContext) == 0x000008, "Wrong size on EventAction_GetContext");
static_assert(offsetof(EventAction_GetContext, ReturnValue) == 0x000000, "Member 'EventAction_GetContext::ReturnValue' has a wrong offset!");

// Function EventSystem.EventAction_SubjectBinding.GetSubject
// 0x0008 (0x0008 - 0x0000)
struct EventAction_SubjectBinding_GetSubject final
{
public:
	class AActor*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EventAction_SubjectBinding_GetSubject) == 0x000008, "Wrong alignment on EventAction_SubjectBinding_GetSubject");
static_assert(sizeof(EventAction_SubjectBinding_GetSubject) == 0x000008, "Wrong size on EventAction_SubjectBinding_GetSubject");
static_assert(offsetof(EventAction_SubjectBinding_GetSubject, ReturnValue) == 0x000000, "Member 'EventAction_SubjectBinding_GetSubject::ReturnValue' has a wrong offset!");

// Function EventSystem.EventAction_SubjectBinding.GetSubjectName
// 0x0010 (0x0010 - 0x0000)
struct EventAction_SubjectBinding_GetSubjectName final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(EventAction_SubjectBinding_GetSubjectName) == 0x000008, "Wrong alignment on EventAction_SubjectBinding_GetSubjectName");
static_assert(sizeof(EventAction_SubjectBinding_GetSubjectName) == 0x000010, "Wrong size on EventAction_SubjectBinding_GetSubjectName");
static_assert(offsetof(EventAction_SubjectBinding_GetSubjectName, ReturnValue) == 0x000000, "Member 'EventAction_SubjectBinding_GetSubjectName::ReturnValue' has a wrong offset!");

// Function EventSystem.EventAsset.GetDialogueVersion
// 0x0004 (0x0004 - 0x0000)
struct EventAsset_GetDialogueVersion final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EventAsset_GetDialogueVersion) == 0x000004, "Wrong alignment on EventAsset_GetDialogueVersion");
static_assert(sizeof(EventAsset_GetDialogueVersion) == 0x000004, "Wrong size on EventAsset_GetDialogueVersion");
static_assert(offsetof(EventAsset_GetDialogueVersion, ReturnValue) == 0x000000, "Member 'EventAsset_GetDialogueVersion::ReturnValue' has a wrong offset!");

// Function EventSystem.EventBindingProxyInterface.GetBindingActor
// 0x0008 (0x0008 - 0x0000)
struct EventBindingProxyInterface_GetBindingActor final
{
public:
	class AActor*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EventBindingProxyInterface_GetBindingActor) == 0x000008, "Wrong alignment on EventBindingProxyInterface_GetBindingActor");
static_assert(sizeof(EventBindingProxyInterface_GetBindingActor) == 0x000008, "Wrong size on EventBindingProxyInterface_GetBindingActor");
static_assert(offsetof(EventBindingProxyInterface_GetBindingActor, ReturnValue) == 0x000000, "Member 'EventBindingProxyInterface_GetBindingActor::ReturnValue' has a wrong offset!");

// Function EventSystem.EventCondition.Evaluate
// 0x0010 (0x0010 - 0x0000)
struct EventCondition_Evaluate final
{
public:
	class UEventContext*                          Context;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(EventCondition_Evaluate) == 0x000008, "Wrong alignment on EventCondition_Evaluate");
static_assert(sizeof(EventCondition_Evaluate) == 0x000010, "Wrong size on EventCondition_Evaluate");
static_assert(offsetof(EventCondition_Evaluate, Context) == 0x000000, "Member 'EventCondition_Evaluate::Context' has a wrong offset!");
static_assert(offsetof(EventCondition_Evaluate, ReturnValue) == 0x000008, "Member 'EventCondition_Evaluate::ReturnValue' has a wrong offset!");

// Function EventSystem.EventContext.SetValueBoolean
// 0x000C (0x000C - 0x0000)
struct EventContext_SetValueBoolean final
{
public:
	class FName                                   Key;                                               // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Value;                                             // 0x0008(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(EventContext_SetValueBoolean) == 0x000004, "Wrong alignment on EventContext_SetValueBoolean");
static_assert(sizeof(EventContext_SetValueBoolean) == 0x00000C, "Wrong size on EventContext_SetValueBoolean");
static_assert(offsetof(EventContext_SetValueBoolean, Key) == 0x000000, "Member 'EventContext_SetValueBoolean::Key' has a wrong offset!");
static_assert(offsetof(EventContext_SetValueBoolean, Value) == 0x000008, "Member 'EventContext_SetValueBoolean::Value' has a wrong offset!");

// Function EventSystem.EventContext.SetValueInteger
// 0x000C (0x000C - 0x0000)
struct EventContext_SetValueInteger final
{
public:
	class FName                                   Key;                                               // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Value;                                             // 0x0008(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EventContext_SetValueInteger) == 0x000004, "Wrong alignment on EventContext_SetValueInteger");
static_assert(sizeof(EventContext_SetValueInteger) == 0x00000C, "Wrong size on EventContext_SetValueInteger");
static_assert(offsetof(EventContext_SetValueInteger, Key) == 0x000000, "Member 'EventContext_SetValueInteger::Key' has a wrong offset!");
static_assert(offsetof(EventContext_SetValueInteger, Value) == 0x000008, "Member 'EventContext_SetValueInteger::Value' has a wrong offset!");

// Function EventSystem.EventContext.SetValueName
// 0x0010 (0x0010 - 0x0000)
struct EventContext_SetValueName final
{
public:
	class FName                                   Key;                                               // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Value;                                             // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EventContext_SetValueName) == 0x000004, "Wrong alignment on EventContext_SetValueName");
static_assert(sizeof(EventContext_SetValueName) == 0x000010, "Wrong size on EventContext_SetValueName");
static_assert(offsetof(EventContext_SetValueName, Key) == 0x000000, "Member 'EventContext_SetValueName::Key' has a wrong offset!");
static_assert(offsetof(EventContext_SetValueName, Value) == 0x000008, "Member 'EventContext_SetValueName::Value' has a wrong offset!");

// Function EventSystem.EventContext.SetValueObject
// 0x0010 (0x0010 - 0x0000)
struct EventContext_SetValueObject final
{
public:
	class FName                                   Key;                                               // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                Value;                                             // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EventContext_SetValueObject) == 0x000008, "Wrong alignment on EventContext_SetValueObject");
static_assert(sizeof(EventContext_SetValueObject) == 0x000010, "Wrong size on EventContext_SetValueObject");
static_assert(offsetof(EventContext_SetValueObject, Key) == 0x000000, "Member 'EventContext_SetValueObject::Key' has a wrong offset!");
static_assert(offsetof(EventContext_SetValueObject, Value) == 0x000008, "Member 'EventContext_SetValueObject::Value' has a wrong offset!");

// Function EventSystem.EventContext.SetValueRowHandle
// 0x0018 (0x0018 - 0x0000)
struct EventContext_SetValueRowHandle final
{
public:
	class FName                                   Key;                                               // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    Value;                                             // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(EventContext_SetValueRowHandle) == 0x000008, "Wrong alignment on EventContext_SetValueRowHandle");
static_assert(sizeof(EventContext_SetValueRowHandle) == 0x000018, "Wrong size on EventContext_SetValueRowHandle");
static_assert(offsetof(EventContext_SetValueRowHandle, Key) == 0x000000, "Member 'EventContext_SetValueRowHandle::Key' has a wrong offset!");
static_assert(offsetof(EventContext_SetValueRowHandle, Value) == 0x000008, "Member 'EventContext_SetValueRowHandle::Value' has a wrong offset!");

// Function EventSystem.EventContext.GetActorForBinding
// 0x0010 (0x0010 - 0x0000)
struct EventContext_GetActorForBinding final
{
public:
	class FName                                   ActorBinding;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EventContext_GetActorForBinding) == 0x000008, "Wrong alignment on EventContext_GetActorForBinding");
static_assert(sizeof(EventContext_GetActorForBinding) == 0x000010, "Wrong size on EventContext_GetActorForBinding");
static_assert(offsetof(EventContext_GetActorForBinding, ActorBinding) == 0x000000, "Member 'EventContext_GetActorForBinding::ActorBinding' has a wrong offset!");
static_assert(offsetof(EventContext_GetActorForBinding, ReturnValue) == 0x000008, "Member 'EventContext_GetActorForBinding::ReturnValue' has a wrong offset!");

// Function EventSystem.EventContext.GetEventAsset
// 0x0008 (0x0008 - 0x0000)
struct EventContext_GetEventAsset final
{
public:
	class UEventAsset*                            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EventContext_GetEventAsset) == 0x000008, "Wrong alignment on EventContext_GetEventAsset");
static_assert(sizeof(EventContext_GetEventAsset) == 0x000008, "Wrong size on EventContext_GetEventAsset");
static_assert(offsetof(EventContext_GetEventAsset, ReturnValue) == 0x000000, "Member 'EventContext_GetEventAsset::ReturnValue' has a wrong offset!");

// Function EventSystem.EventContext.GetEventCamera
// 0x0008 (0x0008 - 0x0000)
struct EventContext_GetEventCamera final
{
public:
	class AEventCamera*                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EventContext_GetEventCamera) == 0x000008, "Wrong alignment on EventContext_GetEventCamera");
static_assert(sizeof(EventContext_GetEventCamera) == 0x000008, "Wrong size on EventContext_GetEventCamera");
static_assert(offsetof(EventContext_GetEventCamera, ReturnValue) == 0x000000, "Member 'EventContext_GetEventCamera::ReturnValue' has a wrong offset!");

// Function EventSystem.EventContext.GetEventUI
// 0x0008 (0x0008 - 0x0000)
struct EventContext_GetEventUI final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EventContext_GetEventUI) == 0x000008, "Wrong alignment on EventContext_GetEventUI");
static_assert(sizeof(EventContext_GetEventUI) == 0x000008, "Wrong size on EventContext_GetEventUI");
static_assert(offsetof(EventContext_GetEventUI, ReturnValue) == 0x000000, "Member 'EventContext_GetEventUI::ReturnValue' has a wrong offset!");

// Function EventSystem.EventContext.GetGameViewTarget
// 0x0008 (0x0008 - 0x0000)
struct EventContext_GetGameViewTarget final
{
public:
	class AActor*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EventContext_GetGameViewTarget) == 0x000008, "Wrong alignment on EventContext_GetGameViewTarget");
static_assert(sizeof(EventContext_GetGameViewTarget) == 0x000008, "Wrong size on EventContext_GetGameViewTarget");
static_assert(offsetof(EventContext_GetGameViewTarget, ReturnValue) == 0x000000, "Member 'EventContext_GetGameViewTarget::ReturnValue' has a wrong offset!");

// Function EventSystem.EventContext.GetPlayerController
// 0x0008 (0x0008 - 0x0000)
struct EventContext_GetPlayerController final
{
public:
	class APlayerController*                      ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EventContext_GetPlayerController) == 0x000008, "Wrong alignment on EventContext_GetPlayerController");
static_assert(sizeof(EventContext_GetPlayerController) == 0x000008, "Wrong size on EventContext_GetPlayerController");
static_assert(offsetof(EventContext_GetPlayerController, ReturnValue) == 0x000000, "Member 'EventContext_GetPlayerController::ReturnValue' has a wrong offset!");

// Function EventSystem.EventContext.GetPlayerPawn
// 0x0008 (0x0008 - 0x0000)
struct EventContext_GetPlayerPawn final
{
public:
	class APawn*                                  ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EventContext_GetPlayerPawn) == 0x000008, "Wrong alignment on EventContext_GetPlayerPawn");
static_assert(sizeof(EventContext_GetPlayerPawn) == 0x000008, "Wrong size on EventContext_GetPlayerPawn");
static_assert(offsetof(EventContext_GetPlayerPawn, ReturnValue) == 0x000000, "Member 'EventContext_GetPlayerPawn::ReturnValue' has a wrong offset!");

// Function EventSystem.EventContext.GetValueBoolean
// 0x000C (0x000C - 0x0000)
struct EventContext_GetValueBoolean final
{
public:
	class FName                                   Key;                                               // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          DefaultValue;                                      // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(EventContext_GetValueBoolean) == 0x000004, "Wrong alignment on EventContext_GetValueBoolean");
static_assert(sizeof(EventContext_GetValueBoolean) == 0x00000C, "Wrong size on EventContext_GetValueBoolean");
static_assert(offsetof(EventContext_GetValueBoolean, Key) == 0x000000, "Member 'EventContext_GetValueBoolean::Key' has a wrong offset!");
static_assert(offsetof(EventContext_GetValueBoolean, DefaultValue) == 0x000008, "Member 'EventContext_GetValueBoolean::DefaultValue' has a wrong offset!");
static_assert(offsetof(EventContext_GetValueBoolean, ReturnValue) == 0x000009, "Member 'EventContext_GetValueBoolean::ReturnValue' has a wrong offset!");

// Function EventSystem.EventContext.GetValueInteger
// 0x0010 (0x0010 - 0x0000)
struct EventContext_GetValueInteger final
{
public:
	class FName                                   Key;                                               // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DefaultValue;                                      // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EventContext_GetValueInteger) == 0x000004, "Wrong alignment on EventContext_GetValueInteger");
static_assert(sizeof(EventContext_GetValueInteger) == 0x000010, "Wrong size on EventContext_GetValueInteger");
static_assert(offsetof(EventContext_GetValueInteger, Key) == 0x000000, "Member 'EventContext_GetValueInteger::Key' has a wrong offset!");
static_assert(offsetof(EventContext_GetValueInteger, DefaultValue) == 0x000008, "Member 'EventContext_GetValueInteger::DefaultValue' has a wrong offset!");
static_assert(offsetof(EventContext_GetValueInteger, ReturnValue) == 0x00000C, "Member 'EventContext_GetValueInteger::ReturnValue' has a wrong offset!");

// Function EventSystem.EventContext.GetValueName
// 0x0018 (0x0018 - 0x0000)
struct EventContext_GetValueName final
{
public:
	class FName                                   Key;                                               // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   DefaultValue;                                      // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EventContext_GetValueName) == 0x000004, "Wrong alignment on EventContext_GetValueName");
static_assert(sizeof(EventContext_GetValueName) == 0x000018, "Wrong size on EventContext_GetValueName");
static_assert(offsetof(EventContext_GetValueName, Key) == 0x000000, "Member 'EventContext_GetValueName::Key' has a wrong offset!");
static_assert(offsetof(EventContext_GetValueName, DefaultValue) == 0x000008, "Member 'EventContext_GetValueName::DefaultValue' has a wrong offset!");
static_assert(offsetof(EventContext_GetValueName, ReturnValue) == 0x000010, "Member 'EventContext_GetValueName::ReturnValue' has a wrong offset!");

// Function EventSystem.EventContext.GetValueObject
// 0x0018 (0x0018 - 0x0000)
struct EventContext_GetValueObject final
{
public:
	class FName                                   Key;                                               // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                DefaultValue;                                      // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EventContext_GetValueObject) == 0x000008, "Wrong alignment on EventContext_GetValueObject");
static_assert(sizeof(EventContext_GetValueObject) == 0x000018, "Wrong size on EventContext_GetValueObject");
static_assert(offsetof(EventContext_GetValueObject, Key) == 0x000000, "Member 'EventContext_GetValueObject::Key' has a wrong offset!");
static_assert(offsetof(EventContext_GetValueObject, DefaultValue) == 0x000008, "Member 'EventContext_GetValueObject::DefaultValue' has a wrong offset!");
static_assert(offsetof(EventContext_GetValueObject, ReturnValue) == 0x000010, "Member 'EventContext_GetValueObject::ReturnValue' has a wrong offset!");

// Function EventSystem.EventContext.GetValueRowHandle
// 0x0028 (0x0028 - 0x0000)
struct EventContext_GetValueRowHandle final
{
public:
	class FName                                   Key;                                               // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    DefaultValue;                                      // 0x0008(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(EventContext_GetValueRowHandle) == 0x000008, "Wrong alignment on EventContext_GetValueRowHandle");
static_assert(sizeof(EventContext_GetValueRowHandle) == 0x000028, "Wrong size on EventContext_GetValueRowHandle");
static_assert(offsetof(EventContext_GetValueRowHandle, Key) == 0x000000, "Member 'EventContext_GetValueRowHandle::Key' has a wrong offset!");
static_assert(offsetof(EventContext_GetValueRowHandle, DefaultValue) == 0x000008, "Member 'EventContext_GetValueRowHandle::DefaultValue' has a wrong offset!");
static_assert(offsetof(EventContext_GetValueRowHandle, ReturnValue) == 0x000018, "Member 'EventContext_GetValueRowHandle::ReturnValue' has a wrong offset!");

// Function EventSystem.EventContext.IsValueBooleanSet
// 0x000C (0x000C - 0x0000)
struct EventContext_IsValueBooleanSet final
{
public:
	class FName                                   Key;                                               // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(EventContext_IsValueBooleanSet) == 0x000004, "Wrong alignment on EventContext_IsValueBooleanSet");
static_assert(sizeof(EventContext_IsValueBooleanSet) == 0x00000C, "Wrong size on EventContext_IsValueBooleanSet");
static_assert(offsetof(EventContext_IsValueBooleanSet, Key) == 0x000000, "Member 'EventContext_IsValueBooleanSet::Key' has a wrong offset!");
static_assert(offsetof(EventContext_IsValueBooleanSet, ReturnValue) == 0x000008, "Member 'EventContext_IsValueBooleanSet::ReturnValue' has a wrong offset!");

// Function EventSystem.EventContext.IsValueIntegerSet
// 0x000C (0x000C - 0x0000)
struct EventContext_IsValueIntegerSet final
{
public:
	class FName                                   Key;                                               // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(EventContext_IsValueIntegerSet) == 0x000004, "Wrong alignment on EventContext_IsValueIntegerSet");
static_assert(sizeof(EventContext_IsValueIntegerSet) == 0x00000C, "Wrong size on EventContext_IsValueIntegerSet");
static_assert(offsetof(EventContext_IsValueIntegerSet, Key) == 0x000000, "Member 'EventContext_IsValueIntegerSet::Key' has a wrong offset!");
static_assert(offsetof(EventContext_IsValueIntegerSet, ReturnValue) == 0x000008, "Member 'EventContext_IsValueIntegerSet::ReturnValue' has a wrong offset!");

// Function EventSystem.EventContext.IsValueObjectSet
// 0x000C (0x000C - 0x0000)
struct EventContext_IsValueObjectSet final
{
public:
	class FName                                   Key;                                               // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(EventContext_IsValueObjectSet) == 0x000004, "Wrong alignment on EventContext_IsValueObjectSet");
static_assert(sizeof(EventContext_IsValueObjectSet) == 0x00000C, "Wrong size on EventContext_IsValueObjectSet");
static_assert(offsetof(EventContext_IsValueObjectSet, Key) == 0x000000, "Member 'EventContext_IsValueObjectSet::Key' has a wrong offset!");
static_assert(offsetof(EventContext_IsValueObjectSet, ReturnValue) == 0x000008, "Member 'EventContext_IsValueObjectSet::ReturnValue' has a wrong offset!");

// Function EventSystem.EventContext.IsValueRowHandleSet
// 0x000C (0x000C - 0x0000)
struct EventContext_IsValueRowHandleSet final
{
public:
	class FName                                   Key;                                               // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(EventContext_IsValueRowHandleSet) == 0x000004, "Wrong alignment on EventContext_IsValueRowHandleSet");
static_assert(sizeof(EventContext_IsValueRowHandleSet) == 0x00000C, "Wrong size on EventContext_IsValueRowHandleSet");
static_assert(offsetof(EventContext_IsValueRowHandleSet, Key) == 0x000000, "Member 'EventContext_IsValueRowHandleSet::Key' has a wrong offset!");
static_assert(offsetof(EventContext_IsValueRowHandleSet, ReturnValue) == 0x000008, "Member 'EventContext_IsValueRowHandleSet::ReturnValue' has a wrong offset!");

// Function EventSystem.EventContextAccessorInterface.SetEventContext
// 0x0008 (0x0008 - 0x0000)
struct EventContextAccessorInterface_SetEventContext final
{
public:
	class UEventContext*                          InEventContext;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EventContextAccessorInterface_SetEventContext) == 0x000008, "Wrong alignment on EventContextAccessorInterface_SetEventContext");
static_assert(sizeof(EventContextAccessorInterface_SetEventContext) == 0x000008, "Wrong size on EventContextAccessorInterface_SetEventContext");
static_assert(offsetof(EventContextAccessorInterface_SetEventContext, InEventContext) == 0x000000, "Member 'EventContextAccessorInterface_SetEventContext::InEventContext' has a wrong offset!");

// Function EventSystem.EventPlayer.CreateEventPlayer
// 0x0010 (0x0010 - 0x0000)
struct EventPlayer_CreateEventPlayer final
{
public:
	class AActor*                                 Owner;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UEventPlayer*                           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EventPlayer_CreateEventPlayer) == 0x000008, "Wrong alignment on EventPlayer_CreateEventPlayer");
static_assert(sizeof(EventPlayer_CreateEventPlayer) == 0x000010, "Wrong size on EventPlayer_CreateEventPlayer");
static_assert(offsetof(EventPlayer_CreateEventPlayer, Owner) == 0x000000, "Member 'EventPlayer_CreateEventPlayer::Owner' has a wrong offset!");
static_assert(offsetof(EventPlayer_CreateEventPlayer, ReturnValue) == 0x000008, "Member 'EventPlayer_CreateEventPlayer::ReturnValue' has a wrong offset!");

// Function EventSystem.EventPlayer.OnOwnerEndPlay
// 0x0010 (0x0010 - 0x0000)
struct EventPlayer_OnOwnerEndPlay final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEndPlayReason                                EndPlayReason;                                     // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(EventPlayer_OnOwnerEndPlay) == 0x000008, "Wrong alignment on EventPlayer_OnOwnerEndPlay");
static_assert(sizeof(EventPlayer_OnOwnerEndPlay) == 0x000010, "Wrong size on EventPlayer_OnOwnerEndPlay");
static_assert(offsetof(EventPlayer_OnOwnerEndPlay, Actor) == 0x000000, "Member 'EventPlayer_OnOwnerEndPlay::Actor' has a wrong offset!");
static_assert(offsetof(EventPlayer_OnOwnerEndPlay, EndPlayReason) == 0x000008, "Member 'EventPlayer_OnOwnerEndPlay::EndPlayReason' has a wrong offset!");

// Function EventSystem.EventPlayer.PlayEvent
// 0x01A0 (0x01A0 - 0x0000)
struct EventPlayer_PlayEvent final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UEventAsset*                            InEventAsset;                                      // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FName, class AActor*>              InActorBindings;                                   // 0x0010(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FEventBlackboardInit                   InDefaultValues;                                   // 0x0060(0x0140)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(EventPlayer_PlayEvent) == 0x000008, "Wrong alignment on EventPlayer_PlayEvent");
static_assert(sizeof(EventPlayer_PlayEvent) == 0x0001A0, "Wrong size on EventPlayer_PlayEvent");
static_assert(offsetof(EventPlayer_PlayEvent, PlayerController) == 0x000000, "Member 'EventPlayer_PlayEvent::PlayerController' has a wrong offset!");
static_assert(offsetof(EventPlayer_PlayEvent, InEventAsset) == 0x000008, "Member 'EventPlayer_PlayEvent::InEventAsset' has a wrong offset!");
static_assert(offsetof(EventPlayer_PlayEvent, InActorBindings) == 0x000010, "Member 'EventPlayer_PlayEvent::InActorBindings' has a wrong offset!");
static_assert(offsetof(EventPlayer_PlayEvent, InDefaultValues) == 0x000060, "Member 'EventPlayer_PlayEvent::InDefaultValues' has a wrong offset!");

// Function EventSystem.EventPlayer.GetEventContext
// 0x0008 (0x0008 - 0x0000)
struct EventPlayer_GetEventContext final
{
public:
	class UEventContext*                          ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EventPlayer_GetEventContext) == 0x000008, "Wrong alignment on EventPlayer_GetEventContext");
static_assert(sizeof(EventPlayer_GetEventContext) == 0x000008, "Wrong size on EventPlayer_GetEventContext");
static_assert(offsetof(EventPlayer_GetEventContext, ReturnValue) == 0x000000, "Member 'EventPlayer_GetEventContext::ReturnValue' has a wrong offset!");

// Function EventSystem.EventPlayer.GetState
// 0x0004 (0x0004 - 0x0000)
struct EventPlayer_GetState final
{
public:
	EEventPlayerState                             ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EventPlayer_GetState) == 0x000004, "Wrong alignment on EventPlayer_GetState");
static_assert(sizeof(EventPlayer_GetState) == 0x000004, "Wrong size on EventPlayer_GetState");
static_assert(offsetof(EventPlayer_GetState, ReturnValue) == 0x000000, "Member 'EventPlayer_GetState::ReturnValue' has a wrong offset!");

// Function EventSystem.EventSkipAction.TeleportActorBindingToBinding
// 0x0014 (0x0014 - 0x0000)
struct EventSkipAction_TeleportActorBindingToBinding final
{
public:
	class FName                                   Binding;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TargetBinding;                                     // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOffsetByHalfHeight;                               // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(EventSkipAction_TeleportActorBindingToBinding) == 0x000004, "Wrong alignment on EventSkipAction_TeleportActorBindingToBinding");
static_assert(sizeof(EventSkipAction_TeleportActorBindingToBinding) == 0x000014, "Wrong size on EventSkipAction_TeleportActorBindingToBinding");
static_assert(offsetof(EventSkipAction_TeleportActorBindingToBinding, Binding) == 0x000000, "Member 'EventSkipAction_TeleportActorBindingToBinding::Binding' has a wrong offset!");
static_assert(offsetof(EventSkipAction_TeleportActorBindingToBinding, TargetBinding) == 0x000008, "Member 'EventSkipAction_TeleportActorBindingToBinding::TargetBinding' has a wrong offset!");
static_assert(offsetof(EventSkipAction_TeleportActorBindingToBinding, bOffsetByHalfHeight) == 0x000010, "Member 'EventSkipAction_TeleportActorBindingToBinding::bOffsetByHalfHeight' has a wrong offset!");

// Function EventSystem.EventSkipAction.TeleportActorBindingToTransform
// 0x0080 (0x0080 - 0x0000)
struct EventSkipAction_TeleportActorBindingToTransform final
{
public:
	class FName                                   Binding;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0010(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOffsetByHalfHeight;                               // 0x0070(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_71[0xF];                                       // 0x0071(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(EventSkipAction_TeleportActorBindingToTransform) == 0x000010, "Wrong alignment on EventSkipAction_TeleportActorBindingToTransform");
static_assert(sizeof(EventSkipAction_TeleportActorBindingToTransform) == 0x000080, "Wrong size on EventSkipAction_TeleportActorBindingToTransform");
static_assert(offsetof(EventSkipAction_TeleportActorBindingToTransform, Binding) == 0x000000, "Member 'EventSkipAction_TeleportActorBindingToTransform::Binding' has a wrong offset!");
static_assert(offsetof(EventSkipAction_TeleportActorBindingToTransform, Transform) == 0x000010, "Member 'EventSkipAction_TeleportActorBindingToTransform::Transform' has a wrong offset!");
static_assert(offsetof(EventSkipAction_TeleportActorBindingToTransform, bOffsetByHalfHeight) == 0x000070, "Member 'EventSkipAction_TeleportActorBindingToTransform::bOffsetByHalfHeight' has a wrong offset!");

// Function EventSystem.EventSkipAction.TeleportActorToTransform
// 0x0080 (0x0080 - 0x0000)
struct EventSkipAction_TeleportActorToTransform final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0010(0x0060)(Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOffsetByHalfHeight;                               // 0x0070(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_71[0xF];                                       // 0x0071(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(EventSkipAction_TeleportActorToTransform) == 0x000010, "Wrong alignment on EventSkipAction_TeleportActorToTransform");
static_assert(sizeof(EventSkipAction_TeleportActorToTransform) == 0x000080, "Wrong size on EventSkipAction_TeleportActorToTransform");
static_assert(offsetof(EventSkipAction_TeleportActorToTransform, Actor) == 0x000000, "Member 'EventSkipAction_TeleportActorToTransform::Actor' has a wrong offset!");
static_assert(offsetof(EventSkipAction_TeleportActorToTransform, Transform) == 0x000010, "Member 'EventSkipAction_TeleportActorToTransform::Transform' has a wrong offset!");
static_assert(offsetof(EventSkipAction_TeleportActorToTransform, bOffsetByHalfHeight) == 0x000070, "Member 'EventSkipAction_TeleportActorToTransform::bOffsetByHalfHeight' has a wrong offset!");

// Function EventSystem.EventSkipAction.TeleportPlayerPawnToBinding
// 0x000C (0x000C - 0x0000)
struct EventSkipAction_TeleportPlayerPawnToBinding final
{
public:
	class FName                                   TargetBinding;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOffsetByHalfHeight;                               // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(EventSkipAction_TeleportPlayerPawnToBinding) == 0x000004, "Wrong alignment on EventSkipAction_TeleportPlayerPawnToBinding");
static_assert(sizeof(EventSkipAction_TeleportPlayerPawnToBinding) == 0x00000C, "Wrong size on EventSkipAction_TeleportPlayerPawnToBinding");
static_assert(offsetof(EventSkipAction_TeleportPlayerPawnToBinding, TargetBinding) == 0x000000, "Member 'EventSkipAction_TeleportPlayerPawnToBinding::TargetBinding' has a wrong offset!");
static_assert(offsetof(EventSkipAction_TeleportPlayerPawnToBinding, bOffsetByHalfHeight) == 0x000008, "Member 'EventSkipAction_TeleportPlayerPawnToBinding::bOffsetByHalfHeight' has a wrong offset!");

// Function EventSystem.EventSkipAction.GetContext
// 0x0008 (0x0008 - 0x0000)
struct EventSkipAction_GetContext final
{
public:
	class UEventContext*                          ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EventSkipAction_GetContext) == 0x000008, "Wrong alignment on EventSkipAction_GetContext");
static_assert(sizeof(EventSkipAction_GetContext) == 0x000008, "Wrong size on EventSkipAction_GetContext");
static_assert(offsetof(EventSkipAction_GetContext, ReturnValue) == 0x000000, "Member 'EventSkipAction_GetContext::ReturnValue' has a wrong offset!");

}

