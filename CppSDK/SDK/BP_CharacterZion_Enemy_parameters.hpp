#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CharacterZion_Enemy

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_CharacterZion_Enemy.BP_CharacterZion_Enemy_C.ExecuteUbergraph_BP_CharacterZion_Enemy
// 0x0010 (0x0010 - 0x0000)
struct BP_CharacterZion_Enemy_C_ExecuteUbergraph_BP_CharacterZion_Enemy final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_Event_NewController;                        // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterZion_Enemy_C_ExecuteUbergraph_BP_CharacterZion_Enemy) == 0x000008, "Wrong alignment on BP_CharacterZion_Enemy_C_ExecuteUbergraph_BP_CharacterZion_Enemy");
static_assert(sizeof(BP_CharacterZion_Enemy_C_ExecuteUbergraph_BP_CharacterZion_Enemy) == 0x000010, "Wrong size on BP_CharacterZion_Enemy_C_ExecuteUbergraph_BP_CharacterZion_Enemy");
static_assert(offsetof(BP_CharacterZion_Enemy_C_ExecuteUbergraph_BP_CharacterZion_Enemy, EntryPoint) == 0x000000, "Member 'BP_CharacterZion_Enemy_C_ExecuteUbergraph_BP_CharacterZion_Enemy::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CharacterZion_Enemy_C_ExecuteUbergraph_BP_CharacterZion_Enemy, K2Node_Event_NewController) == 0x000008, "Member 'BP_CharacterZion_Enemy_C_ExecuteUbergraph_BP_CharacterZion_Enemy::K2Node_Event_NewController' has a wrong offset!");

// Function BP_CharacterZion_Enemy.BP_CharacterZion_Enemy_C.GetFindEnemyCommandClass
// 0x0008 (0x0008 - 0x0000)
struct BP_CharacterZion_Enemy_C_GetFindEnemyCommandClass final
{
public:
	TSubclassOf<class UCommand>                   out_CommandClass;                                  // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterZion_Enemy_C_GetFindEnemyCommandClass) == 0x000008, "Wrong alignment on BP_CharacterZion_Enemy_C_GetFindEnemyCommandClass");
static_assert(sizeof(BP_CharacterZion_Enemy_C_GetFindEnemyCommandClass) == 0x000008, "Wrong size on BP_CharacterZion_Enemy_C_GetFindEnemyCommandClass");
static_assert(offsetof(BP_CharacterZion_Enemy_C_GetFindEnemyCommandClass, out_CommandClass) == 0x000000, "Member 'BP_CharacterZion_Enemy_C_GetFindEnemyCommandClass::out_CommandClass' has a wrong offset!");

// Function BP_CharacterZion_Enemy.BP_CharacterZion_Enemy_C.GetIdlePeaceCommandClass
// 0x0008 (0x0008 - 0x0000)
struct BP_CharacterZion_Enemy_C_GetIdlePeaceCommandClass final
{
public:
	TSubclassOf<class UCommand>                   out_CommandClass;                                  // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterZion_Enemy_C_GetIdlePeaceCommandClass) == 0x000008, "Wrong alignment on BP_CharacterZion_Enemy_C_GetIdlePeaceCommandClass");
static_assert(sizeof(BP_CharacterZion_Enemy_C_GetIdlePeaceCommandClass) == 0x000008, "Wrong size on BP_CharacterZion_Enemy_C_GetIdlePeaceCommandClass");
static_assert(offsetof(BP_CharacterZion_Enemy_C_GetIdlePeaceCommandClass, out_CommandClass) == 0x000000, "Member 'BP_CharacterZion_Enemy_C_GetIdlePeaceCommandClass::out_CommandClass' has a wrong offset!");

// Function BP_CharacterZion_Enemy.BP_CharacterZion_Enemy_C.ReceivePossessed
// 0x0008 (0x0008 - 0x0000)
struct BP_CharacterZion_Enemy_C_ReceivePossessed final
{
public:
	class AController*                            NewController;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterZion_Enemy_C_ReceivePossessed) == 0x000008, "Wrong alignment on BP_CharacterZion_Enemy_C_ReceivePossessed");
static_assert(sizeof(BP_CharacterZion_Enemy_C_ReceivePossessed) == 0x000008, "Wrong size on BP_CharacterZion_Enemy_C_ReceivePossessed");
static_assert(offsetof(BP_CharacterZion_Enemy_C_ReceivePossessed, NewController) == 0x000000, "Member 'BP_CharacterZion_Enemy_C_ReceivePossessed::NewController' has a wrong offset!");

// Function BP_CharacterZion_Enemy.BP_CharacterZion_Enemy_C.TryPlayPreActivationAnimations
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterZion_Enemy_C_TryPlayPreActivationAnimations final
{
public:
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterZion_Enemy_C_TryPlayPreActivationAnimations) == 0x000008, "Wrong alignment on BP_CharacterZion_Enemy_C_TryPlayPreActivationAnimations");
static_assert(sizeof(BP_CharacterZion_Enemy_C_TryPlayPreActivationAnimations) == 0x000018, "Wrong size on BP_CharacterZion_Enemy_C_TryPlayPreActivationAnimations");
static_assert(offsetof(BP_CharacterZion_Enemy_C_TryPlayPreActivationAnimations, CallFunc_GetController_ReturnValue) == 0x000000, "Member 'BP_CharacterZion_Enemy_C_TryPlayPreActivationAnimations::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterZion_Enemy_C_TryPlayPreActivationAnimations, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_CharacterZion_Enemy_C_TryPlayPreActivationAnimations::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterZion_Enemy_C_TryPlayPreActivationAnimations, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_CharacterZion_Enemy_C_TryPlayPreActivationAnimations::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterZion_Enemy_C_TryPlayPreActivationAnimations, CallFunc_Greater_IntInt_ReturnValue) == 0x000010, "Member 'BP_CharacterZion_Enemy_C_TryPlayPreActivationAnimations::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

}

