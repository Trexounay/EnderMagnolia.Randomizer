#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Extra_Costume

#include "Basic.hpp"

#include "Zion_structs.hpp"
#include "Zion_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Extra_Costume.WBP_Extra_Costume_C
// 0x03B0 (0x0810 - 0x0460)
class UWBP_Extra_Costume_C final : public UUserWidgetZion
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0460(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 CheckBox;                                          // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           CostumeEntryContainer;                             // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             FilterName;                                        // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             FilterName_2;                                      // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 HedderBox;                                         // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Checkbox;                                  // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Equipped;                                  // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Locked;                                    // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_NotEquipped;                               // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Completion_C*                      WBP_Completion;                                    // 0x04B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Currency_C*                        WBP_Currency;                                      // 0x04B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Item_Description_C*                WBP_Item_Description;                              // 0x04C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Scrollbox_C*                       WBP_Scrollbox;                                     // 0x04C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_113;                                // 0x04D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(EDifficultyPreset SelectedPreset, const struct FDifficultySettings& SelectedSettings)> OnClosed; // 0x04D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UPlayerCostumeComponent*                PlayerCostumeComponent;                            // 0x04E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FDataTableRowHandle                    SelectedHandle;                                    // 0x04F0(0x0010)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, NoDestructor, AdvancedDisplay)
	TArray<class UWBP_Extra_CostumeEntry_C*>      CostumeEntries;                                    // 0x0500(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FInventoryItemCostumeData              CachedCostumeItemData;                             // 0x0510(0x0278)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UWBP_Extra_CostumeEntry_C*              CachedCostumeEntry;                                // 0x0788(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	struct FSpineAnimationDefinition              PostApplyCostumeAnimation;                         // 0x0790(0x0068)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UFMODEvent*                             SE_BuyConfirm;                                     // 0x07F8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             SE_BuySuccess;                                     // 0x0800(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             SE_BuyFailure;                                     // 0x0808(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

public:
	void ApplyCostume();
	void BuyCostumeData();
	void CacheEquippedCostumeHandle();
	void Construct();
	void ExecuteUbergraph_WBP_Extra_Costume(int32 EntryPoint);
	void GenerateCostumeEntries();
	void OnAddedToFocusPath(const struct FFocusEvent& InFocusEvent);
	void OnConfirmSpendCurrency();
	void OnEntryFocused(class UWBP_Extra_CostumeEntry_C* CostumeEntry);
	void OnEntryPressed(class UWBP_Extra_CostumeEntry_C* CostumeEntry);
	struct FEventReply OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent);
	void RefreshCompletionPercentage();
	void RefreshCostumeInformation();
	void RefreshEntriesPrice();
	void RefreshSelectedCostumeEntries();
	void SpendCurrency(const class FText& ItemName, int32 Cost);

	void CanDisplayCostumeData(const struct FDataTableRowHandle& Handle, bool* bResult) const;
	void IsCostumeOwned(const struct FDataTableRowHandle& CostumeDataRowHandle, bool* IsCostumeOwned_0) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Extra_Costume_C">();
	}
	static class UWBP_Extra_Costume_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Extra_Costume_C>();
	}
};
static_assert(alignof(UWBP_Extra_Costume_C) == 0x000008, "Wrong alignment on UWBP_Extra_Costume_C");
static_assert(sizeof(UWBP_Extra_Costume_C) == 0x000810, "Wrong size on UWBP_Extra_Costume_C");
static_assert(offsetof(UWBP_Extra_Costume_C, UberGraphFrame) == 0x000460, "Member 'UWBP_Extra_Costume_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Extra_Costume_C, CheckBox) == 0x000468, "Member 'UWBP_Extra_Costume_C::CheckBox' has a wrong offset!");
static_assert(offsetof(UWBP_Extra_Costume_C, CostumeEntryContainer) == 0x000470, "Member 'UWBP_Extra_Costume_C::CostumeEntryContainer' has a wrong offset!");
static_assert(offsetof(UWBP_Extra_Costume_C, FilterName) == 0x000478, "Member 'UWBP_Extra_Costume_C::FilterName' has a wrong offset!");
static_assert(offsetof(UWBP_Extra_Costume_C, FilterName_2) == 0x000480, "Member 'UWBP_Extra_Costume_C::FilterName_2' has a wrong offset!");
static_assert(offsetof(UWBP_Extra_Costume_C, HedderBox) == 0x000488, "Member 'UWBP_Extra_Costume_C::HedderBox' has a wrong offset!");
static_assert(offsetof(UWBP_Extra_Costume_C, Overlay_Checkbox) == 0x000490, "Member 'UWBP_Extra_Costume_C::Overlay_Checkbox' has a wrong offset!");
static_assert(offsetof(UWBP_Extra_Costume_C, Overlay_Equipped) == 0x000498, "Member 'UWBP_Extra_Costume_C::Overlay_Equipped' has a wrong offset!");
static_assert(offsetof(UWBP_Extra_Costume_C, Overlay_Locked) == 0x0004A0, "Member 'UWBP_Extra_Costume_C::Overlay_Locked' has a wrong offset!");
static_assert(offsetof(UWBP_Extra_Costume_C, Overlay_NotEquipped) == 0x0004A8, "Member 'UWBP_Extra_Costume_C::Overlay_NotEquipped' has a wrong offset!");
static_assert(offsetof(UWBP_Extra_Costume_C, WBP_Completion) == 0x0004B0, "Member 'UWBP_Extra_Costume_C::WBP_Completion' has a wrong offset!");
static_assert(offsetof(UWBP_Extra_Costume_C, WBP_Currency) == 0x0004B8, "Member 'UWBP_Extra_Costume_C::WBP_Currency' has a wrong offset!");
static_assert(offsetof(UWBP_Extra_Costume_C, WBP_Item_Description) == 0x0004C0, "Member 'UWBP_Extra_Costume_C::WBP_Item_Description' has a wrong offset!");
static_assert(offsetof(UWBP_Extra_Costume_C, WBP_Scrollbox) == 0x0004C8, "Member 'UWBP_Extra_Costume_C::WBP_Scrollbox' has a wrong offset!");
static_assert(offsetof(UWBP_Extra_Costume_C, WidgetSwitcher_113) == 0x0004D0, "Member 'UWBP_Extra_Costume_C::WidgetSwitcher_113' has a wrong offset!");
static_assert(offsetof(UWBP_Extra_Costume_C, OnClosed) == 0x0004D8, "Member 'UWBP_Extra_Costume_C::OnClosed' has a wrong offset!");
static_assert(offsetof(UWBP_Extra_Costume_C, PlayerCostumeComponent) == 0x0004E8, "Member 'UWBP_Extra_Costume_C::PlayerCostumeComponent' has a wrong offset!");
static_assert(offsetof(UWBP_Extra_Costume_C, SelectedHandle) == 0x0004F0, "Member 'UWBP_Extra_Costume_C::SelectedHandle' has a wrong offset!");
static_assert(offsetof(UWBP_Extra_Costume_C, CostumeEntries) == 0x000500, "Member 'UWBP_Extra_Costume_C::CostumeEntries' has a wrong offset!");
static_assert(offsetof(UWBP_Extra_Costume_C, CachedCostumeItemData) == 0x000510, "Member 'UWBP_Extra_Costume_C::CachedCostumeItemData' has a wrong offset!");
static_assert(offsetof(UWBP_Extra_Costume_C, CachedCostumeEntry) == 0x000788, "Member 'UWBP_Extra_Costume_C::CachedCostumeEntry' has a wrong offset!");
static_assert(offsetof(UWBP_Extra_Costume_C, PostApplyCostumeAnimation) == 0x000790, "Member 'UWBP_Extra_Costume_C::PostApplyCostumeAnimation' has a wrong offset!");
static_assert(offsetof(UWBP_Extra_Costume_C, SE_BuyConfirm) == 0x0007F8, "Member 'UWBP_Extra_Costume_C::SE_BuyConfirm' has a wrong offset!");
static_assert(offsetof(UWBP_Extra_Costume_C, SE_BuySuccess) == 0x000800, "Member 'UWBP_Extra_Costume_C::SE_BuySuccess' has a wrong offset!");
static_assert(offsetof(UWBP_Extra_Costume_C, SE_BuyFailure) == 0x000808, "Member 'UWBP_Extra_Costume_C::SE_BuyFailure' has a wrong offset!");

}

