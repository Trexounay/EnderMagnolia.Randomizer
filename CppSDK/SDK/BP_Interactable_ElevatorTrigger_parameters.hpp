#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Interactable_ElevatorTrigger

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_Interactable_ElevatorTrigger.BP_Interactable_ElevatorTrigger_C.ExecuteUbergraph_BP_Interactable_ElevatorTrigger
// 0x0010 (0x0010 - 0x0000)
struct BP_Interactable_ElevatorTrigger_C_ExecuteUbergraph_BP_Interactable_ElevatorTrigger final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMoving_ReturnValue;                     // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_Event_Controller;                           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Interactable_ElevatorTrigger_C_ExecuteUbergraph_BP_Interactable_ElevatorTrigger) == 0x000008, "Wrong alignment on BP_Interactable_ElevatorTrigger_C_ExecuteUbergraph_BP_Interactable_ElevatorTrigger");
static_assert(sizeof(BP_Interactable_ElevatorTrigger_C_ExecuteUbergraph_BP_Interactable_ElevatorTrigger) == 0x000010, "Wrong size on BP_Interactable_ElevatorTrigger_C_ExecuteUbergraph_BP_Interactable_ElevatorTrigger");
static_assert(offsetof(BP_Interactable_ElevatorTrigger_C_ExecuteUbergraph_BP_Interactable_ElevatorTrigger, EntryPoint) == 0x000000, "Member 'BP_Interactable_ElevatorTrigger_C_ExecuteUbergraph_BP_Interactable_ElevatorTrigger::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Interactable_ElevatorTrigger_C_ExecuteUbergraph_BP_Interactable_ElevatorTrigger, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_Interactable_ElevatorTrigger_C_ExecuteUbergraph_BP_Interactable_ElevatorTrigger::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_ElevatorTrigger_C_ExecuteUbergraph_BP_Interactable_ElevatorTrigger, CallFunc_IsMoving_ReturnValue) == 0x000005, "Member 'BP_Interactable_ElevatorTrigger_C_ExecuteUbergraph_BP_Interactable_ElevatorTrigger::CallFunc_IsMoving_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_ElevatorTrigger_C_ExecuteUbergraph_BP_Interactable_ElevatorTrigger, CallFunc_Not_PreBool_ReturnValue) == 0x000006, "Member 'BP_Interactable_ElevatorTrigger_C_ExecuteUbergraph_BP_Interactable_ElevatorTrigger::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Interactable_ElevatorTrigger_C_ExecuteUbergraph_BP_Interactable_ElevatorTrigger, K2Node_Event_Controller) == 0x000008, "Member 'BP_Interactable_ElevatorTrigger_C_ExecuteUbergraph_BP_Interactable_ElevatorTrigger::K2Node_Event_Controller' has a wrong offset!");

// Function BP_Interactable_ElevatorTrigger.BP_Interactable_ElevatorTrigger_C.OnInteract
// 0x0008 (0x0008 - 0x0000)
struct BP_Interactable_ElevatorTrigger_C_OnInteract final
{
public:
	class APlayerController*                      Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Interactable_ElevatorTrigger_C_OnInteract) == 0x000008, "Wrong alignment on BP_Interactable_ElevatorTrigger_C_OnInteract");
static_assert(sizeof(BP_Interactable_ElevatorTrigger_C_OnInteract) == 0x000008, "Wrong size on BP_Interactable_ElevatorTrigger_C_OnInteract");
static_assert(offsetof(BP_Interactable_ElevatorTrigger_C_OnInteract, Controller) == 0x000000, "Member 'BP_Interactable_ElevatorTrigger_C_OnInteract::Controller' has a wrong offset!");

// Function BP_Interactable_ElevatorTrigger.BP_Interactable_ElevatorTrigger_C.SetElevator
// 0x0008 (0x0008 - 0x0000)
struct BP_Interactable_ElevatorTrigger_C_SetElevator final
{
public:
	class AMovingPlatform_Elevator*               Elevator_0;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Interactable_ElevatorTrigger_C_SetElevator) == 0x000008, "Wrong alignment on BP_Interactable_ElevatorTrigger_C_SetElevator");
static_assert(sizeof(BP_Interactable_ElevatorTrigger_C_SetElevator) == 0x000008, "Wrong size on BP_Interactable_ElevatorTrigger_C_SetElevator");
static_assert(offsetof(BP_Interactable_ElevatorTrigger_C_SetElevator, Elevator_0) == 0x000000, "Member 'BP_Interactable_ElevatorTrigger_C_SetElevator::Elevator_0' has a wrong offset!");

// Function BP_Interactable_ElevatorTrigger.BP_Interactable_ElevatorTrigger_C.SetTriggerScale
// 0x0020 (0x0020 - 0x0000)
struct BP_Interactable_ElevatorTrigger_C_SetTriggerScale final
{
public:
	double                                        NewScaleY;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Interactable_ElevatorTrigger_C_SetTriggerScale) == 0x000008, "Wrong alignment on BP_Interactable_ElevatorTrigger_C_SetTriggerScale");
static_assert(sizeof(BP_Interactable_ElevatorTrigger_C_SetTriggerScale) == 0x000020, "Wrong size on BP_Interactable_ElevatorTrigger_C_SetTriggerScale");
static_assert(offsetof(BP_Interactable_ElevatorTrigger_C_SetTriggerScale, NewScaleY) == 0x000000, "Member 'BP_Interactable_ElevatorTrigger_C_SetTriggerScale::NewScaleY' has a wrong offset!");
static_assert(offsetof(BP_Interactable_ElevatorTrigger_C_SetTriggerScale, CallFunc_MakeVector_ReturnValue) == 0x000008, "Member 'BP_Interactable_ElevatorTrigger_C_SetTriggerScale::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

}

