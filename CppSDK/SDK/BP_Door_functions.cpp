#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Door

#include "Basic.hpp"

#include "BP_Door_classes.hpp"
#include "BP_Door_parameters.hpp"


namespace SDK
{

// Function BP_Door.BP_Door_C.Close
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RequestInstant                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Force                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Door_C::Close(bool RequestInstant, bool Force)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Door_C", "Close");

	Params::BP_Door_C_Close Parms{};

	Parms.RequestInstant = RequestInstant;
	Parms.Force = Force;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Door.BP_Door_C.ExecuteUbergraph_BP_Door
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Door_C::ExecuteUbergraph_BP_Door(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Door_C", "ExecuteUbergraph_BP_Door");

	Params::BP_Door_C_ExecuteUbergraph_BP_Door Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Door.BP_Door_C.IsMoving
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   bMoving                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Door_C::IsMoving(bool* bMoving)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Door_C", "IsMoving");

	Params::BP_Door_C_IsMoving Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bMoving != nullptr)
		*bMoving = Parms.bMoving;
}


// Function BP_Door.BP_Door_C.OnClose
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RequestInstant                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Door_C::OnClose(bool RequestInstant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Door_C", "OnClose");

	Params::BP_Door_C_OnClose Parms{};

	Parms.RequestInstant = RequestInstant;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Door.BP_Door_C.OnOpen
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RequestInstant                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Door_C::OnOpen(bool RequestInstant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Door_C", "OnOpen");

	Params::BP_Door_C_OnOpen Parms{};

	Parms.RequestInstant = RequestInstant;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Door.BP_Door_C.Open
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RequestInstant                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Force                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Door_C::Open(bool RequestInstant, bool Force)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Door_C", "Open");

	Params::BP_Door_C_Open Parms{};

	Parms.RequestInstant = RequestInstant;
	Parms.Force = Force;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Door.BP_Door_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Door_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Door_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Door.BP_Door_C.SetColliderState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Door_C::SetColliderState(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Door_C", "SetColliderState");

	Params::BP_Door_C_SetColliderState Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Door.BP_Door_C.Toggle
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Door_C::Toggle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Door_C", "Toggle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Door.BP_Door_C.GetIsOpen
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool*                                   IsOpen_0                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Door_C::GetIsOpen(bool* IsOpen_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Door_C", "GetIsOpen");

	Params::BP_Door_C_GetIsOpen Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsOpen_0 != nullptr)
		*IsOpen_0 = Parms.IsOpen_0;
}

}

