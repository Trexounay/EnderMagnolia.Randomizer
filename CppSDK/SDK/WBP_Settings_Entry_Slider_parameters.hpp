#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Settings_Entry_Slider

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_Settings_Entry_Slider.WBP_Settings_Entry_Slider_C.BndEvt__WBP_Settings_Entry_Slider_WBP_Slider_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_Settings_Entry_Slider_C_BndEvt__WBP_Settings_Entry_Slider_WBP_Slider_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_Entry_Slider_C_BndEvt__WBP_Settings_Entry_Slider_WBP_Slider_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Settings_Entry_Slider_C_BndEvt__WBP_Settings_Entry_Slider_WBP_Slider_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature");
static_assert(sizeof(WBP_Settings_Entry_Slider_C_BndEvt__WBP_Settings_Entry_Slider_WBP_Slider_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature) == 0x000008, "Wrong size on WBP_Settings_Entry_Slider_C_BndEvt__WBP_Settings_Entry_Slider_WBP_Slider_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_BndEvt__WBP_Settings_Entry_Slider_WBP_Slider_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature, Value) == 0x000000, "Member 'WBP_Settings_Entry_Slider_C_BndEvt__WBP_Settings_Entry_Slider_WBP_Slider_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature::Value' has a wrong offset!");

// Function WBP_Settings_Entry_Slider.WBP_Settings_Entry_Slider_C.ExecuteUbergraph_WBP_Settings_Entry_Slider
// 0x0050 (0x0050 - 0x0000)
struct WBP_Settings_Entry_Slider_C_ExecuteUbergraph_WBP_Settings_Entry_Slider final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFocusEvent                            K2Node_Event_InFocusEvent_1;                       // 0x000C(0x0008)(NoDestructor)
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x0014(0x0008)(NoDestructor)
	bool                                          K2Node_Event_bInIsEnabled;                         // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_ComponentBoundEvent_Value;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default_2;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMinMaxValue_Min_ImplicitCast;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMinMaxValue_Max_ImplicitCast;          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetStepSize_Step_Size_ImplicitCast;       // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CallDelegate_Value_ImplicitCast;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_Entry_Slider_C_ExecuteUbergraph_WBP_Settings_Entry_Slider) == 0x000008, "Wrong alignment on WBP_Settings_Entry_Slider_C_ExecuteUbergraph_WBP_Settings_Entry_Slider");
static_assert(sizeof(WBP_Settings_Entry_Slider_C_ExecuteUbergraph_WBP_Settings_Entry_Slider) == 0x000050, "Wrong size on WBP_Settings_Entry_Slider_C_ExecuteUbergraph_WBP_Settings_Entry_Slider");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_ExecuteUbergraph_WBP_Settings_Entry_Slider, EntryPoint) == 0x000000, "Member 'WBP_Settings_Entry_Slider_C_ExecuteUbergraph_WBP_Settings_Entry_Slider::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_ExecuteUbergraph_WBP_Settings_Entry_Slider, Temp_bool_Variable) == 0x000004, "Member 'WBP_Settings_Entry_Slider_C_ExecuteUbergraph_WBP_Settings_Entry_Slider::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_ExecuteUbergraph_WBP_Settings_Entry_Slider, Temp_byte_Variable) == 0x000005, "Member 'WBP_Settings_Entry_Slider_C_ExecuteUbergraph_WBP_Settings_Entry_Slider::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_ExecuteUbergraph_WBP_Settings_Entry_Slider, Temp_byte_Variable_1) == 0x000006, "Member 'WBP_Settings_Entry_Slider_C_ExecuteUbergraph_WBP_Settings_Entry_Slider::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_ExecuteUbergraph_WBP_Settings_Entry_Slider, Temp_bool_Variable_1) == 0x000007, "Member 'WBP_Settings_Entry_Slider_C_ExecuteUbergraph_WBP_Settings_Entry_Slider::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_ExecuteUbergraph_WBP_Settings_Entry_Slider, K2Node_Event_IsDesignTime) == 0x000008, "Member 'WBP_Settings_Entry_Slider_C_ExecuteUbergraph_WBP_Settings_Entry_Slider::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_ExecuteUbergraph_WBP_Settings_Entry_Slider, K2Node_Event_InFocusEvent_1) == 0x00000C, "Member 'WBP_Settings_Entry_Slider_C_ExecuteUbergraph_WBP_Settings_Entry_Slider::K2Node_Event_InFocusEvent_1' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_ExecuteUbergraph_WBP_Settings_Entry_Slider, K2Node_Event_InFocusEvent) == 0x000014, "Member 'WBP_Settings_Entry_Slider_C_ExecuteUbergraph_WBP_Settings_Entry_Slider::K2Node_Event_InFocusEvent' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_ExecuteUbergraph_WBP_Settings_Entry_Slider, K2Node_Event_bInIsEnabled) == 0x00001C, "Member 'WBP_Settings_Entry_Slider_C_ExecuteUbergraph_WBP_Settings_Entry_Slider::K2Node_Event_bInIsEnabled' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_ExecuteUbergraph_WBP_Settings_Entry_Slider, K2Node_Select_Default) == 0x00001D, "Member 'WBP_Settings_Entry_Slider_C_ExecuteUbergraph_WBP_Settings_Entry_Slider::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_ExecuteUbergraph_WBP_Settings_Entry_Slider, Temp_byte_Variable_2) == 0x00001E, "Member 'WBP_Settings_Entry_Slider_C_ExecuteUbergraph_WBP_Settings_Entry_Slider::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_ExecuteUbergraph_WBP_Settings_Entry_Slider, Temp_byte_Variable_3) == 0x00001F, "Member 'WBP_Settings_Entry_Slider_C_ExecuteUbergraph_WBP_Settings_Entry_Slider::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_ExecuteUbergraph_WBP_Settings_Entry_Slider, K2Node_ComponentBoundEvent_Value) == 0x000020, "Member 'WBP_Settings_Entry_Slider_C_ExecuteUbergraph_WBP_Settings_Entry_Slider::K2Node_ComponentBoundEvent_Value' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_ExecuteUbergraph_WBP_Settings_Entry_Slider, Temp_bool_Variable_2) == 0x000028, "Member 'WBP_Settings_Entry_Slider_C_ExecuteUbergraph_WBP_Settings_Entry_Slider::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_ExecuteUbergraph_WBP_Settings_Entry_Slider, K2Node_Select_Default_1) == 0x000029, "Member 'WBP_Settings_Entry_Slider_C_ExecuteUbergraph_WBP_Settings_Entry_Slider::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_ExecuteUbergraph_WBP_Settings_Entry_Slider, K2Node_Select_Default_2) == 0x000030, "Member 'WBP_Settings_Entry_Slider_C_ExecuteUbergraph_WBP_Settings_Entry_Slider::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_ExecuteUbergraph_WBP_Settings_Entry_Slider, CallFunc_GetValue_ReturnValue) == 0x000038, "Member 'WBP_Settings_Entry_Slider_C_ExecuteUbergraph_WBP_Settings_Entry_Slider::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_ExecuteUbergraph_WBP_Settings_Entry_Slider, CallFunc_SetMinMaxValue_Min_ImplicitCast) == 0x00003C, "Member 'WBP_Settings_Entry_Slider_C_ExecuteUbergraph_WBP_Settings_Entry_Slider::CallFunc_SetMinMaxValue_Min_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_ExecuteUbergraph_WBP_Settings_Entry_Slider, CallFunc_SetMinMaxValue_Max_ImplicitCast) == 0x000040, "Member 'WBP_Settings_Entry_Slider_C_ExecuteUbergraph_WBP_Settings_Entry_Slider::CallFunc_SetMinMaxValue_Max_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_ExecuteUbergraph_WBP_Settings_Entry_Slider, CallFunc_SetStepSize_Step_Size_ImplicitCast) == 0x000044, "Member 'WBP_Settings_Entry_Slider_C_ExecuteUbergraph_WBP_Settings_Entry_Slider::CallFunc_SetStepSize_Step_Size_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_ExecuteUbergraph_WBP_Settings_Entry_Slider, K2Node_CallDelegate_Value_ImplicitCast) == 0x000048, "Member 'WBP_Settings_Entry_Slider_C_ExecuteUbergraph_WBP_Settings_Entry_Slider::K2Node_CallDelegate_Value_ImplicitCast' has a wrong offset!");

// Function WBP_Settings_Entry_Slider.WBP_Settings_Entry_Slider_C.Get Slider Step Factor
// 0x0020 (0x0020 - 0x0000)
struct WBP_Settings_Entry_Slider_C_Get_Slider_Step_Factor final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetRealTimeSeconds_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_Entry_Slider_C_Get_Slider_Step_Factor) == 0x000008, "Wrong alignment on WBP_Settings_Entry_Slider_C_Get_Slider_Step_Factor");
static_assert(sizeof(WBP_Settings_Entry_Slider_C_Get_Slider_Step_Factor) == 0x000020, "Wrong size on WBP_Settings_Entry_Slider_C_Get_Slider_Step_Factor");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_Get_Slider_Step_Factor, ReturnValue) == 0x000000, "Member 'WBP_Settings_Entry_Slider_C_Get_Slider_Step_Factor::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_Get_Slider_Step_Factor, CallFunc_GetRealTimeSeconds_ReturnValue) == 0x000008, "Member 'WBP_Settings_Entry_Slider_C_Get_Slider_Step_Factor::CallFunc_GetRealTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_Get_Slider_Step_Factor, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'WBP_Settings_Entry_Slider_C_Get_Slider_Step_Factor::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_Get_Slider_Step_Factor, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000018, "Member 'WBP_Settings_Entry_Slider_C_Get_Slider_Step_Factor::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_Get_Slider_Step_Factor, CallFunc_SelectInt_ReturnValue) == 0x00001C, "Member 'WBP_Settings_Entry_Slider_C_Get_Slider_Step_Factor::CallFunc_SelectInt_ReturnValue' has a wrong offset!");

// Function WBP_Settings_Entry_Slider.WBP_Settings_Entry_Slider_C.GetSliderValue
// 0x0008 (0x0008 - 0x0000)
struct WBP_Settings_Entry_Slider_C_GetSliderValue final
{
public:
	float                                         SliderValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_Entry_Slider_C_GetSliderValue) == 0x000004, "Wrong alignment on WBP_Settings_Entry_Slider_C_GetSliderValue");
static_assert(sizeof(WBP_Settings_Entry_Slider_C_GetSliderValue) == 0x000008, "Wrong size on WBP_Settings_Entry_Slider_C_GetSliderValue");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_GetSliderValue, SliderValue) == 0x000000, "Member 'WBP_Settings_Entry_Slider_C_GetSliderValue::SliderValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_GetSliderValue, CallFunc_GetValue_ReturnValue) == 0x000004, "Member 'WBP_Settings_Entry_Slider_C_GetSliderValue::CallFunc_GetValue_ReturnValue' has a wrong offset!");

// Function WBP_Settings_Entry_Slider.WBP_Settings_Entry_Slider_C.OnAddedToFocusPath
// 0x0008 (0x0008 - 0x0000)
struct WBP_Settings_Entry_Slider_C_OnAddedToFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(WBP_Settings_Entry_Slider_C_OnAddedToFocusPath) == 0x000004, "Wrong alignment on WBP_Settings_Entry_Slider_C_OnAddedToFocusPath");
static_assert(sizeof(WBP_Settings_Entry_Slider_C_OnAddedToFocusPath) == 0x000008, "Wrong size on WBP_Settings_Entry_Slider_C_OnAddedToFocusPath");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_OnAddedToFocusPath, InFocusEvent) == 0x000000, "Member 'WBP_Settings_Entry_Slider_C_OnAddedToFocusPath::InFocusEvent' has a wrong offset!");

// Function WBP_Settings_Entry_Slider.WBP_Settings_Entry_Slider_C.OnDownLeft
// 0x01E8 (0x01E8 - 0x0000)
struct WBP_Settings_Entry_Slider_C_OnDownLeft final
{
public:
	struct FKeyEvent                              KeyEvent;                                          // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	int32                                         CallFunc_Get_Slider_Step_Factor_ReturnValue;       // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetStepSize_Step_Size;                    // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0118(0x00B8)()
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_Entry_Slider_C_OnDownLeft) == 0x000008, "Wrong alignment on WBP_Settings_Entry_Slider_C_OnDownLeft");
static_assert(sizeof(WBP_Settings_Entry_Slider_C_OnDownLeft) == 0x0001E8, "Wrong size on WBP_Settings_Entry_Slider_C_OnDownLeft");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_OnDownLeft, KeyEvent) == 0x000000, "Member 'WBP_Settings_Entry_Slider_C_OnDownLeft::KeyEvent' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_OnDownLeft, ReturnValue) == 0x000040, "Member 'WBP_Settings_Entry_Slider_C_OnDownLeft::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_OnDownLeft, CallFunc_Get_Slider_Step_Factor_ReturnValue) == 0x0000F8, "Member 'WBP_Settings_Entry_Slider_C_OnDownLeft::CallFunc_Get_Slider_Step_Factor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_OnDownLeft, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000100, "Member 'WBP_Settings_Entry_Slider_C_OnDownLeft::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_OnDownLeft, CallFunc_GetStepSize_Step_Size) == 0x000108, "Member 'WBP_Settings_Entry_Slider_C_OnDownLeft::CallFunc_GetStepSize_Step_Size' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_OnDownLeft, CallFunc_GetValue_ReturnValue) == 0x00010C, "Member 'WBP_Settings_Entry_Slider_C_OnDownLeft::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_OnDownLeft, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000110, "Member 'WBP_Settings_Entry_Slider_C_OnDownLeft::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_OnDownLeft, CallFunc_Handled_ReturnValue) == 0x000118, "Member 'WBP_Settings_Entry_Slider_C_OnDownLeft::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_OnDownLeft, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0001D0, "Member 'WBP_Settings_Entry_Slider_C_OnDownLeft::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_OnDownLeft, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0001D8, "Member 'WBP_Settings_Entry_Slider_C_OnDownLeft::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_OnDownLeft, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x0001E0, "Member 'WBP_Settings_Entry_Slider_C_OnDownLeft::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function WBP_Settings_Entry_Slider.WBP_Settings_Entry_Slider_C.OnDownRight
// 0x01E8 (0x01E8 - 0x0000)
struct WBP_Settings_Entry_Slider_C_OnDownRight final
{
public:
	struct FKeyEvent                              KeyEvent;                                          // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	int32                                         CallFunc_Get_Slider_Step_Factor_ReturnValue;       // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetStepSize_Step_Size;                    // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0118(0x00B8)()
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_Entry_Slider_C_OnDownRight) == 0x000008, "Wrong alignment on WBP_Settings_Entry_Slider_C_OnDownRight");
static_assert(sizeof(WBP_Settings_Entry_Slider_C_OnDownRight) == 0x0001E8, "Wrong size on WBP_Settings_Entry_Slider_C_OnDownRight");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_OnDownRight, KeyEvent) == 0x000000, "Member 'WBP_Settings_Entry_Slider_C_OnDownRight::KeyEvent' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_OnDownRight, ReturnValue) == 0x000040, "Member 'WBP_Settings_Entry_Slider_C_OnDownRight::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_OnDownRight, CallFunc_Get_Slider_Step_Factor_ReturnValue) == 0x0000F8, "Member 'WBP_Settings_Entry_Slider_C_OnDownRight::CallFunc_Get_Slider_Step_Factor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_OnDownRight, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000100, "Member 'WBP_Settings_Entry_Slider_C_OnDownRight::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_OnDownRight, CallFunc_GetStepSize_Step_Size) == 0x000108, "Member 'WBP_Settings_Entry_Slider_C_OnDownRight::CallFunc_GetStepSize_Step_Size' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_OnDownRight, CallFunc_GetValue_ReturnValue) == 0x00010C, "Member 'WBP_Settings_Entry_Slider_C_OnDownRight::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_OnDownRight, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000110, "Member 'WBP_Settings_Entry_Slider_C_OnDownRight::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_OnDownRight, CallFunc_Handled_ReturnValue) == 0x000118, "Member 'WBP_Settings_Entry_Slider_C_OnDownRight::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_OnDownRight, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0001D0, "Member 'WBP_Settings_Entry_Slider_C_OnDownRight::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_OnDownRight, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0001D8, "Member 'WBP_Settings_Entry_Slider_C_OnDownRight::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_OnDownRight, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x0001E0, "Member 'WBP_Settings_Entry_Slider_C_OnDownRight::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function WBP_Settings_Entry_Slider.WBP_Settings_Entry_Slider_C.OnKeyUp
// 0x02C0 (0x02C0 - 0x0000)
struct WBP_Settings_Entry_Slider_C_OnKeyUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0078(0x00B8)(Parm, OutParm, ReturnParm)
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x0130(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsKeyUIInputType_ReturnValue;             // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsKeyUIInputType_ReturnValue_1;           // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14B[0x5];                                      // 0x014B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0150(0x00B8)()
	struct FEventReply                            CallFunc_Unhandled_ReturnValue_1;                  // 0x0208(0x00B8)()
};
static_assert(alignof(WBP_Settings_Entry_Slider_C_OnKeyUp) == 0x000008, "Wrong alignment on WBP_Settings_Entry_Slider_C_OnKeyUp");
static_assert(sizeof(WBP_Settings_Entry_Slider_C_OnKeyUp) == 0x0002C0, "Wrong size on WBP_Settings_Entry_Slider_C_OnKeyUp");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_OnKeyUp, MyGeometry) == 0x000000, "Member 'WBP_Settings_Entry_Slider_C_OnKeyUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_OnKeyUp, InKeyEvent) == 0x000038, "Member 'WBP_Settings_Entry_Slider_C_OnKeyUp::InKeyEvent' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_OnKeyUp, ReturnValue) == 0x000078, "Member 'WBP_Settings_Entry_Slider_C_OnKeyUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_OnKeyUp, CallFunc_GetKey_ReturnValue) == 0x000130, "Member 'WBP_Settings_Entry_Slider_C_OnKeyUp::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_OnKeyUp, CallFunc_IsKeyUIInputType_ReturnValue) == 0x000148, "Member 'WBP_Settings_Entry_Slider_C_OnKeyUp::CallFunc_IsKeyUIInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_OnKeyUp, CallFunc_IsKeyUIInputType_ReturnValue_1) == 0x000149, "Member 'WBP_Settings_Entry_Slider_C_OnKeyUp::CallFunc_IsKeyUIInputType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_OnKeyUp, CallFunc_BooleanOR_ReturnValue) == 0x00014A, "Member 'WBP_Settings_Entry_Slider_C_OnKeyUp::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_OnKeyUp, CallFunc_Unhandled_ReturnValue) == 0x000150, "Member 'WBP_Settings_Entry_Slider_C_OnKeyUp::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_OnKeyUp, CallFunc_Unhandled_ReturnValue_1) == 0x000208, "Member 'WBP_Settings_Entry_Slider_C_OnKeyUp::CallFunc_Unhandled_ReturnValue_1' has a wrong offset!");

// Function WBP_Settings_Entry_Slider.WBP_Settings_Entry_Slider_C.OnPressLeft
// 0x01D8 (0x01D8 - 0x0000)
struct WBP_Settings_Entry_Slider_C_OnPressLeft final
{
public:
	struct FKeyEvent                              KeyEvent;                                          // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	double                                        CallFunc_GetRealTimeSeconds_ReturnValue;           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetStepSize_Step_Size;                    // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0108(0x00B8)()
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_Entry_Slider_C_OnPressLeft) == 0x000008, "Wrong alignment on WBP_Settings_Entry_Slider_C_OnPressLeft");
static_assert(sizeof(WBP_Settings_Entry_Slider_C_OnPressLeft) == 0x0001D8, "Wrong size on WBP_Settings_Entry_Slider_C_OnPressLeft");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_OnPressLeft, KeyEvent) == 0x000000, "Member 'WBP_Settings_Entry_Slider_C_OnPressLeft::KeyEvent' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_OnPressLeft, ReturnValue) == 0x000040, "Member 'WBP_Settings_Entry_Slider_C_OnPressLeft::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_OnPressLeft, CallFunc_GetRealTimeSeconds_ReturnValue) == 0x0000F8, "Member 'WBP_Settings_Entry_Slider_C_OnPressLeft::CallFunc_GetRealTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_OnPressLeft, CallFunc_GetStepSize_Step_Size) == 0x000100, "Member 'WBP_Settings_Entry_Slider_C_OnPressLeft::CallFunc_GetStepSize_Step_Size' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_OnPressLeft, CallFunc_GetValue_ReturnValue) == 0x000104, "Member 'WBP_Settings_Entry_Slider_C_OnPressLeft::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_OnPressLeft, CallFunc_Handled_ReturnValue) == 0x000108, "Member 'WBP_Settings_Entry_Slider_C_OnPressLeft::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_OnPressLeft, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0001C0, "Member 'WBP_Settings_Entry_Slider_C_OnPressLeft::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_OnPressLeft, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x0001C8, "Member 'WBP_Settings_Entry_Slider_C_OnPressLeft::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_OnPressLeft, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x0001D0, "Member 'WBP_Settings_Entry_Slider_C_OnPressLeft::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function WBP_Settings_Entry_Slider.WBP_Settings_Entry_Slider_C.OnPressRight
// 0x01D8 (0x01D8 - 0x0000)
struct WBP_Settings_Entry_Slider_C_OnPressRight final
{
public:
	struct FKeyEvent                              KeyEvent;                                          // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	double                                        CallFunc_GetRealTimeSeconds_ReturnValue;           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetStepSize_Step_Size;                    // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0108(0x00B8)()
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_Entry_Slider_C_OnPressRight) == 0x000008, "Wrong alignment on WBP_Settings_Entry_Slider_C_OnPressRight");
static_assert(sizeof(WBP_Settings_Entry_Slider_C_OnPressRight) == 0x0001D8, "Wrong size on WBP_Settings_Entry_Slider_C_OnPressRight");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_OnPressRight, KeyEvent) == 0x000000, "Member 'WBP_Settings_Entry_Slider_C_OnPressRight::KeyEvent' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_OnPressRight, ReturnValue) == 0x000040, "Member 'WBP_Settings_Entry_Slider_C_OnPressRight::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_OnPressRight, CallFunc_GetRealTimeSeconds_ReturnValue) == 0x0000F8, "Member 'WBP_Settings_Entry_Slider_C_OnPressRight::CallFunc_GetRealTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_OnPressRight, CallFunc_GetStepSize_Step_Size) == 0x000100, "Member 'WBP_Settings_Entry_Slider_C_OnPressRight::CallFunc_GetStepSize_Step_Size' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_OnPressRight, CallFunc_GetValue_ReturnValue) == 0x000104, "Member 'WBP_Settings_Entry_Slider_C_OnPressRight::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_OnPressRight, CallFunc_Handled_ReturnValue) == 0x000108, "Member 'WBP_Settings_Entry_Slider_C_OnPressRight::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_OnPressRight, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0001C0, "Member 'WBP_Settings_Entry_Slider_C_OnPressRight::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_OnPressRight, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x0001C8, "Member 'WBP_Settings_Entry_Slider_C_OnPressRight::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_OnPressRight, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x0001D0, "Member 'WBP_Settings_Entry_Slider_C_OnPressRight::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function WBP_Settings_Entry_Slider.WBP_Settings_Entry_Slider_C.OnRemovedFromFocusPath
// 0x0008 (0x0008 - 0x0000)
struct WBP_Settings_Entry_Slider_C_OnRemovedFromFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(WBP_Settings_Entry_Slider_C_OnRemovedFromFocusPath) == 0x000004, "Wrong alignment on WBP_Settings_Entry_Slider_C_OnRemovedFromFocusPath");
static_assert(sizeof(WBP_Settings_Entry_Slider_C_OnRemovedFromFocusPath) == 0x000008, "Wrong size on WBP_Settings_Entry_Slider_C_OnRemovedFromFocusPath");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_OnRemovedFromFocusPath, InFocusEvent) == 0x000000, "Member 'WBP_Settings_Entry_Slider_C_OnRemovedFromFocusPath::InFocusEvent' has a wrong offset!");

// Function WBP_Settings_Entry_Slider.WBP_Settings_Entry_Slider_C.OnSetIsEnabled
// 0x0001 (0x0001 - 0x0000)
struct WBP_Settings_Entry_Slider_C_OnSetIsEnabled final
{
public:
	bool                                          bInIsEnabled;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_Entry_Slider_C_OnSetIsEnabled) == 0x000001, "Wrong alignment on WBP_Settings_Entry_Slider_C_OnSetIsEnabled");
static_assert(sizeof(WBP_Settings_Entry_Slider_C_OnSetIsEnabled) == 0x000001, "Wrong size on WBP_Settings_Entry_Slider_C_OnSetIsEnabled");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_OnSetIsEnabled, bInIsEnabled) == 0x000000, "Member 'WBP_Settings_Entry_Slider_C_OnSetIsEnabled::bInIsEnabled' has a wrong offset!");

// Function WBP_Settings_Entry_Slider.WBP_Settings_Entry_Slider_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_Settings_Entry_Slider_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_Entry_Slider_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_Settings_Entry_Slider_C_PreConstruct");
static_assert(sizeof(WBP_Settings_Entry_Slider_C_PreConstruct) == 0x000001, "Wrong size on WBP_Settings_Entry_Slider_C_PreConstruct");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_Settings_Entry_Slider_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_Settings_Entry_Slider.WBP_Settings_Entry_Slider_C.SetLabel
// 0x0010 (0x0010 - 0x0000)
struct WBP_Settings_Entry_Slider_C_SetLabel final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_Settings_Entry_Slider_C_SetLabel) == 0x000008, "Wrong alignment on WBP_Settings_Entry_Slider_C_SetLabel");
static_assert(sizeof(WBP_Settings_Entry_Slider_C_SetLabel) == 0x000010, "Wrong size on WBP_Settings_Entry_Slider_C_SetLabel");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_SetLabel, InText) == 0x000000, "Member 'WBP_Settings_Entry_Slider_C_SetLabel::InText' has a wrong offset!");

// Function WBP_Settings_Entry_Slider.WBP_Settings_Entry_Slider_C.SetLabelImage
// 0x0008 (0x0008 - 0x0000)
struct WBP_Settings_Entry_Slider_C_SetLabelImage final
{
public:
	class UPaperSprite*                           LabelImage_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_Entry_Slider_C_SetLabelImage) == 0x000008, "Wrong alignment on WBP_Settings_Entry_Slider_C_SetLabelImage");
static_assert(sizeof(WBP_Settings_Entry_Slider_C_SetLabelImage) == 0x000008, "Wrong size on WBP_Settings_Entry_Slider_C_SetLabelImage");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_SetLabelImage, LabelImage_0) == 0x000000, "Member 'WBP_Settings_Entry_Slider_C_SetLabelImage::LabelImage_0' has a wrong offset!");

// Function WBP_Settings_Entry_Slider.WBP_Settings_Entry_Slider_C.SetSliderValue
// 0x0030 (0x0030 - 0x0000)
struct WBP_Settings_Entry_Slider_C_SetSliderValue final
{
public:
	double                                        InValue;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxValue_Max_Value;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMinValue_Min_Value;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_Max_ImplicitCast;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_Min_ImplicitCast;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetValue_InValue_ImplicitCast;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_Entry_Slider_C_SetSliderValue) == 0x000008, "Wrong alignment on WBP_Settings_Entry_Slider_C_SetSliderValue");
static_assert(sizeof(WBP_Settings_Entry_Slider_C_SetSliderValue) == 0x000030, "Wrong size on WBP_Settings_Entry_Slider_C_SetSliderValue");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_SetSliderValue, InValue) == 0x000000, "Member 'WBP_Settings_Entry_Slider_C_SetSliderValue::InValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_SetSliderValue, CallFunc_GetMaxValue_Max_Value) == 0x000008, "Member 'WBP_Settings_Entry_Slider_C_SetSliderValue::CallFunc_GetMaxValue_Max_Value' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_SetSliderValue, CallFunc_GetMinValue_Min_Value) == 0x00000C, "Member 'WBP_Settings_Entry_Slider_C_SetSliderValue::CallFunc_GetMinValue_Min_Value' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_SetSliderValue, CallFunc_FClamp_ReturnValue) == 0x000010, "Member 'WBP_Settings_Entry_Slider_C_SetSliderValue::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_SetSliderValue, CallFunc_FClamp_Max_ImplicitCast) == 0x000018, "Member 'WBP_Settings_Entry_Slider_C_SetSliderValue::CallFunc_FClamp_Max_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_SetSliderValue, CallFunc_FClamp_Min_ImplicitCast) == 0x000020, "Member 'WBP_Settings_Entry_Slider_C_SetSliderValue::CallFunc_FClamp_Min_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_SetSliderValue, CallFunc_SetValue_InValue_ImplicitCast) == 0x000028, "Member 'WBP_Settings_Entry_Slider_C_SetSliderValue::CallFunc_SetValue_InValue_ImplicitCast' has a wrong offset!");

// Function WBP_Settings_Entry_Slider.WBP_Settings_Entry_Slider_C.UpdateValueColor
// 0x0018 (0x0018 - 0x0000)
struct WBP_Settings_Entry_Slider_C_UpdateValueColor final
{
public:
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast;    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_Entry_Slider_C_UpdateValueColor) == 0x000008, "Wrong alignment on WBP_Settings_Entry_Slider_C_UpdateValueColor");
static_assert(sizeof(WBP_Settings_Entry_Slider_C_UpdateValueColor) == 0x000018, "Wrong size on WBP_Settings_Entry_Slider_C_UpdateValueColor");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_UpdateValueColor, CallFunc_GetValue_ReturnValue) == 0x000000, "Member 'WBP_Settings_Entry_Slider_C_UpdateValueColor::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_UpdateValueColor, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000004, "Member 'WBP_Settings_Entry_Slider_C_UpdateValueColor::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_UpdateValueColor, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000005, "Member 'WBP_Settings_Entry_Slider_C_UpdateValueColor::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_UpdateValueColor, CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast) == 0x000008, "Member 'WBP_Settings_Entry_Slider_C_UpdateValueColor::CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_UpdateValueColor, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000010, "Member 'WBP_Settings_Entry_Slider_C_UpdateValueColor::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function WBP_Settings_Entry_Slider.WBP_Settings_Entry_Slider_C.UpdateValueText
// 0x0070 (0x0070 - 0x0000)
struct WBP_Settings_Entry_Slider_C_UpdateValueText final
{
public:
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0008(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0060(0x0010)()
};
static_assert(alignof(WBP_Settings_Entry_Slider_C_UpdateValueText) == 0x000008, "Wrong alignment on WBP_Settings_Entry_Slider_C_UpdateValueText");
static_assert(sizeof(WBP_Settings_Entry_Slider_C_UpdateValueText) == 0x000070, "Wrong size on WBP_Settings_Entry_Slider_C_UpdateValueText");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_UpdateValueText, CallFunc_GetValue_ReturnValue) == 0x000000, "Member 'WBP_Settings_Entry_Slider_C_UpdateValueText::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_UpdateValueText, K2Node_MakeStruct_FormatArgumentData) == 0x000008, "Member 'WBP_Settings_Entry_Slider_C_UpdateValueText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_UpdateValueText, K2Node_MakeArray_Array) == 0x000050, "Member 'WBP_Settings_Entry_Slider_C_UpdateValueText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_Settings_Entry_Slider_C_UpdateValueText, CallFunc_Format_ReturnValue) == 0x000060, "Member 'WBP_Settings_Entry_Slider_C_UpdateValueText::CallFunc_Format_ReturnValue' has a wrong offset!");

}

