#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PassiveUnlock

#include "Basic.hpp"

#include "WBP_PassiveUnlock_classes.hpp"
#include "WBP_PassiveUnlock_parameters.hpp"


namespace SDK
{

// Function WBP_PassiveUnlock.WBP_PassiveUnlock_C.CanUpgradePassiveData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FInventoryItemPassiveData& InventoryItemPassiveData                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool*                                   CanBeUpgraded                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_PassiveUnlock_C::CanUpgradePassiveData(const struct FInventoryItemPassiveData& InventoryItemPassiveData, bool* CanBeUpgraded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PassiveUnlock_C", "CanUpgradePassiveData");

	Params::WBP_PassiveUnlock_C_CanUpgradePassiveData Parms{};

	Parms.InventoryItemPassiveData = std::move(InventoryItemPassiveData);

	UObject::ProcessEvent(Func, &Parms);

	if (CanBeUpgraded != nullptr)
		*CanBeUpgraded = Parms.CanBeUpgraded;
}


// Function WBP_PassiveUnlock.WBP_PassiveUnlock_C.CanUpgradePassiveDataHandle
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FDataTableRowHandle&       Handle                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
// bool*                                   CanBeUpgraded                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_PassiveUnlock_C::CanUpgradePassiveDataHandle(const struct FDataTableRowHandle& Handle, bool* CanBeUpgraded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PassiveUnlock_C", "CanUpgradePassiveDataHandle");

	Params::WBP_PassiveUnlock_C_CanUpgradePassiveDataHandle Parms{};

	Parms.Handle = std::move(Handle);

	UObject::ProcessEvent(Func, &Parms);

	if (CanBeUpgraded != nullptr)
		*CanBeUpgraded = Parms.CanBeUpgraded;
}


// Function WBP_PassiveUnlock.WBP_PassiveUnlock_C.CanUpgradePassiveEntry
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UWBP_PassiveEntry_C*              PassiveEntry                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool*                                   CanBeUpgraded                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_PassiveUnlock_C::CanUpgradePassiveEntry(class UWBP_PassiveEntry_C* PassiveEntry, bool* CanBeUpgraded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PassiveUnlock_C", "CanUpgradePassiveEntry");

	Params::WBP_PassiveUnlock_C_CanUpgradePassiveEntry Parms{};

	Parms.PassiveEntry = PassiveEntry;

	UObject::ProcessEvent(Func, &Parms);

	if (CanBeUpgraded != nullptr)
		*CanBeUpgraded = Parms.CanBeUpgraded;
}


// Function WBP_PassiveUnlock.WBP_PassiveUnlock_C.ClearPassiveList
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_PassiveUnlock_C::ClearPassiveList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PassiveUnlock_C", "ClearPassiveList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_PassiveUnlock.WBP_PassiveUnlock_C.Close
// (BlueprintCallable, BlueprintEvent)

void UWBP_PassiveUnlock_C::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PassiveUnlock_C", "Close");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_PassiveUnlock.WBP_PassiveUnlock_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_PassiveUnlock_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PassiveUnlock_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_PassiveUnlock.WBP_PassiveUnlock_C.CreatePassiveList
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_PassiveUnlock_C::CreatePassiveList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PassiveUnlock_C", "CreatePassiveList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_PassiveUnlock.WBP_PassiveUnlock_C.ExecuteUbergraph_WBP_PassiveUnlock
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_PassiveUnlock_C::ExecuteUbergraph_WBP_PassiveUnlock(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PassiveUnlock_C", "ExecuteUbergraph_WBP_PassiveUnlock");

	Params::WBP_PassiveUnlock_C_ExecuteUbergraph_WBP_PassiveUnlock Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_PassiveUnlock.WBP_PassiveUnlock_C.HasEnoughCurrencyForUpgrade
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UWBP_PassiveEntry_C*              PassiveEntry                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool*                                   HasEnoughCurrency                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_PassiveUnlock_C::HasEnoughCurrencyForUpgrade(class UWBP_PassiveEntry_C* PassiveEntry, bool* HasEnoughCurrency)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PassiveUnlock_C", "HasEnoughCurrencyForUpgrade");

	Params::WBP_PassiveUnlock_C_HasEnoughCurrencyForUpgrade Parms{};

	Parms.PassiveEntry = PassiveEntry;

	UObject::ProcessEvent(Func, &Parms);

	if (HasEnoughCurrency != nullptr)
		*HasEnoughCurrency = Parms.HasEnoughCurrency;
}


// Function WBP_PassiveUnlock.WBP_PassiveUnlock_C.OnConformUpgradePassive
// (BlueprintCallable, BlueprintEvent)

void UWBP_PassiveUnlock_C::OnConformUpgradePassive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PassiveUnlock_C", "OnConformUpgradePassive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_PassiveUnlock.WBP_PassiveUnlock_C.OnFastTravel
// (BlueprintCallable, BlueprintEvent)

void UWBP_PassiveUnlock_C::OnFastTravel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PassiveUnlock_C", "OnFastTravel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_PassiveUnlock.WBP_PassiveUnlock_C.OnFinish_3B36581944E63C8BEB7D49BC6D83CFB7
// (BlueprintCallable, BlueprintEvent)

void UWBP_PassiveUnlock_C::OnFinish_3B36581944E63C8BEB7D49BC6D83CFB7()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PassiveUnlock_C", "OnFinish_3B36581944E63C8BEB7D49BC6D83CFB7");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_PassiveUnlock.WBP_PassiveUnlock_C.OnFinish_59F675024025FBA7191AF2A2C755CA13
// (BlueprintCallable, BlueprintEvent)

void UWBP_PassiveUnlock_C::OnFinish_59F675024025FBA7191AF2A2C755CA13()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PassiveUnlock_C", "OnFinish_59F675024025FBA7191AF2A2C755CA13");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_PassiveUnlock.WBP_PassiveUnlock_C.OnFocusedPassiveEntry
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_PassiveEntry_C*              PassiveEntry                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_PassiveUnlock_C::OnFocusedPassiveEntry(class UWBP_PassiveEntry_C* PassiveEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PassiveUnlock_C", "OnFocusedPassiveEntry");

	Params::WBP_PassiveUnlock_C_OnFocusedPassiveEntry Parms{};

	Parms.PassiveEntry = PassiveEntry;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_PassiveUnlock.WBP_PassiveUnlock_C.OnFocusReceived
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FFocusEvent&               InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWBP_PassiveUnlock_C::OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PassiveUnlock_C", "OnFocusReceived");

	Params::WBP_PassiveUnlock_C_OnFocusReceived Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_PassiveUnlock.WBP_PassiveUnlock_C.OnPassiveAnimationFinished
// (BlueprintCallable, BlueprintEvent)

void UWBP_PassiveUnlock_C::OnPassiveAnimationFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PassiveUnlock_C", "OnPassiveAnimationFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_PassiveUnlock.WBP_PassiveUnlock_C.OnPassiveChanged
// (BlueprintCallable, BlueprintEvent)

void UWBP_PassiveUnlock_C::OnPassiveChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PassiveUnlock_C", "OnPassiveChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_PassiveUnlock.WBP_PassiveUnlock_C.OnPressCancel
// (Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FKeyEvent&                 KeyEvent                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWBP_PassiveUnlock_C::OnPressCancel(const struct FKeyEvent& KeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PassiveUnlock_C", "OnPressCancel");

	Params::WBP_PassiveUnlock_C_OnPressCancel Parms{};

	Parms.KeyEvent = std::move(KeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_PassiveUnlock.WBP_PassiveUnlock_C.OnPressedContextEntry
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_PassiveEntry_C*              PassiveEntry                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_PassiveUnlock_C::OnPressedContextEntry(class UWBP_PassiveEntry_C* PassiveEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PassiveUnlock_C", "OnPressedContextEntry");

	Params::WBP_PassiveUnlock_C_OnPressedContextEntry Parms{};

	Parms.PassiveEntry = PassiveEntry;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_PassiveUnlock.WBP_PassiveUnlock_C.OnPressedPassiveEntry
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_PassiveEntry_C*              PassiveEntry                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_PassiveUnlock_C::OnPressedPassiveEntry(class UWBP_PassiveEntry_C* PassiveEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PassiveUnlock_C", "OnPressedPassiveEntry");

	Params::WBP_PassiveUnlock_C_OnPressedPassiveEntry Parms{};

	Parms.PassiveEntry = PassiveEntry;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_PassiveUnlock.WBP_PassiveUnlock_C.RefreshCurrency
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_PassiveEntry_C*              PassiveEntry                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_PassiveUnlock_C::RefreshCurrency(class UWBP_PassiveEntry_C* PassiveEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PassiveUnlock_C", "RefreshCurrency");

	Params::WBP_PassiveUnlock_C_RefreshCurrency Parms{};

	Parms.PassiveEntry = PassiveEntry;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_PassiveUnlock.WBP_PassiveUnlock_C.RefreshPassiveEntries
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_PassiveUnlock_C::RefreshPassiveEntries()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PassiveUnlock_C", "RefreshPassiveEntries");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_PassiveUnlock.WBP_PassiveUnlock_C.SetupUIForPassiveEntry
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_PassiveEntry_C*              PassiveEntry                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_PassiveUnlock_C::SetupUIForPassiveEntry(class UWBP_PassiveEntry_C* PassiveEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PassiveUnlock_C", "SetupUIForPassiveEntry");

	Params::WBP_PassiveUnlock_C_SetupUIForPassiveEntry Parms{};

	Parms.PassiveEntry = PassiveEntry;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_PassiveUnlock.WBP_PassiveUnlock_C.UpgradePassiveEntry
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_PassiveEntry_C*              PassiveEntry                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_PassiveUnlock_C::UpgradePassiveEntry(class UWBP_PassiveEntry_C* PassiveEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PassiveUnlock_C", "UpgradePassiveEntry");

	Params::WBP_PassiveUnlock_C_UpgradePassiveEntry Parms{};

	Parms.PassiveEntry = PassiveEntry;

	UObject::ProcessEvent(Func, &Parms);
}

}

