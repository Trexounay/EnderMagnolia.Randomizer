#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Title

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Zion_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_Title.WBP_Title_C.BndEvt__WBP_Title_WBP_Button_Generic_Exit_K2Node_ComponentBoundEvent_0_OnPressed__DelegateSignature
// 0x0040 (0x0040 - 0x0000)
struct WBP_Title_C_BndEvt__WBP_Title_WBP_Button_Generic_Exit_K2Node_ComponentBoundEvent_0_OnPressed__DelegateSignature final
{
public:
	struct FKeyEvent                              KeyEvent;                                          // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_Title_C_BndEvt__WBP_Title_WBP_Button_Generic_Exit_K2Node_ComponentBoundEvent_0_OnPressed__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Title_C_BndEvt__WBP_Title_WBP_Button_Generic_Exit_K2Node_ComponentBoundEvent_0_OnPressed__DelegateSignature");
static_assert(sizeof(WBP_Title_C_BndEvt__WBP_Title_WBP_Button_Generic_Exit_K2Node_ComponentBoundEvent_0_OnPressed__DelegateSignature) == 0x000040, "Wrong size on WBP_Title_C_BndEvt__WBP_Title_WBP_Button_Generic_Exit_K2Node_ComponentBoundEvent_0_OnPressed__DelegateSignature");
static_assert(offsetof(WBP_Title_C_BndEvt__WBP_Title_WBP_Button_Generic_Exit_K2Node_ComponentBoundEvent_0_OnPressed__DelegateSignature, KeyEvent) == 0x000000, "Member 'WBP_Title_C_BndEvt__WBP_Title_WBP_Button_Generic_Exit_K2Node_ComponentBoundEvent_0_OnPressed__DelegateSignature::KeyEvent' has a wrong offset!");

// Function WBP_Title.WBP_Title_C.BndEvt__WBP_Title_WBP_Button_Generic_Settings_K2Node_ComponentBoundEvent_2_OnPressed__DelegateSignature
// 0x0040 (0x0040 - 0x0000)
struct WBP_Title_C_BndEvt__WBP_Title_WBP_Button_Generic_Settings_K2Node_ComponentBoundEvent_2_OnPressed__DelegateSignature final
{
public:
	struct FKeyEvent                              KeyEvent;                                          // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_Title_C_BndEvt__WBP_Title_WBP_Button_Generic_Settings_K2Node_ComponentBoundEvent_2_OnPressed__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Title_C_BndEvt__WBP_Title_WBP_Button_Generic_Settings_K2Node_ComponentBoundEvent_2_OnPressed__DelegateSignature");
static_assert(sizeof(WBP_Title_C_BndEvt__WBP_Title_WBP_Button_Generic_Settings_K2Node_ComponentBoundEvent_2_OnPressed__DelegateSignature) == 0x000040, "Wrong size on WBP_Title_C_BndEvt__WBP_Title_WBP_Button_Generic_Settings_K2Node_ComponentBoundEvent_2_OnPressed__DelegateSignature");
static_assert(offsetof(WBP_Title_C_BndEvt__WBP_Title_WBP_Button_Generic_Settings_K2Node_ComponentBoundEvent_2_OnPressed__DelegateSignature, KeyEvent) == 0x000000, "Member 'WBP_Title_C_BndEvt__WBP_Title_WBP_Button_Generic_Settings_K2Node_ComponentBoundEvent_2_OnPressed__DelegateSignature::KeyEvent' has a wrong offset!");

// Function WBP_Title.WBP_Title_C.BndEvt__WBP_Title_WBP_Button_Generic_Start_K2Node_ComponentBoundEvent_1_OnPressed__DelegateSignature
// 0x0040 (0x0040 - 0x0000)
struct WBP_Title_C_BndEvt__WBP_Title_WBP_Button_Generic_Start_K2Node_ComponentBoundEvent_1_OnPressed__DelegateSignature final
{
public:
	struct FKeyEvent                              KeyEvent;                                          // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_Title_C_BndEvt__WBP_Title_WBP_Button_Generic_Start_K2Node_ComponentBoundEvent_1_OnPressed__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Title_C_BndEvt__WBP_Title_WBP_Button_Generic_Start_K2Node_ComponentBoundEvent_1_OnPressed__DelegateSignature");
static_assert(sizeof(WBP_Title_C_BndEvt__WBP_Title_WBP_Button_Generic_Start_K2Node_ComponentBoundEvent_1_OnPressed__DelegateSignature) == 0x000040, "Wrong size on WBP_Title_C_BndEvt__WBP_Title_WBP_Button_Generic_Start_K2Node_ComponentBoundEvent_1_OnPressed__DelegateSignature");
static_assert(offsetof(WBP_Title_C_BndEvt__WBP_Title_WBP_Button_Generic_Start_K2Node_ComponentBoundEvent_1_OnPressed__DelegateSignature, KeyEvent) == 0x000000, "Member 'WBP_Title_C_BndEvt__WBP_Title_WBP_Button_Generic_Start_K2Node_ComponentBoundEvent_1_OnPressed__DelegateSignature::KeyEvent' has a wrong offset!");

// Function WBP_Title.WBP_Title_C.CanChangeTitleScreen
// 0x0018 (0x0018 - 0x0000)
struct WBP_Title_C_CanChangeTitleScreen final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameSettingsSubsystem*                 CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DidReachAnyGameEnding_ReturnValue;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Title_C_CanChangeTitleScreen) == 0x000008, "Wrong alignment on WBP_Title_C_CanChangeTitleScreen");
static_assert(sizeof(WBP_Title_C_CanChangeTitleScreen) == 0x000018, "Wrong size on WBP_Title_C_CanChangeTitleScreen");
static_assert(offsetof(WBP_Title_C_CanChangeTitleScreen, ReturnValue) == 0x000000, "Member 'WBP_Title_C_CanChangeTitleScreen::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_CanChangeTitleScreen, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'WBP_Title_C_CanChangeTitleScreen::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_CanChangeTitleScreen, CallFunc_DidReachAnyGameEnding_ReturnValue) == 0x000010, "Member 'WBP_Title_C_CanChangeTitleScreen::CallFunc_DidReachAnyGameEnding_ReturnValue' has a wrong offset!");

// Function WBP_Title.WBP_Title_C.ExecuteUbergraph_WBP_Title
// 0x0140 (0x0140 - 0x0000)
struct WBP_Title_C_ExecuteUbergraph_WBP_Title final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_SlotSelection_C*                   CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_Settings_C*                        CallFunc_Create_ReturnValue_1;                     // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_DemoStart_C*                       CallFunc_Create_ReturnValue_2;                     // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_Dialog_TitleScreenSelection_C*     CallFunc_Create_ReturnValue_3;                     // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDelayFrameAsyncAction*                 CallFunc_DelayFrame_ReturnValue;                   // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FKeyEvent                              K2Node_ComponentBoundEvent_KeyEvent_2;             // 0x0040(0x0040)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKeyEvent                              K2Node_ComponentBoundEvent_KeyEvent_1;             // 0x0088(0x0040)()
	class UPlayUMGAnimationAsyncAction*           CallFunc_PlayUMGAnimation_ReturnValue;             // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKeyEvent                              K2Node_ComponentBoundEvent_KeyEvent;               // 0x00D8(0x0040)()
	bool                                          CallFunc_IsDemoBuild_ReturnValue;                  // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11A[0x2];                                      // 0x011A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x011C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanChangeTitleScreen_ReturnValue;         // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0130(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Title_C_ExecuteUbergraph_WBP_Title) == 0x000008, "Wrong alignment on WBP_Title_C_ExecuteUbergraph_WBP_Title");
static_assert(sizeof(WBP_Title_C_ExecuteUbergraph_WBP_Title) == 0x000140, "Wrong size on WBP_Title_C_ExecuteUbergraph_WBP_Title");
static_assert(offsetof(WBP_Title_C_ExecuteUbergraph_WBP_Title, EntryPoint) == 0x000000, "Member 'WBP_Title_C_ExecuteUbergraph_WBP_Title::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_ExecuteUbergraph_WBP_Title, CallFunc_Create_ReturnValue) == 0x000008, "Member 'WBP_Title_C_ExecuteUbergraph_WBP_Title::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_ExecuteUbergraph_WBP_Title, CallFunc_Create_ReturnValue_1) == 0x000010, "Member 'WBP_Title_C_ExecuteUbergraph_WBP_Title::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_ExecuteUbergraph_WBP_Title, CallFunc_Create_ReturnValue_2) == 0x000018, "Member 'WBP_Title_C_ExecuteUbergraph_WBP_Title::CallFunc_Create_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_ExecuteUbergraph_WBP_Title, CallFunc_Create_ReturnValue_3) == 0x000020, "Member 'WBP_Title_C_ExecuteUbergraph_WBP_Title::CallFunc_Create_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_ExecuteUbergraph_WBP_Title, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'WBP_Title_C_ExecuteUbergraph_WBP_Title::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_ExecuteUbergraph_WBP_Title, CallFunc_DelayFrame_ReturnValue) == 0x000038, "Member 'WBP_Title_C_ExecuteUbergraph_WBP_Title::CallFunc_DelayFrame_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_ExecuteUbergraph_WBP_Title, K2Node_ComponentBoundEvent_KeyEvent_2) == 0x000040, "Member 'WBP_Title_C_ExecuteUbergraph_WBP_Title::K2Node_ComponentBoundEvent_KeyEvent_2' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_ExecuteUbergraph_WBP_Title, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'WBP_Title_C_ExecuteUbergraph_WBP_Title::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_ExecuteUbergraph_WBP_Title, K2Node_ComponentBoundEvent_KeyEvent_1) == 0x000088, "Member 'WBP_Title_C_ExecuteUbergraph_WBP_Title::K2Node_ComponentBoundEvent_KeyEvent_1' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_ExecuteUbergraph_WBP_Title, CallFunc_PlayUMGAnimation_ReturnValue) == 0x0000C8, "Member 'WBP_Title_C_ExecuteUbergraph_WBP_Title::CallFunc_PlayUMGAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_ExecuteUbergraph_WBP_Title, CallFunc_IsValid_ReturnValue_1) == 0x0000D0, "Member 'WBP_Title_C_ExecuteUbergraph_WBP_Title::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_ExecuteUbergraph_WBP_Title, K2Node_ComponentBoundEvent_KeyEvent) == 0x0000D8, "Member 'WBP_Title_C_ExecuteUbergraph_WBP_Title::K2Node_ComponentBoundEvent_KeyEvent' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_ExecuteUbergraph_WBP_Title, CallFunc_IsDemoBuild_ReturnValue) == 0x000118, "Member 'WBP_Title_C_ExecuteUbergraph_WBP_Title::CallFunc_IsDemoBuild_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_ExecuteUbergraph_WBP_Title, CallFunc_Not_PreBool_ReturnValue) == 0x000119, "Member 'WBP_Title_C_ExecuteUbergraph_WBP_Title::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_ExecuteUbergraph_WBP_Title, K2Node_CreateDelegate_OutputDelegate_1) == 0x00011C, "Member 'WBP_Title_C_ExecuteUbergraph_WBP_Title::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_ExecuteUbergraph_WBP_Title, CallFunc_CanChangeTitleScreen_ReturnValue) == 0x00012C, "Member 'WBP_Title_C_ExecuteUbergraph_WBP_Title::CallFunc_CanChangeTitleScreen_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_ExecuteUbergraph_WBP_Title, K2Node_CreateDelegate_OutputDelegate_2) == 0x000130, "Member 'WBP_Title_C_ExecuteUbergraph_WBP_Title::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");

// Function WBP_Title.WBP_Title_C.OnFocusReceived
// 0x01B0 (0x01B0 - 0x0000)
struct WBP_Title_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x00F8(0x00B8)()
};
static_assert(alignof(WBP_Title_C_OnFocusReceived) == 0x000008, "Wrong alignment on WBP_Title_C_OnFocusReceived");
static_assert(sizeof(WBP_Title_C_OnFocusReceived) == 0x0001B0, "Wrong size on WBP_Title_C_OnFocusReceived");
static_assert(offsetof(WBP_Title_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'WBP_Title_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'WBP_Title_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'WBP_Title_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_OnFocusReceived, CallFunc_Handled_ReturnValue) == 0x0000F8, "Member 'WBP_Title_C_OnFocusReceived::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function WBP_Title.WBP_Title_C.OnPressContext
// 0x01B0 (0x01B0 - 0x0000)
struct WBP_Title_C_OnPressContext final
{
public:
	struct FKeyEvent                              KeyEvent;                                          // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x00F8(0x00B8)()
};
static_assert(alignof(WBP_Title_C_OnPressContext) == 0x000008, "Wrong alignment on WBP_Title_C_OnPressContext");
static_assert(sizeof(WBP_Title_C_OnPressContext) == 0x0001B0, "Wrong size on WBP_Title_C_OnPressContext");
static_assert(offsetof(WBP_Title_C_OnPressContext, KeyEvent) == 0x000000, "Member 'WBP_Title_C_OnPressContext::KeyEvent' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_OnPressContext, ReturnValue) == 0x000040, "Member 'WBP_Title_C_OnPressContext::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_OnPressContext, CallFunc_Handled_ReturnValue) == 0x0000F8, "Member 'WBP_Title_C_OnPressContext::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function WBP_Title.WBP_Title_C.RefreshUserProfile
// 0x0098 (0x0098 - 0x0000)
struct WBP_Title_C_RefreshUserProfile final
{
public:
	class UProfileSubsystem*                      CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingProfileSystem_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentProfileName_ReturnValue;        // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0020(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0088(0x0010)()
};
static_assert(alignof(WBP_Title_C_RefreshUserProfile) == 0x000008, "Wrong alignment on WBP_Title_C_RefreshUserProfile");
static_assert(sizeof(WBP_Title_C_RefreshUserProfile) == 0x000098, "Wrong size on WBP_Title_C_RefreshUserProfile");
static_assert(offsetof(WBP_Title_C_RefreshUserProfile, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000000, "Member 'WBP_Title_C_RefreshUserProfile::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_RefreshUserProfile, CallFunc_IsUsingProfileSystem_ReturnValue) == 0x000008, "Member 'WBP_Title_C_RefreshUserProfile::CallFunc_IsUsingProfileSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_RefreshUserProfile, CallFunc_GetCurrentProfileName_ReturnValue) == 0x000010, "Member 'WBP_Title_C_RefreshUserProfile::CallFunc_GetCurrentProfileName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_RefreshUserProfile, CallFunc_Conv_StringToText_ReturnValue) == 0x000020, "Member 'WBP_Title_C_RefreshUserProfile::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_RefreshUserProfile, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'WBP_Title_C_RefreshUserProfile::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_RefreshUserProfile, K2Node_MakeArray_Array) == 0x000078, "Member 'WBP_Title_C_RefreshUserProfile::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_RefreshUserProfile, CallFunc_Format_ReturnValue) == 0x000088, "Member 'WBP_Title_C_RefreshUserProfile::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WBP_Title.WBP_Title_C.SetupBG
// 0x0110 (0x0110 - 0x0000)
struct WBP_Title_C_SetupBG final
{
public:
	bool                                          bForce;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameSettingsSubsystem*                 CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EGameEndingType                               CallFunc_GetTitleType_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveChildAt_ReturnValue;                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UWorld>                  CallFunc_Map_Find_Value;                           // 0x0018(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameEndingType                               Temp_byte_Variable;                                // 0x0041(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LoadLevelInstanceBySoftObjectPtr_bOutSuccess; // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelStreamingDynamic*                 CallFunc_LoadLevelInstanceBySoftObjectPtr_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   CallFunc_Map_Find_Value_1;                         // 0x0058(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   CallFunc_Map_Find_Value_2;                         // 0x0088(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   K2Node_Select_Default;                             // 0x00B8(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsUser_Widget;             // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Create_ReturnValue;                       // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0108(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Title_C_SetupBG) == 0x000008, "Wrong alignment on WBP_Title_C_SetupBG");
static_assert(sizeof(WBP_Title_C_SetupBG) == 0x000110, "Wrong size on WBP_Title_C_SetupBG");
static_assert(offsetof(WBP_Title_C_SetupBG, bForce) == 0x000000, "Member 'WBP_Title_C_SetupBG::bForce' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_SetupBG, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'WBP_Title_C_SetupBG::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_SetupBG, CallFunc_GetTitleType_ReturnValue) == 0x000010, "Member 'WBP_Title_C_SetupBG::CallFunc_GetTitleType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_SetupBG, CallFunc_RemoveChildAt_ReturnValue) == 0x000011, "Member 'WBP_Title_C_SetupBG::CallFunc_RemoveChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_SetupBG, Temp_bool_Variable) == 0x000012, "Member 'WBP_Title_C_SetupBG::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_SetupBG, CallFunc_Map_Find_Value) == 0x000018, "Member 'WBP_Title_C_SetupBG::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_SetupBG, CallFunc_Map_Find_ReturnValue) == 0x000040, "Member 'WBP_Title_C_SetupBG::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_SetupBG, Temp_byte_Variable) == 0x000041, "Member 'WBP_Title_C_SetupBG::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_SetupBG, CallFunc_LoadLevelInstanceBySoftObjectPtr_bOutSuccess) == 0x000042, "Member 'WBP_Title_C_SetupBG::CallFunc_LoadLevelInstanceBySoftObjectPtr_bOutSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_SetupBG, CallFunc_LoadLevelInstanceBySoftObjectPtr_ReturnValue) == 0x000048, "Member 'WBP_Title_C_SetupBG::CallFunc_LoadLevelInstanceBySoftObjectPtr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_SetupBG, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000050, "Member 'WBP_Title_C_SetupBG::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_SetupBG, CallFunc_Map_Find_Value_1) == 0x000058, "Member 'WBP_Title_C_SetupBG::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_SetupBG, CallFunc_Map_Find_ReturnValue_1) == 0x000080, "Member 'WBP_Title_C_SetupBG::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_SetupBG, CallFunc_BooleanOR_ReturnValue) == 0x000081, "Member 'WBP_Title_C_SetupBG::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_SetupBG, CallFunc_Map_Find_Value_2) == 0x000088, "Member 'WBP_Title_C_SetupBG::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_SetupBG, CallFunc_Map_Find_ReturnValue_2) == 0x0000B0, "Member 'WBP_Title_C_SetupBG::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_SetupBG, K2Node_Select_Default) == 0x0000B8, "Member 'WBP_Title_C_SetupBG::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_SetupBG, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x0000E0, "Member 'WBP_Title_C_SetupBG::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_SetupBG, CallFunc_IsValid_ReturnValue) == 0x0000E8, "Member 'WBP_Title_C_SetupBG::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_SetupBG, K2Node_ClassDynamicCast_AsUser_Widget) == 0x0000F0, "Member 'WBP_Title_C_SetupBG::K2Node_ClassDynamicCast_AsUser_Widget' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_SetupBG, K2Node_ClassDynamicCast_bSuccess) == 0x0000F8, "Member 'WBP_Title_C_SetupBG::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_SetupBG, CallFunc_Create_ReturnValue) == 0x000100, "Member 'WBP_Title_C_SetupBG::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_SetupBG, CallFunc_AddChild_ReturnValue) == 0x000108, "Member 'WBP_Title_C_SetupBG::CallFunc_AddChild_ReturnValue' has a wrong offset!");

// Function WBP_Title.WBP_Title_C.SetupFooter
// 0x0001 (0x0001 - 0x0000)
struct WBP_Title_C_SetupFooter final
{
public:
	bool                                          CallFunc_CanChangeTitleScreen_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Title_C_SetupFooter) == 0x000001, "Wrong alignment on WBP_Title_C_SetupFooter");
static_assert(sizeof(WBP_Title_C_SetupFooter) == 0x000001, "Wrong size on WBP_Title_C_SetupFooter");
static_assert(offsetof(WBP_Title_C_SetupFooter, CallFunc_CanChangeTitleScreen_ReturnValue) == 0x000000, "Member 'WBP_Title_C_SetupFooter::CallFunc_CanChangeTitleScreen_ReturnValue' has a wrong offset!");

// Function WBP_Title.WBP_Title_C.SetupMenuButtons
// 0x0005 (0x0005 - 0x0000)
struct WBP_Title_C_SetupMenuButtons final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPCBuild_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Title_C_SetupMenuButtons) == 0x000001, "Wrong alignment on WBP_Title_C_SetupMenuButtons");
static_assert(sizeof(WBP_Title_C_SetupMenuButtons) == 0x000005, "Wrong size on WBP_Title_C_SetupMenuButtons");
static_assert(offsetof(WBP_Title_C_SetupMenuButtons, Temp_bool_Variable) == 0x000000, "Member 'WBP_Title_C_SetupMenuButtons::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_SetupMenuButtons, Temp_byte_Variable) == 0x000001, "Member 'WBP_Title_C_SetupMenuButtons::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_SetupMenuButtons, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_Title_C_SetupMenuButtons::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_SetupMenuButtons, CallFunc_IsPCBuild_ReturnValue) == 0x000003, "Member 'WBP_Title_C_SetupMenuButtons::CallFunc_IsPCBuild_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_SetupMenuButtons, K2Node_Select_Default) == 0x000004, "Member 'WBP_Title_C_SetupMenuButtons::K2Node_Select_Default' has a wrong offset!");

// Function WBP_Title.WBP_Title_C.SetupVersion
// 0x0050 (0x0050 - 0x0000)
struct WBP_Title_C_SetupVersion final
{
public:
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDemoBuild_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEarlyAccessBuild_ReturnValue;           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesGameVersionMatchesPakVersion_ReturnValue; // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetGameBuildNumber_ReturnValue;           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0018(0x0010)()
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetGameVersion_ReturnValue;               // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0040(0x0010)()
};
static_assert(alignof(WBP_Title_C_SetupVersion) == 0x000008, "Wrong alignment on WBP_Title_C_SetupVersion");
static_assert(sizeof(WBP_Title_C_SetupVersion) == 0x000050, "Wrong size on WBP_Title_C_SetupVersion");
static_assert(offsetof(WBP_Title_C_SetupVersion, Temp_byte_Variable) == 0x000000, "Member 'WBP_Title_C_SetupVersion::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_SetupVersion, Temp_byte_Variable_1) == 0x000001, "Member 'WBP_Title_C_SetupVersion::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_SetupVersion, Temp_bool_Variable) == 0x000002, "Member 'WBP_Title_C_SetupVersion::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_SetupVersion, Temp_byte_Variable_2) == 0x000003, "Member 'WBP_Title_C_SetupVersion::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_SetupVersion, Temp_byte_Variable_3) == 0x000004, "Member 'WBP_Title_C_SetupVersion::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_SetupVersion, Temp_bool_Variable_1) == 0x000005, "Member 'WBP_Title_C_SetupVersion::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_SetupVersion, Temp_byte_Variable_4) == 0x000006, "Member 'WBP_Title_C_SetupVersion::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_SetupVersion, Temp_byte_Variable_5) == 0x000007, "Member 'WBP_Title_C_SetupVersion::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_SetupVersion, CallFunc_IsDemoBuild_ReturnValue) == 0x000008, "Member 'WBP_Title_C_SetupVersion::CallFunc_IsDemoBuild_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_SetupVersion, CallFunc_IsEarlyAccessBuild_ReturnValue) == 0x000009, "Member 'WBP_Title_C_SetupVersion::CallFunc_IsEarlyAccessBuild_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_SetupVersion, Temp_bool_Variable_2) == 0x00000A, "Member 'WBP_Title_C_SetupVersion::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_SetupVersion, K2Node_Select_Default) == 0x00000B, "Member 'WBP_Title_C_SetupVersion::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_SetupVersion, K2Node_Select_Default_1) == 0x00000C, "Member 'WBP_Title_C_SetupVersion::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_SetupVersion, CallFunc_DoesGameVersionMatchesPakVersion_ReturnValue) == 0x00000D, "Member 'WBP_Title_C_SetupVersion::CallFunc_DoesGameVersionMatchesPakVersion_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_SetupVersion, CallFunc_GetGameBuildNumber_ReturnValue) == 0x000010, "Member 'WBP_Title_C_SetupVersion::CallFunc_GetGameBuildNumber_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_SetupVersion, CallFunc_Conv_IntToText_ReturnValue) == 0x000018, "Member 'WBP_Title_C_SetupVersion::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_SetupVersion, K2Node_Select_Default_2) == 0x000028, "Member 'WBP_Title_C_SetupVersion::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_SetupVersion, CallFunc_GetGameVersion_ReturnValue) == 0x000030, "Member 'WBP_Title_C_SetupVersion::CallFunc_GetGameVersion_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Title_C_SetupVersion, CallFunc_Conv_StringToText_ReturnValue) == 0x000040, "Member 'WBP_Title_C_SetupVersion::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

}

