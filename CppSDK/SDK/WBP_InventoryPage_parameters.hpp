#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_InventoryPage

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Zion_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_InventoryPage.WBP_InventoryPage_C.AddChildToContainer
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventoryPage_C_AddChildToContainer final
{
public:
	class UWidget*                                Content;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryPage_C_AddChildToContainer) == 0x000008, "Wrong alignment on WBP_InventoryPage_C_AddChildToContainer");
static_assert(sizeof(WBP_InventoryPage_C_AddChildToContainer) == 0x000008, "Wrong size on WBP_InventoryPage_C_AddChildToContainer");
static_assert(offsetof(WBP_InventoryPage_C_AddChildToContainer, Content) == 0x000000, "Member 'WBP_InventoryPage_C_AddChildToContainer::Content' has a wrong offset!");

// Function WBP_InventoryPage.WBP_InventoryPage_C.CanShowInventoryItem
// 0x0188 (0x0188 - 0x0000)
struct WBP_InventoryPage_C_CanShowInventoryItem final
{
public:
	struct FDataTableRowHandle                    Handle;                                            // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	bool                                          bCanShow;                                          // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInventoryItemData                     CallFunc_GetInventoryItemData_out_ItemData;        // 0x0018(0x0168)()
	bool                                          CallFunc_GetInventoryItemData_ReturnValue;         // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckGameplayCondition_ReturnValue;       // 0x0182(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0183(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryPage_C_CanShowInventoryItem) == 0x000008, "Wrong alignment on WBP_InventoryPage_C_CanShowInventoryItem");
static_assert(sizeof(WBP_InventoryPage_C_CanShowInventoryItem) == 0x000188, "Wrong size on WBP_InventoryPage_C_CanShowInventoryItem");
static_assert(offsetof(WBP_InventoryPage_C_CanShowInventoryItem, Handle) == 0x000000, "Member 'WBP_InventoryPage_C_CanShowInventoryItem::Handle' has a wrong offset!");
static_assert(offsetof(WBP_InventoryPage_C_CanShowInventoryItem, bCanShow) == 0x000010, "Member 'WBP_InventoryPage_C_CanShowInventoryItem::bCanShow' has a wrong offset!");
static_assert(offsetof(WBP_InventoryPage_C_CanShowInventoryItem, CallFunc_GetInventoryItemData_out_ItemData) == 0x000018, "Member 'WBP_InventoryPage_C_CanShowInventoryItem::CallFunc_GetInventoryItemData_out_ItemData' has a wrong offset!");
static_assert(offsetof(WBP_InventoryPage_C_CanShowInventoryItem, CallFunc_GetInventoryItemData_ReturnValue) == 0x000180, "Member 'WBP_InventoryPage_C_CanShowInventoryItem::CallFunc_GetInventoryItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryPage_C_CanShowInventoryItem, CallFunc_IsValidClass_ReturnValue) == 0x000181, "Member 'WBP_InventoryPage_C_CanShowInventoryItem::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryPage_C_CanShowInventoryItem, CallFunc_CheckGameplayCondition_ReturnValue) == 0x000182, "Member 'WBP_InventoryPage_C_CanShowInventoryItem::CallFunc_CheckGameplayCondition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryPage_C_CanShowInventoryItem, CallFunc_Not_PreBool_ReturnValue) == 0x000183, "Member 'WBP_InventoryPage_C_CanShowInventoryItem::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WBP_InventoryPage.WBP_InventoryPage_C.CreateList
// 0x00F8 (0x00F8 - 0x0000)
struct WBP_InventoryPage_C_CreateList final
{
public:
	class UInventoryComponent*                    Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EInventoryItemType                            ItemType_0;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    ItemHandle;                                        // 0x0010(0x0010)(Edit, BlueprintVisible, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventory*                             CallFunc_GetInventoryFromItemType_ReturnValue;     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UDataTable*                       CallFunc_GetDataTable_ReturnValue;                 // 0x0030(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, int32>                      CallFunc_GetAllItems_ReturnValue;                  // 0x0038(0x0050)(ConstParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0090(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle;              // 0x00B8(0x0010)(NoDestructor)
	bool                                          CallFunc_CanShowInventoryItem_bCanShow;            // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_InventoryEntry_C*                  CallFunc_Create_ReturnValue;                       // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWBP_InventoryEntry_C* Entry)> K2Node_CreateDelegate_OutputDelegate;        // 0x00D8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryPage_C_CreateList) == 0x000008, "Wrong alignment on WBP_InventoryPage_C_CreateList");
static_assert(sizeof(WBP_InventoryPage_C_CreateList) == 0x0000F8, "Wrong size on WBP_InventoryPage_C_CreateList");
static_assert(offsetof(WBP_InventoryPage_C_CreateList, Target) == 0x000000, "Member 'WBP_InventoryPage_C_CreateList::Target' has a wrong offset!");
static_assert(offsetof(WBP_InventoryPage_C_CreateList, ItemType_0) == 0x000008, "Member 'WBP_InventoryPage_C_CreateList::ItemType_0' has a wrong offset!");
static_assert(offsetof(WBP_InventoryPage_C_CreateList, ItemHandle) == 0x000010, "Member 'WBP_InventoryPage_C_CreateList::ItemHandle' has a wrong offset!");
static_assert(offsetof(WBP_InventoryPage_C_CreateList, Temp_int_Array_Index_Variable) == 0x000020, "Member 'WBP_InventoryPage_C_CreateList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryPage_C_CreateList, CallFunc_GetInventoryFromItemType_ReturnValue) == 0x000028, "Member 'WBP_InventoryPage_C_CreateList::CallFunc_GetInventoryFromItemType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryPage_C_CreateList, CallFunc_GetDataTable_ReturnValue) == 0x000030, "Member 'WBP_InventoryPage_C_CreateList::CallFunc_GetDataTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryPage_C_CreateList, CallFunc_GetAllItems_ReturnValue) == 0x000038, "Member 'WBP_InventoryPage_C_CreateList::CallFunc_GetAllItems_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryPage_C_CreateList, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'WBP_InventoryPage_C_CreateList::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryPage_C_CreateList, CallFunc_Map_Keys_Keys) == 0x000090, "Member 'WBP_InventoryPage_C_CreateList::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(WBP_InventoryPage_C_CreateList, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'WBP_InventoryPage_C_CreateList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_InventoryPage_C_CreateList, CallFunc_Array_Length_ReturnValue) == 0x0000A8, "Member 'WBP_InventoryPage_C_CreateList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryPage_C_CreateList, CallFunc_Map_Find_Value) == 0x0000AC, "Member 'WBP_InventoryPage_C_CreateList::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_InventoryPage_C_CreateList, CallFunc_Map_Find_ReturnValue) == 0x0000B0, "Member 'WBP_InventoryPage_C_CreateList::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryPage_C_CreateList, K2Node_MakeStruct_DataTableRowHandle) == 0x0000B8, "Member 'WBP_InventoryPage_C_CreateList::K2Node_MakeStruct_DataTableRowHandle' has a wrong offset!");
static_assert(offsetof(WBP_InventoryPage_C_CreateList, CallFunc_CanShowInventoryItem_bCanShow) == 0x0000C8, "Member 'WBP_InventoryPage_C_CreateList::CallFunc_CanShowInventoryItem_bCanShow' has a wrong offset!");
static_assert(offsetof(WBP_InventoryPage_C_CreateList, CallFunc_Create_ReturnValue) == 0x0000D0, "Member 'WBP_InventoryPage_C_CreateList::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryPage_C_CreateList, K2Node_CreateDelegate_OutputDelegate) == 0x0000D8, "Member 'WBP_InventoryPage_C_CreateList::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_InventoryPage_C_CreateList, Temp_int_Loop_Counter_Variable) == 0x0000E8, "Member 'WBP_InventoryPage_C_CreateList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryPage_C_CreateList, CallFunc_Less_IntInt_ReturnValue) == 0x0000EC, "Member 'WBP_InventoryPage_C_CreateList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryPage_C_CreateList, CallFunc_Add_IntInt_ReturnValue) == 0x0000F0, "Member 'WBP_InventoryPage_C_CreateList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_InventoryPage.WBP_InventoryPage_C.ExecuteUbergraph_WBP_InventoryPage
// 0x0018 (0x0018 - 0x0000)
struct WBP_InventoryPage_C_ExecuteUbergraph_WBP_InventoryPage final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_InventoryEntry_C*                  K2Node_CustomEvent_Entry;                          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerControllerZion*                  CallFunc_Get_ReturnValue;                          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryPage_C_ExecuteUbergraph_WBP_InventoryPage) == 0x000008, "Wrong alignment on WBP_InventoryPage_C_ExecuteUbergraph_WBP_InventoryPage");
static_assert(sizeof(WBP_InventoryPage_C_ExecuteUbergraph_WBP_InventoryPage) == 0x000018, "Wrong size on WBP_InventoryPage_C_ExecuteUbergraph_WBP_InventoryPage");
static_assert(offsetof(WBP_InventoryPage_C_ExecuteUbergraph_WBP_InventoryPage, EntryPoint) == 0x000000, "Member 'WBP_InventoryPage_C_ExecuteUbergraph_WBP_InventoryPage::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_InventoryPage_C_ExecuteUbergraph_WBP_InventoryPage, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'WBP_InventoryPage_C_ExecuteUbergraph_WBP_InventoryPage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryPage_C_ExecuteUbergraph_WBP_InventoryPage, K2Node_CustomEvent_Entry) == 0x000008, "Member 'WBP_InventoryPage_C_ExecuteUbergraph_WBP_InventoryPage::K2Node_CustomEvent_Entry' has a wrong offset!");
static_assert(offsetof(WBP_InventoryPage_C_ExecuteUbergraph_WBP_InventoryPage, CallFunc_Get_ReturnValue) == 0x000010, "Member 'WBP_InventoryPage_C_ExecuteUbergraph_WBP_InventoryPage::CallFunc_Get_ReturnValue' has a wrong offset!");

// Function WBP_InventoryPage.WBP_InventoryPage_C.FocusEntryInRowAtIndex
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventoryPage_C_FocusEntryInRowAtIndex final
{
public:
	bool                                          bFromTop;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         IndexInRow;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryPage_C_FocusEntryInRowAtIndex) == 0x000004, "Wrong alignment on WBP_InventoryPage_C_FocusEntryInRowAtIndex");
static_assert(sizeof(WBP_InventoryPage_C_FocusEntryInRowAtIndex) == 0x000008, "Wrong size on WBP_InventoryPage_C_FocusEntryInRowAtIndex");
static_assert(offsetof(WBP_InventoryPage_C_FocusEntryInRowAtIndex, bFromTop) == 0x000000, "Member 'WBP_InventoryPage_C_FocusEntryInRowAtIndex::bFromTop' has a wrong offset!");
static_assert(offsetof(WBP_InventoryPage_C_FocusEntryInRowAtIndex, IndexInRow) == 0x000004, "Member 'WBP_InventoryPage_C_FocusEntryInRowAtIndex::IndexInRow' has a wrong offset!");

// Function WBP_InventoryPage.WBP_InventoryPage_C.GetItemHolder
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventoryPage_C_GetItemHolder final
{
public:
	class UPanelWidget*                           ItemHolder;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryPage_C_GetItemHolder) == 0x000008, "Wrong alignment on WBP_InventoryPage_C_GetItemHolder");
static_assert(sizeof(WBP_InventoryPage_C_GetItemHolder) == 0x000008, "Wrong size on WBP_InventoryPage_C_GetItemHolder");
static_assert(offsetof(WBP_InventoryPage_C_GetItemHolder, ItemHolder) == 0x000000, "Member 'WBP_InventoryPage_C_GetItemHolder::ItemHolder' has a wrong offset!");

// Function WBP_InventoryPage.WBP_InventoryPage_C.OnFocusReceived
// 0x01C8 (0x01C8 - 0x0000)
struct WBP_InventoryPage_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	class UPanelWidget*                           CallFunc_GetItemHolder_ItemHolder;                 // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0100(0x00B8)()
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyChildren_ReturnValue;               // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryPage_C_OnFocusReceived) == 0x000008, "Wrong alignment on WBP_InventoryPage_C_OnFocusReceived");
static_assert(sizeof(WBP_InventoryPage_C_OnFocusReceived) == 0x0001C8, "Wrong size on WBP_InventoryPage_C_OnFocusReceived");
static_assert(offsetof(WBP_InventoryPage_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'WBP_InventoryPage_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_InventoryPage_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'WBP_InventoryPage_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(WBP_InventoryPage_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'WBP_InventoryPage_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryPage_C_OnFocusReceived, CallFunc_GetItemHolder_ItemHolder) == 0x0000F8, "Member 'WBP_InventoryPage_C_OnFocusReceived::CallFunc_GetItemHolder_ItemHolder' has a wrong offset!");
static_assert(offsetof(WBP_InventoryPage_C_OnFocusReceived, CallFunc_Handled_ReturnValue) == 0x000100, "Member 'WBP_InventoryPage_C_OnFocusReceived::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryPage_C_OnFocusReceived, CallFunc_GetChildAt_ReturnValue) == 0x0001B8, "Member 'WBP_InventoryPage_C_OnFocusReceived::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryPage_C_OnFocusReceived, CallFunc_HasAnyChildren_ReturnValue) == 0x0001C0, "Member 'WBP_InventoryPage_C_OnFocusReceived::CallFunc_HasAnyChildren_ReturnValue' has a wrong offset!");

// Function WBP_InventoryPage.WBP_InventoryPage_C.OnItemFocused
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventoryPage_C_OnItemFocused final
{
public:
	class UWBP_InventoryEntry_C*                  Entry;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryPage_C_OnItemFocused) == 0x000008, "Wrong alignment on WBP_InventoryPage_C_OnItemFocused");
static_assert(sizeof(WBP_InventoryPage_C_OnItemFocused) == 0x000008, "Wrong size on WBP_InventoryPage_C_OnItemFocused");
static_assert(offsetof(WBP_InventoryPage_C_OnItemFocused, Entry) == 0x000000, "Member 'WBP_InventoryPage_C_OnItemFocused::Entry' has a wrong offset!");

}

