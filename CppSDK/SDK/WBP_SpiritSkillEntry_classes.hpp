#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_SpiritSkillEntry

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Zion_structs.hpp"
#include "Zion_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_SpiritSkillEntry.WBP_SpiritSkillEntry_C
// 0x0168 (0x05E8 - 0x0480)
class UWBP_SpiritSkillEntry_C final : public UUserWidgetButton
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0480(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Focused;                                           // 0x0488(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UNamedSlot*                             AttachSlot;                                        // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BG;                                                // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URefreshableRichTextBlock*              ButtonText;                                        // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Ef_BG;                                             // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 EquippedBG;                                        // 0x04B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x04B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_1;                                           // 0x04C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_2;                                           // 0x04C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_97;                                          // 0x04D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_NewContainer;                              // 0x04D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_UnlockAlreadyMax;                          // 0x04E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_UnlockAvailableContainer;                  // 0x04E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_UnlockNotAvailableContainer;               // 0x04F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               OverlayEquippedBackContainer;                      // 0x04F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               OverlayEquippedFrontContainer;                     // 0x0500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               OverlayFocusedContainer;                           // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               OverlaySelectedContainer;                          // 0x0510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               OverlaySkillContainer;                             // 0x0518(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               OverlaySkillUnlockContainer;                       // 0x0520(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               OverlaySpecialContainer;                           // 0x0528(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SkillIcon;                                         // 0x0530(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SpecialSkillIcon;                                  // 0x0538(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_SkillRank_C*                       WBP_SkillRank;                                     // 0x0540(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_SkillUnlock;                        // 0x0548(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USkillComponent*                        SkillComponent;                                    // 0x0550(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	struct FDataTableRowHandle                    Skill_Data;                                        // 0x0558(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	TMulticastInlineDelegate<void(class UWBP_SpiritSkillEntry_C* SpiritSkillEntry)> OnSpiritSkillPressed; // 0x0568(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class UWBP_SpiritSkillEntry_C* SpiritSkillEntry)> OnSpiritSkillFocused; // 0x0578(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bDisplayUnlockStatus;                              // 0x0588(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_589[0x3];                                      // 0x0589(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            Color_Locked_BG;                                   // 0x058C(0x0014)(Edit, BlueprintVisible, BlueprintReadOnly)
	struct FSlateColor                            Color_Locked_SkillIcon;                            // 0x05A0(0x0014)(Edit, BlueprintVisible, BlueprintReadOnly)
	struct FSlateColor                            Color_Unlocked_BG;                                 // 0x05B4(0x0014)(Edit, BlueprintVisible, BlueprintReadOnly)
	struct FSlateColor                            Color_Unlocked_SkillIcon;                          // 0x05C8(0x0014)(Edit, BlueprintVisible, BlueprintReadOnly)
	bool                                          bHasItem;                                          // 0x05DC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	uint8                                         Pad_5DD[0x3];                                      // 0x05DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryComponent*                    InventoryComponent;                                // 0x05E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, NoDestructor, AdvancedDisplay, UObjectWrapper, HasGetValueTypeHash)

public:
	void Construct();
	void Destruct();
	void ExecuteUbergraph_WBP_SpiritSkillEntry(int32 EntryPoint);
	void Initialize(const struct FDataTableRowHandle& SkillData, bool bDisplayUnlockStatus_0);
	void IsValidEntry(bool* IsValid);
	struct FEventReply OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent);
	void OnFocusStateChanged(bool bFocused);
	struct FEventReply OnPressConfirm(const struct FKeyEvent& KeyEvent);
	void PreConstruct(bool IsDesignTime);
	void Refresh();
	void RefreshColors(bool Unlocked);
	void RefreshNewVisibility();
	void SetFocusedState(bool Focus);
	void SetSelected(bool bSelected);
	void SetSpecialVisible(bool bVisible);
	void SetupButtonText(EActionInputType InputType);
	void SetupSkillRank(const struct FInventoryItemSkillData& ItemSkillData, const class FName& SkillID);
	void TryMarkItemAsChecked();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_SpiritSkillEntry_C">();
	}
	static class UWBP_SpiritSkillEntry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_SpiritSkillEntry_C>();
	}
};
static_assert(alignof(UWBP_SpiritSkillEntry_C) == 0x000008, "Wrong alignment on UWBP_SpiritSkillEntry_C");
static_assert(sizeof(UWBP_SpiritSkillEntry_C) == 0x0005E8, "Wrong size on UWBP_SpiritSkillEntry_C");
static_assert(offsetof(UWBP_SpiritSkillEntry_C, UberGraphFrame) == 0x000480, "Member 'UWBP_SpiritSkillEntry_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_SpiritSkillEntry_C, Focused) == 0x000488, "Member 'UWBP_SpiritSkillEntry_C::Focused' has a wrong offset!");
static_assert(offsetof(UWBP_SpiritSkillEntry_C, AttachSlot) == 0x000490, "Member 'UWBP_SpiritSkillEntry_C::AttachSlot' has a wrong offset!");
static_assert(offsetof(UWBP_SpiritSkillEntry_C, BG) == 0x000498, "Member 'UWBP_SpiritSkillEntry_C::BG' has a wrong offset!");
static_assert(offsetof(UWBP_SpiritSkillEntry_C, ButtonText) == 0x0004A0, "Member 'UWBP_SpiritSkillEntry_C::ButtonText' has a wrong offset!");
static_assert(offsetof(UWBP_SpiritSkillEntry_C, Ef_BG) == 0x0004A8, "Member 'UWBP_SpiritSkillEntry_C::Ef_BG' has a wrong offset!");
static_assert(offsetof(UWBP_SpiritSkillEntry_C, EquippedBG) == 0x0004B0, "Member 'UWBP_SpiritSkillEntry_C::EquippedBG' has a wrong offset!");
static_assert(offsetof(UWBP_SpiritSkillEntry_C, Image) == 0x0004B8, "Member 'UWBP_SpiritSkillEntry_C::Image' has a wrong offset!");
static_assert(offsetof(UWBP_SpiritSkillEntry_C, Image_1) == 0x0004C0, "Member 'UWBP_SpiritSkillEntry_C::Image_1' has a wrong offset!");
static_assert(offsetof(UWBP_SpiritSkillEntry_C, Image_2) == 0x0004C8, "Member 'UWBP_SpiritSkillEntry_C::Image_2' has a wrong offset!");
static_assert(offsetof(UWBP_SpiritSkillEntry_C, Image_97) == 0x0004D0, "Member 'UWBP_SpiritSkillEntry_C::Image_97' has a wrong offset!");
static_assert(offsetof(UWBP_SpiritSkillEntry_C, Overlay_NewContainer) == 0x0004D8, "Member 'UWBP_SpiritSkillEntry_C::Overlay_NewContainer' has a wrong offset!");
static_assert(offsetof(UWBP_SpiritSkillEntry_C, Overlay_UnlockAlreadyMax) == 0x0004E0, "Member 'UWBP_SpiritSkillEntry_C::Overlay_UnlockAlreadyMax' has a wrong offset!");
static_assert(offsetof(UWBP_SpiritSkillEntry_C, Overlay_UnlockAvailableContainer) == 0x0004E8, "Member 'UWBP_SpiritSkillEntry_C::Overlay_UnlockAvailableContainer' has a wrong offset!");
static_assert(offsetof(UWBP_SpiritSkillEntry_C, Overlay_UnlockNotAvailableContainer) == 0x0004F0, "Member 'UWBP_SpiritSkillEntry_C::Overlay_UnlockNotAvailableContainer' has a wrong offset!");
static_assert(offsetof(UWBP_SpiritSkillEntry_C, OverlayEquippedBackContainer) == 0x0004F8, "Member 'UWBP_SpiritSkillEntry_C::OverlayEquippedBackContainer' has a wrong offset!");
static_assert(offsetof(UWBP_SpiritSkillEntry_C, OverlayEquippedFrontContainer) == 0x000500, "Member 'UWBP_SpiritSkillEntry_C::OverlayEquippedFrontContainer' has a wrong offset!");
static_assert(offsetof(UWBP_SpiritSkillEntry_C, OverlayFocusedContainer) == 0x000508, "Member 'UWBP_SpiritSkillEntry_C::OverlayFocusedContainer' has a wrong offset!");
static_assert(offsetof(UWBP_SpiritSkillEntry_C, OverlaySelectedContainer) == 0x000510, "Member 'UWBP_SpiritSkillEntry_C::OverlaySelectedContainer' has a wrong offset!");
static_assert(offsetof(UWBP_SpiritSkillEntry_C, OverlaySkillContainer) == 0x000518, "Member 'UWBP_SpiritSkillEntry_C::OverlaySkillContainer' has a wrong offset!");
static_assert(offsetof(UWBP_SpiritSkillEntry_C, OverlaySkillUnlockContainer) == 0x000520, "Member 'UWBP_SpiritSkillEntry_C::OverlaySkillUnlockContainer' has a wrong offset!");
static_assert(offsetof(UWBP_SpiritSkillEntry_C, OverlaySpecialContainer) == 0x000528, "Member 'UWBP_SpiritSkillEntry_C::OverlaySpecialContainer' has a wrong offset!");
static_assert(offsetof(UWBP_SpiritSkillEntry_C, SkillIcon) == 0x000530, "Member 'UWBP_SpiritSkillEntry_C::SkillIcon' has a wrong offset!");
static_assert(offsetof(UWBP_SpiritSkillEntry_C, SpecialSkillIcon) == 0x000538, "Member 'UWBP_SpiritSkillEntry_C::SpecialSkillIcon' has a wrong offset!");
static_assert(offsetof(UWBP_SpiritSkillEntry_C, WBP_SkillRank) == 0x000540, "Member 'UWBP_SpiritSkillEntry_C::WBP_SkillRank' has a wrong offset!");
static_assert(offsetof(UWBP_SpiritSkillEntry_C, WidgetSwitcher_SkillUnlock) == 0x000548, "Member 'UWBP_SpiritSkillEntry_C::WidgetSwitcher_SkillUnlock' has a wrong offset!");
static_assert(offsetof(UWBP_SpiritSkillEntry_C, SkillComponent) == 0x000550, "Member 'UWBP_SpiritSkillEntry_C::SkillComponent' has a wrong offset!");
static_assert(offsetof(UWBP_SpiritSkillEntry_C, Skill_Data) == 0x000558, "Member 'UWBP_SpiritSkillEntry_C::Skill_Data' has a wrong offset!");
static_assert(offsetof(UWBP_SpiritSkillEntry_C, OnSpiritSkillPressed) == 0x000568, "Member 'UWBP_SpiritSkillEntry_C::OnSpiritSkillPressed' has a wrong offset!");
static_assert(offsetof(UWBP_SpiritSkillEntry_C, OnSpiritSkillFocused) == 0x000578, "Member 'UWBP_SpiritSkillEntry_C::OnSpiritSkillFocused' has a wrong offset!");
static_assert(offsetof(UWBP_SpiritSkillEntry_C, bDisplayUnlockStatus) == 0x000588, "Member 'UWBP_SpiritSkillEntry_C::bDisplayUnlockStatus' has a wrong offset!");
static_assert(offsetof(UWBP_SpiritSkillEntry_C, Color_Locked_BG) == 0x00058C, "Member 'UWBP_SpiritSkillEntry_C::Color_Locked_BG' has a wrong offset!");
static_assert(offsetof(UWBP_SpiritSkillEntry_C, Color_Locked_SkillIcon) == 0x0005A0, "Member 'UWBP_SpiritSkillEntry_C::Color_Locked_SkillIcon' has a wrong offset!");
static_assert(offsetof(UWBP_SpiritSkillEntry_C, Color_Unlocked_BG) == 0x0005B4, "Member 'UWBP_SpiritSkillEntry_C::Color_Unlocked_BG' has a wrong offset!");
static_assert(offsetof(UWBP_SpiritSkillEntry_C, Color_Unlocked_SkillIcon) == 0x0005C8, "Member 'UWBP_SpiritSkillEntry_C::Color_Unlocked_SkillIcon' has a wrong offset!");
static_assert(offsetof(UWBP_SpiritSkillEntry_C, bHasItem) == 0x0005DC, "Member 'UWBP_SpiritSkillEntry_C::bHasItem' has a wrong offset!");
static_assert(offsetof(UWBP_SpiritSkillEntry_C, InventoryComponent) == 0x0005E0, "Member 'UWBP_SpiritSkillEntry_C::InventoryComponent' has a wrong offset!");

}

