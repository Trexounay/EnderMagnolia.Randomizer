#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_WorldSpace_Gauge

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Zion_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_WorldSpace_Gauge.WBP_WorldSpace_Gauge_C
// 0x0120 (0x0438 - 0x0318)
class UWBP_WorldSpace_Gauge_C final : public UUserWidgetWorldSpaceGauge
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0318(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       StaminaRestore;                                    // 0x0320(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       StaminaBreak;                                      // 0x0328(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       StaminaDamage;                                     // 0x0330(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       HPDamage;                                          // 0x0338(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Destroy;                                           // 0x0340(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Show_WBP_WorldSpace_Gauge_C;                       // 0x0348(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 BreakLight;                                        // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           BurnBar;                                           // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DecreaseEffect;                                    // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           FreezeBar;                                         // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               GlobalSizeBox;                                     // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           HPBar;                                             // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           HPBarDelayed;                                      // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           HPBarFrame;                                        // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USlider*                                HPSlider;                                          // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNiagaraSystemWidget*                   NiagaraSystemWidget_209;                           // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_SettingsVisibility;                        // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           ShockBar;                                          // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Burn;                                      // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Freeze;                                    // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Shock;                                     // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Stamina;                                   // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Stamina;                                           // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           StaminaBar;                                        // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 StaminaInvincibilityLayer;                         // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UStatHPComponent*                       HPComponent;                                       // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UStatStaminaComponent*                  StaminaComponent;                                  // 0x03F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UObject*                                StunComponent;                                     // 0x03F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UStatBurnComponent*                     BurnComponent;                                     // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UStatFreezeComponent*                   FreezeComponent;                                   // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UDeathComponent*                        DeathComponent;                                    // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        PrevStaminaRatio;                                  // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	double                                        PrevHPRatio;                                       // 0x0420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class UStatShockComponent*                    ShockComponent;                                    // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Target;                                            // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void BindBurnEvents(class AActor* Target_0);
	void BindFreezeEvents(class AActor* Target_0);
	void BindHPEvents(class AActor* Actor);
	void BindShockEvents(class AActor* Target_0);
	void BindStaminaEvents(class AActor* Target_0);
	bool CanShow();
	void Construct();
	void Destruct();
	void ExecuteUbergraph_WBP_WorldSpace_Gauge(int32 EntryPoint);
	void OnBurnChanged();
	void OnEndPlay(class AActor* Actor, EEndPlayReason EndPlayReason);
	void OnFreezeChanged();
	void OnGameSettingsChanged();
	void OnHPChanged();
	void OnShockChanged();
	void OnStaminaBreak();
	void OnStaminaChanged();
	void OnStaminaInvincibilityEnd();
	void OnStaminaInvincibilityStart();
	void RefreshSettingsVisibility();
	void SequenceEvent();
	void SequenceEvent__ENTRYPOINTWBP_WorldSpace_Gauge();
	void SetStaminaDecreaseEffect(double NewStaminaRatio);
	void SetTargetActor(class AActor* Actor);
	void TryShow();
	void UnbindBurnEvents();
	void UnbindFreezeEvents();
	void UnbindHPEvents();
	void UnbindShockEvents();
	void UnbindStaminaEvents();
	void WidgetAnimationEvt_Destroy_K2Node_WidgetAnimationEvent_0();
	void WidgetAnimationEvt_HPDamage_K2Node_WidgetAnimationEvent_2();
	void WidgetAnimationEvt_StaminaDamage_K2Node_WidgetAnimationEvent_1();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_WorldSpace_Gauge_C">();
	}
	static class UWBP_WorldSpace_Gauge_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_WorldSpace_Gauge_C>();
	}
};
static_assert(alignof(UWBP_WorldSpace_Gauge_C) == 0x000008, "Wrong alignment on UWBP_WorldSpace_Gauge_C");
static_assert(sizeof(UWBP_WorldSpace_Gauge_C) == 0x000438, "Wrong size on UWBP_WorldSpace_Gauge_C");
static_assert(offsetof(UWBP_WorldSpace_Gauge_C, UberGraphFrame) == 0x000318, "Member 'UWBP_WorldSpace_Gauge_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_WorldSpace_Gauge_C, StaminaRestore) == 0x000320, "Member 'UWBP_WorldSpace_Gauge_C::StaminaRestore' has a wrong offset!");
static_assert(offsetof(UWBP_WorldSpace_Gauge_C, StaminaBreak) == 0x000328, "Member 'UWBP_WorldSpace_Gauge_C::StaminaBreak' has a wrong offset!");
static_assert(offsetof(UWBP_WorldSpace_Gauge_C, StaminaDamage) == 0x000330, "Member 'UWBP_WorldSpace_Gauge_C::StaminaDamage' has a wrong offset!");
static_assert(offsetof(UWBP_WorldSpace_Gauge_C, HPDamage) == 0x000338, "Member 'UWBP_WorldSpace_Gauge_C::HPDamage' has a wrong offset!");
static_assert(offsetof(UWBP_WorldSpace_Gauge_C, Destroy) == 0x000340, "Member 'UWBP_WorldSpace_Gauge_C::Destroy' has a wrong offset!");
static_assert(offsetof(UWBP_WorldSpace_Gauge_C, Show_WBP_WorldSpace_Gauge_C) == 0x000348, "Member 'UWBP_WorldSpace_Gauge_C::Show_WBP_WorldSpace_Gauge_C' has a wrong offset!");
static_assert(offsetof(UWBP_WorldSpace_Gauge_C, BreakLight) == 0x000350, "Member 'UWBP_WorldSpace_Gauge_C::BreakLight' has a wrong offset!");
static_assert(offsetof(UWBP_WorldSpace_Gauge_C, BurnBar) == 0x000358, "Member 'UWBP_WorldSpace_Gauge_C::BurnBar' has a wrong offset!");
static_assert(offsetof(UWBP_WorldSpace_Gauge_C, DecreaseEffect) == 0x000360, "Member 'UWBP_WorldSpace_Gauge_C::DecreaseEffect' has a wrong offset!");
static_assert(offsetof(UWBP_WorldSpace_Gauge_C, FreezeBar) == 0x000368, "Member 'UWBP_WorldSpace_Gauge_C::FreezeBar' has a wrong offset!");
static_assert(offsetof(UWBP_WorldSpace_Gauge_C, GlobalSizeBox) == 0x000370, "Member 'UWBP_WorldSpace_Gauge_C::GlobalSizeBox' has a wrong offset!");
static_assert(offsetof(UWBP_WorldSpace_Gauge_C, HPBar) == 0x000378, "Member 'UWBP_WorldSpace_Gauge_C::HPBar' has a wrong offset!");
static_assert(offsetof(UWBP_WorldSpace_Gauge_C, HPBarDelayed) == 0x000380, "Member 'UWBP_WorldSpace_Gauge_C::HPBarDelayed' has a wrong offset!");
static_assert(offsetof(UWBP_WorldSpace_Gauge_C, HPBarFrame) == 0x000388, "Member 'UWBP_WorldSpace_Gauge_C::HPBarFrame' has a wrong offset!");
static_assert(offsetof(UWBP_WorldSpace_Gauge_C, HPSlider) == 0x000390, "Member 'UWBP_WorldSpace_Gauge_C::HPSlider' has a wrong offset!");
static_assert(offsetof(UWBP_WorldSpace_Gauge_C, NiagaraSystemWidget_209) == 0x000398, "Member 'UWBP_WorldSpace_Gauge_C::NiagaraSystemWidget_209' has a wrong offset!");
static_assert(offsetof(UWBP_WorldSpace_Gauge_C, Overlay_SettingsVisibility) == 0x0003A0, "Member 'UWBP_WorldSpace_Gauge_C::Overlay_SettingsVisibility' has a wrong offset!");
static_assert(offsetof(UWBP_WorldSpace_Gauge_C, ShockBar) == 0x0003A8, "Member 'UWBP_WorldSpace_Gauge_C::ShockBar' has a wrong offset!");
static_assert(offsetof(UWBP_WorldSpace_Gauge_C, SizeBox_Burn) == 0x0003B0, "Member 'UWBP_WorldSpace_Gauge_C::SizeBox_Burn' has a wrong offset!");
static_assert(offsetof(UWBP_WorldSpace_Gauge_C, SizeBox_Freeze) == 0x0003B8, "Member 'UWBP_WorldSpace_Gauge_C::SizeBox_Freeze' has a wrong offset!");
static_assert(offsetof(UWBP_WorldSpace_Gauge_C, SizeBox_Shock) == 0x0003C0, "Member 'UWBP_WorldSpace_Gauge_C::SizeBox_Shock' has a wrong offset!");
static_assert(offsetof(UWBP_WorldSpace_Gauge_C, SizeBox_Stamina) == 0x0003C8, "Member 'UWBP_WorldSpace_Gauge_C::SizeBox_Stamina' has a wrong offset!");
static_assert(offsetof(UWBP_WorldSpace_Gauge_C, Stamina) == 0x0003D0, "Member 'UWBP_WorldSpace_Gauge_C::Stamina' has a wrong offset!");
static_assert(offsetof(UWBP_WorldSpace_Gauge_C, StaminaBar) == 0x0003D8, "Member 'UWBP_WorldSpace_Gauge_C::StaminaBar' has a wrong offset!");
static_assert(offsetof(UWBP_WorldSpace_Gauge_C, StaminaInvincibilityLayer) == 0x0003E0, "Member 'UWBP_WorldSpace_Gauge_C::StaminaInvincibilityLayer' has a wrong offset!");
static_assert(offsetof(UWBP_WorldSpace_Gauge_C, HPComponent) == 0x0003E8, "Member 'UWBP_WorldSpace_Gauge_C::HPComponent' has a wrong offset!");
static_assert(offsetof(UWBP_WorldSpace_Gauge_C, StaminaComponent) == 0x0003F0, "Member 'UWBP_WorldSpace_Gauge_C::StaminaComponent' has a wrong offset!");
static_assert(offsetof(UWBP_WorldSpace_Gauge_C, StunComponent) == 0x0003F8, "Member 'UWBP_WorldSpace_Gauge_C::StunComponent' has a wrong offset!");
static_assert(offsetof(UWBP_WorldSpace_Gauge_C, BurnComponent) == 0x000400, "Member 'UWBP_WorldSpace_Gauge_C::BurnComponent' has a wrong offset!");
static_assert(offsetof(UWBP_WorldSpace_Gauge_C, FreezeComponent) == 0x000408, "Member 'UWBP_WorldSpace_Gauge_C::FreezeComponent' has a wrong offset!");
static_assert(offsetof(UWBP_WorldSpace_Gauge_C, DeathComponent) == 0x000410, "Member 'UWBP_WorldSpace_Gauge_C::DeathComponent' has a wrong offset!");
static_assert(offsetof(UWBP_WorldSpace_Gauge_C, PrevStaminaRatio) == 0x000418, "Member 'UWBP_WorldSpace_Gauge_C::PrevStaminaRatio' has a wrong offset!");
static_assert(offsetof(UWBP_WorldSpace_Gauge_C, PrevHPRatio) == 0x000420, "Member 'UWBP_WorldSpace_Gauge_C::PrevHPRatio' has a wrong offset!");
static_assert(offsetof(UWBP_WorldSpace_Gauge_C, ShockComponent) == 0x000428, "Member 'UWBP_WorldSpace_Gauge_C::ShockComponent' has a wrong offset!");
static_assert(offsetof(UWBP_WorldSpace_Gauge_C, Target) == 0x000430, "Member 'UWBP_WorldSpace_Gauge_C::Target' has a wrong offset!");

}

