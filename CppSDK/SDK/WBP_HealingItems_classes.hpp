#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HealingItems

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Zion_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_HealingItems.WBP_HealingItems_C
// 0x0058 (0x04B8 - 0x0460)
class UWBP_HealingItems_C final : public UUserWidgetZion
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0460(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       NoHealAnimation;                                   // 0x0468(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UOverlay*                               ButtonOverlay;                                     // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URefreshableRichTextBlock*              ButtonText;                                        // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URefreshableRichTextBlock*              ButtonText_Grey;                                   // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWrapBox*                               Container;                                         // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHealComponent*                         Heal_Component;                                    // 0x0490(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class UStatHPComponent*                       HPComponent;                                       // 0x0498(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	TArray<class UWBP_HealingItemIcon_C*>         Items;                                             // 0x04A0(0x0010)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, ContainsInstancedReference, AdvancedDisplay)
	bool                                          IsButtonVisible;                                   // 0x04B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)

public:
	void TriggerNoHealAnimation();
	void RefreshButtonVisibility();
	void RefreshButtonState();
	void OnUseHealingItem();
	void OnRestoreHealingItems(int32 RestoreCount);
	void OnHPChanged();
	void OnHealCountChanged();
	void OnFullyRestoreHealingItems();
	void Initialize(class APawn* Pawn);
	void ExecuteUbergraph_WBP_HealingItems(int32 EntryPoint);
	void BuildItems();
	void BuildItem(bool IsUsed);
	void BindEvents();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_HealingItems_C">();
	}
	static class UWBP_HealingItems_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_HealingItems_C>();
	}
};
static_assert(alignof(UWBP_HealingItems_C) == 0x000008, "Wrong alignment on UWBP_HealingItems_C");
static_assert(sizeof(UWBP_HealingItems_C) == 0x0004B8, "Wrong size on UWBP_HealingItems_C");
static_assert(offsetof(UWBP_HealingItems_C, UberGraphFrame) == 0x000460, "Member 'UWBP_HealingItems_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_HealingItems_C, NoHealAnimation) == 0x000468, "Member 'UWBP_HealingItems_C::NoHealAnimation' has a wrong offset!");
static_assert(offsetof(UWBP_HealingItems_C, ButtonOverlay) == 0x000470, "Member 'UWBP_HealingItems_C::ButtonOverlay' has a wrong offset!");
static_assert(offsetof(UWBP_HealingItems_C, ButtonText) == 0x000478, "Member 'UWBP_HealingItems_C::ButtonText' has a wrong offset!");
static_assert(offsetof(UWBP_HealingItems_C, ButtonText_Grey) == 0x000480, "Member 'UWBP_HealingItems_C::ButtonText_Grey' has a wrong offset!");
static_assert(offsetof(UWBP_HealingItems_C, Container) == 0x000488, "Member 'UWBP_HealingItems_C::Container' has a wrong offset!");
static_assert(offsetof(UWBP_HealingItems_C, Heal_Component) == 0x000490, "Member 'UWBP_HealingItems_C::Heal_Component' has a wrong offset!");
static_assert(offsetof(UWBP_HealingItems_C, HPComponent) == 0x000498, "Member 'UWBP_HealingItems_C::HPComponent' has a wrong offset!");
static_assert(offsetof(UWBP_HealingItems_C, Items) == 0x0004A0, "Member 'UWBP_HealingItems_C::Items' has a wrong offset!");
static_assert(offsetof(UWBP_HealingItems_C, IsButtonVisible) == 0x0004B0, "Member 'UWBP_HealingItems_C::IsButtonVisible' has a wrong offset!");

}

