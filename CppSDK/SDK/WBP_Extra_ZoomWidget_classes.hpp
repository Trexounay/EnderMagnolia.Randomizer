#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Extra_ZoomWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Zion_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Extra_ZoomWidget.WBP_Extra_ZoomWidget_C
// 0x0090 (0x04F0 - 0x0460)
class UWBP_Extra_ZoomWidget_C final : public UUserWidgetZion
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0460(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Base_Scale;                                        // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             CurrentZoomValue;                                  // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           Debug_GridPanel;                                   // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USlider*                                ZoomBar;                                           // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	double                                        InputValueThreshold;                               // 0x0488(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MouseWheelZoomSpeed;                               // 0x0490(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RightStickZoomSpeed;                               // 0x0498(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BaseSizeForUnitZoom;                               // 0x04A0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MinZoomForBaseSize;                                // 0x04A8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxZoomForBaseSize;                                // 0x04B0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentDefaultZoom;                                // 0x04B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	double                                        CurrentMinZoom;                                    // 0x04C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	double                                        CurrentMaxZoom;                                    // 0x04C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	double                                        CurrentZoom;                                       // 0x04D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(double NewZoomValue)> OnZoomChanged;                               // 0x04D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	double                                        CurrentZoomRatio;                                  // 0x04E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)

public:
	void AnalogValueZoom(double AnalogValue, bool* bReturnValue);
	void Construct();
	void ExecuteUbergraph_WBP_Extra_ZoomWidget(int32 EntryPoint);
	void GetCurrentZoom(double* CurrentZoom_0);
	void Initialize(bool bUseWidgetSizeRatio, const struct FVector2D& WidgetSize, const struct FExtraItemZoomData& ZoomData, double* MinZoom, double* DefaultZoom, double* MaxZoom);
	void MouseWheelZoom(double WheelDelta);
	void SetZoom(double NewZoomValue);
	void SetZoomMax(double NewMaxZoom);
	void SetZoomMin(double NewMinZoom);
	void SetZoomRatio(double ZoomRatio);
	void Zoom(double ZoomDelta);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Extra_ZoomWidget_C">();
	}
	static class UWBP_Extra_ZoomWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Extra_ZoomWidget_C>();
	}
};
static_assert(alignof(UWBP_Extra_ZoomWidget_C) == 0x000008, "Wrong alignment on UWBP_Extra_ZoomWidget_C");
static_assert(sizeof(UWBP_Extra_ZoomWidget_C) == 0x0004F0, "Wrong size on UWBP_Extra_ZoomWidget_C");
static_assert(offsetof(UWBP_Extra_ZoomWidget_C, UberGraphFrame) == 0x000460, "Member 'UWBP_Extra_ZoomWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Extra_ZoomWidget_C, Base_Scale) == 0x000468, "Member 'UWBP_Extra_ZoomWidget_C::Base_Scale' has a wrong offset!");
static_assert(offsetof(UWBP_Extra_ZoomWidget_C, CurrentZoomValue) == 0x000470, "Member 'UWBP_Extra_ZoomWidget_C::CurrentZoomValue' has a wrong offset!");
static_assert(offsetof(UWBP_Extra_ZoomWidget_C, Debug_GridPanel) == 0x000478, "Member 'UWBP_Extra_ZoomWidget_C::Debug_GridPanel' has a wrong offset!");
static_assert(offsetof(UWBP_Extra_ZoomWidget_C, ZoomBar) == 0x000480, "Member 'UWBP_Extra_ZoomWidget_C::ZoomBar' has a wrong offset!");
static_assert(offsetof(UWBP_Extra_ZoomWidget_C, InputValueThreshold) == 0x000488, "Member 'UWBP_Extra_ZoomWidget_C::InputValueThreshold' has a wrong offset!");
static_assert(offsetof(UWBP_Extra_ZoomWidget_C, MouseWheelZoomSpeed) == 0x000490, "Member 'UWBP_Extra_ZoomWidget_C::MouseWheelZoomSpeed' has a wrong offset!");
static_assert(offsetof(UWBP_Extra_ZoomWidget_C, RightStickZoomSpeed) == 0x000498, "Member 'UWBP_Extra_ZoomWidget_C::RightStickZoomSpeed' has a wrong offset!");
static_assert(offsetof(UWBP_Extra_ZoomWidget_C, BaseSizeForUnitZoom) == 0x0004A0, "Member 'UWBP_Extra_ZoomWidget_C::BaseSizeForUnitZoom' has a wrong offset!");
static_assert(offsetof(UWBP_Extra_ZoomWidget_C, MinZoomForBaseSize) == 0x0004A8, "Member 'UWBP_Extra_ZoomWidget_C::MinZoomForBaseSize' has a wrong offset!");
static_assert(offsetof(UWBP_Extra_ZoomWidget_C, MaxZoomForBaseSize) == 0x0004B0, "Member 'UWBP_Extra_ZoomWidget_C::MaxZoomForBaseSize' has a wrong offset!");
static_assert(offsetof(UWBP_Extra_ZoomWidget_C, CurrentDefaultZoom) == 0x0004B8, "Member 'UWBP_Extra_ZoomWidget_C::CurrentDefaultZoom' has a wrong offset!");
static_assert(offsetof(UWBP_Extra_ZoomWidget_C, CurrentMinZoom) == 0x0004C0, "Member 'UWBP_Extra_ZoomWidget_C::CurrentMinZoom' has a wrong offset!");
static_assert(offsetof(UWBP_Extra_ZoomWidget_C, CurrentMaxZoom) == 0x0004C8, "Member 'UWBP_Extra_ZoomWidget_C::CurrentMaxZoom' has a wrong offset!");
static_assert(offsetof(UWBP_Extra_ZoomWidget_C, CurrentZoom) == 0x0004D0, "Member 'UWBP_Extra_ZoomWidget_C::CurrentZoom' has a wrong offset!");
static_assert(offsetof(UWBP_Extra_ZoomWidget_C, OnZoomChanged) == 0x0004D8, "Member 'UWBP_Extra_ZoomWidget_C::OnZoomChanged' has a wrong offset!");
static_assert(offsetof(UWBP_Extra_ZoomWidget_C, CurrentZoomRatio) == 0x0004E8, "Member 'UWBP_Extra_ZoomWidget_C::CurrentZoomRatio' has a wrong offset!");

}

