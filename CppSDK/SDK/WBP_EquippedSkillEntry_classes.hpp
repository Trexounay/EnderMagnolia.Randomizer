#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_EquippedSkillEntry

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Zion_structs.hpp"
#include "Zion_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_EquippedSkillEntry.WBP_EquippedSkillEntry_C
// 0x00B8 (0x0538 - 0x0480)
class UWBP_EquippedSkillEntry_C final : public UUserWidgetButton
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0480(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Focused;                                           // 0x0488(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 BG;                                                // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URefreshableRichTextBlock*              ButtonText;                                        // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FocusedImage;                                      // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FocusedImage_1;                                    // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               OverlayFocusedContainer;                           // 0x04B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               OverlaySelectedContainer;                          // 0x04B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               OverlaySkillContainer;                             // 0x04C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               OverlaySpecialContainer;                           // 0x04C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SkillIcon;                                         // 0x04D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SpecialSkillIcon;                                  // 0x04D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SpiritIcon;                                        // 0x04E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	ESkillSlot                                    SkillSlot;                                         // 0x04E8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EActionInputType                              ActionInputType;                                   // 0x04E9(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EA[0x6];                                      // 0x04EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USkillComponent*                        SkillComponent;                                    // 0x04F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	struct FDataTableRowHandle                    SkillData;                                         // 0x04F8(0x0010)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, NoDestructor, AdvancedDisplay)
	TMulticastInlineDelegate<void(class UWBP_EquippedSkillEntry_C* EquippedSkillEntry)> OnPressed;   // 0x0508(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FDataTableRowHandle                    SpiritData;                                        // 0x0518(0x0010)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, NoDestructor, AdvancedDisplay)
	TMulticastInlineDelegate<void(class UWBP_EquippedSkillEntry_C* SkillSlot)> OnFocusedSkillSlot;   // 0x0528(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void Construct();
	void ExecuteUbergraph_WBP_EquippedSkillEntry(int32 EntryPoint);
	void FindAssociatedSpiritData(struct FDataTableRowHandle* SkillData_0);
	struct FEventReply OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent);
	void OnFocusStateChanged(bool bFocused);
	struct FEventReply OnPressConfirm(const struct FKeyEvent& KeyEvent);
	void PreConstruct(bool IsDesignTime);
	void Refresh();
	void SetFocusedState(bool Focus);
	void SetSelected(bool bSelected);
	void SetSpecialVisible(bool bVisible);
	void SetupButtonText();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_EquippedSkillEntry_C">();
	}
	static class UWBP_EquippedSkillEntry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_EquippedSkillEntry_C>();
	}
};
static_assert(alignof(UWBP_EquippedSkillEntry_C) == 0x000008, "Wrong alignment on UWBP_EquippedSkillEntry_C");
static_assert(sizeof(UWBP_EquippedSkillEntry_C) == 0x000538, "Wrong size on UWBP_EquippedSkillEntry_C");
static_assert(offsetof(UWBP_EquippedSkillEntry_C, UberGraphFrame) == 0x000480, "Member 'UWBP_EquippedSkillEntry_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_EquippedSkillEntry_C, Focused) == 0x000488, "Member 'UWBP_EquippedSkillEntry_C::Focused' has a wrong offset!");
static_assert(offsetof(UWBP_EquippedSkillEntry_C, BG) == 0x000490, "Member 'UWBP_EquippedSkillEntry_C::BG' has a wrong offset!");
static_assert(offsetof(UWBP_EquippedSkillEntry_C, ButtonText) == 0x000498, "Member 'UWBP_EquippedSkillEntry_C::ButtonText' has a wrong offset!");
static_assert(offsetof(UWBP_EquippedSkillEntry_C, FocusedImage) == 0x0004A0, "Member 'UWBP_EquippedSkillEntry_C::FocusedImage' has a wrong offset!");
static_assert(offsetof(UWBP_EquippedSkillEntry_C, FocusedImage_1) == 0x0004A8, "Member 'UWBP_EquippedSkillEntry_C::FocusedImage_1' has a wrong offset!");
static_assert(offsetof(UWBP_EquippedSkillEntry_C, OverlayFocusedContainer) == 0x0004B0, "Member 'UWBP_EquippedSkillEntry_C::OverlayFocusedContainer' has a wrong offset!");
static_assert(offsetof(UWBP_EquippedSkillEntry_C, OverlaySelectedContainer) == 0x0004B8, "Member 'UWBP_EquippedSkillEntry_C::OverlaySelectedContainer' has a wrong offset!");
static_assert(offsetof(UWBP_EquippedSkillEntry_C, OverlaySkillContainer) == 0x0004C0, "Member 'UWBP_EquippedSkillEntry_C::OverlaySkillContainer' has a wrong offset!");
static_assert(offsetof(UWBP_EquippedSkillEntry_C, OverlaySpecialContainer) == 0x0004C8, "Member 'UWBP_EquippedSkillEntry_C::OverlaySpecialContainer' has a wrong offset!");
static_assert(offsetof(UWBP_EquippedSkillEntry_C, SkillIcon) == 0x0004D0, "Member 'UWBP_EquippedSkillEntry_C::SkillIcon' has a wrong offset!");
static_assert(offsetof(UWBP_EquippedSkillEntry_C, SpecialSkillIcon) == 0x0004D8, "Member 'UWBP_EquippedSkillEntry_C::SpecialSkillIcon' has a wrong offset!");
static_assert(offsetof(UWBP_EquippedSkillEntry_C, SpiritIcon) == 0x0004E0, "Member 'UWBP_EquippedSkillEntry_C::SpiritIcon' has a wrong offset!");
static_assert(offsetof(UWBP_EquippedSkillEntry_C, SkillSlot) == 0x0004E8, "Member 'UWBP_EquippedSkillEntry_C::SkillSlot' has a wrong offset!");
static_assert(offsetof(UWBP_EquippedSkillEntry_C, ActionInputType) == 0x0004E9, "Member 'UWBP_EquippedSkillEntry_C::ActionInputType' has a wrong offset!");
static_assert(offsetof(UWBP_EquippedSkillEntry_C, SkillComponent) == 0x0004F0, "Member 'UWBP_EquippedSkillEntry_C::SkillComponent' has a wrong offset!");
static_assert(offsetof(UWBP_EquippedSkillEntry_C, SkillData) == 0x0004F8, "Member 'UWBP_EquippedSkillEntry_C::SkillData' has a wrong offset!");
static_assert(offsetof(UWBP_EquippedSkillEntry_C, OnPressed) == 0x000508, "Member 'UWBP_EquippedSkillEntry_C::OnPressed' has a wrong offset!");
static_assert(offsetof(UWBP_EquippedSkillEntry_C, SpiritData) == 0x000518, "Member 'UWBP_EquippedSkillEntry_C::SpiritData' has a wrong offset!");
static_assert(offsetof(UWBP_EquippedSkillEntry_C, OnFocusedSkillSlot) == 0x000528, "Member 'UWBP_EquippedSkillEntry_C::OnFocusedSkillSlot' has a wrong offset!");

}

