#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Item_EquipmentData

#include "Basic.hpp"

#include "WBP_Item_EquipmentData_classes.hpp"
#include "WBP_Item_EquipmentData_parameters.hpp"


namespace SDK
{

// Function WBP_Item_EquipmentData.WBP_Item_EquipmentData_C.Setup
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FExtendedStatsData&        ExtendedStatsData                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_Item_EquipmentData_C::Setup(const struct FExtendedStatsData& ExtendedStatsData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Item_EquipmentData_C", "Setup");

	Params::WBP_Item_EquipmentData_C_Setup Parms{};

	Parms.ExtendedStatsData = std::move(ExtendedStatsData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Item_EquipmentData.WBP_Item_EquipmentData_C.SetupStat
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_Item_EquipmentData_Stat_C*   Stat                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   MaxValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Item_EquipmentData_C::SetupStat(class UWBP_Item_EquipmentData_Stat_C* Stat, int32 Value, int32 MaxValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Item_EquipmentData_C", "SetupStat");

	Params::WBP_Item_EquipmentData_C_SetupStat Parms{};

	Parms.Stat = Stat;
	Parms.Value = Value;
	Parms.MaxValue = MaxValue;

	UObject::ProcessEvent(Func, &Parms);
}

}

