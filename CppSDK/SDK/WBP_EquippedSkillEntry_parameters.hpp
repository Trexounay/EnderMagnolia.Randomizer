#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_EquippedSkillEntry

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "Zion_structs.hpp"


namespace SDK::Params
{

// Function WBP_EquippedSkillEntry.WBP_EquippedSkillEntry_C.ExecuteUbergraph_WBP_EquippedSkillEntry
// 0x0028 (0x0028 - 0x0000)
struct WBP_EquippedSkillEntry_C_ExecuteUbergraph_WBP_EquippedSkillEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USkillComponent*                        CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bFocused;                             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EquippedSkillEntry_C_ExecuteUbergraph_WBP_EquippedSkillEntry) == 0x000008, "Wrong alignment on WBP_EquippedSkillEntry_C_ExecuteUbergraph_WBP_EquippedSkillEntry");
static_assert(sizeof(WBP_EquippedSkillEntry_C_ExecuteUbergraph_WBP_EquippedSkillEntry) == 0x000028, "Wrong size on WBP_EquippedSkillEntry_C_ExecuteUbergraph_WBP_EquippedSkillEntry");
static_assert(offsetof(WBP_EquippedSkillEntry_C_ExecuteUbergraph_WBP_EquippedSkillEntry, EntryPoint) == 0x000000, "Member 'WBP_EquippedSkillEntry_C_ExecuteUbergraph_WBP_EquippedSkillEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_ExecuteUbergraph_WBP_EquippedSkillEntry, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'WBP_EquippedSkillEntry_C_ExecuteUbergraph_WBP_EquippedSkillEntry::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_ExecuteUbergraph_WBP_EquippedSkillEntry, K2Node_Event_IsDesignTime) == 0x000010, "Member 'WBP_EquippedSkillEntry_C_ExecuteUbergraph_WBP_EquippedSkillEntry::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_ExecuteUbergraph_WBP_EquippedSkillEntry, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'WBP_EquippedSkillEntry_C_ExecuteUbergraph_WBP_EquippedSkillEntry::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_ExecuteUbergraph_WBP_EquippedSkillEntry, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'WBP_EquippedSkillEntry_C_ExecuteUbergraph_WBP_EquippedSkillEntry::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_ExecuteUbergraph_WBP_EquippedSkillEntry, K2Node_Event_bFocused) == 0x000020, "Member 'WBP_EquippedSkillEntry_C_ExecuteUbergraph_WBP_EquippedSkillEntry::K2Node_Event_bFocused' has a wrong offset!");

// Function WBP_EquippedSkillEntry.WBP_EquippedSkillEntry_C.FindAssociatedSpiritData
// 0x0280 (0x0280 - 0x0000)
struct WBP_EquippedSkillEntry_C_FindAssociatedSpiritData final
{
public:
	struct FDataTableRowHandle                    SkillData_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
	class UDataTable*                             SpiritDataTa;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeZion*                          CallFunc_Get_ReturnValue;                          // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             CallFunc_GetDataTableItemSpirits_ReturnValue;      // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0038(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInventoryItemSpiritData               CallFunc_GetDataTableRowFromName_OutRow;           // 0x0058(0x0208)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle;              // 0x0268(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x027C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x027D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EquippedSkillEntry_C_FindAssociatedSpiritData) == 0x000008, "Wrong alignment on WBP_EquippedSkillEntry_C_FindAssociatedSpiritData");
static_assert(sizeof(WBP_EquippedSkillEntry_C_FindAssociatedSpiritData) == 0x000280, "Wrong size on WBP_EquippedSkillEntry_C_FindAssociatedSpiritData");
static_assert(offsetof(WBP_EquippedSkillEntry_C_FindAssociatedSpiritData, SkillData_0) == 0x000000, "Member 'WBP_EquippedSkillEntry_C_FindAssociatedSpiritData::SkillData_0' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_FindAssociatedSpiritData, SpiritDataTa) == 0x000010, "Member 'WBP_EquippedSkillEntry_C_FindAssociatedSpiritData::SpiritDataTa' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_FindAssociatedSpiritData, Temp_int_Array_Index_Variable) == 0x000018, "Member 'WBP_EquippedSkillEntry_C_FindAssociatedSpiritData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_FindAssociatedSpiritData, CallFunc_Get_ReturnValue) == 0x000020, "Member 'WBP_EquippedSkillEntry_C_FindAssociatedSpiritData::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_FindAssociatedSpiritData, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'WBP_EquippedSkillEntry_C_FindAssociatedSpiritData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_FindAssociatedSpiritData, CallFunc_GetDataTableItemSpirits_ReturnValue) == 0x000030, "Member 'WBP_EquippedSkillEntry_C_FindAssociatedSpiritData::CallFunc_GetDataTableItemSpirits_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_FindAssociatedSpiritData, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000038, "Member 'WBP_EquippedSkillEntry_C_FindAssociatedSpiritData::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_FindAssociatedSpiritData, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'WBP_EquippedSkillEntry_C_FindAssociatedSpiritData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_FindAssociatedSpiritData, CallFunc_Array_Get_Item) == 0x00004C, "Member 'WBP_EquippedSkillEntry_C_FindAssociatedSpiritData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_FindAssociatedSpiritData, CallFunc_GetDataTableRowFromName_OutRow) == 0x000058, "Member 'WBP_EquippedSkillEntry_C_FindAssociatedSpiritData::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_FindAssociatedSpiritData, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000260, "Member 'WBP_EquippedSkillEntry_C_FindAssociatedSpiritData::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_FindAssociatedSpiritData, K2Node_MakeStruct_DataTableRowHandle) == 0x000268, "Member 'WBP_EquippedSkillEntry_C_FindAssociatedSpiritData::K2Node_MakeStruct_DataTableRowHandle' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_FindAssociatedSpiritData, CallFunc_Array_Length_ReturnValue) == 0x000278, "Member 'WBP_EquippedSkillEntry_C_FindAssociatedSpiritData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_FindAssociatedSpiritData, CallFunc_Array_Contains_ReturnValue) == 0x00027C, "Member 'WBP_EquippedSkillEntry_C_FindAssociatedSpiritData::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_FindAssociatedSpiritData, CallFunc_Less_IntInt_ReturnValue) == 0x00027D, "Member 'WBP_EquippedSkillEntry_C_FindAssociatedSpiritData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_EquippedSkillEntry.WBP_EquippedSkillEntry_C.OnFocusReceived
// 0x01B0 (0x01B0 - 0x0000)
struct WBP_EquippedSkillEntry_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x00F8(0x00B8)()
};
static_assert(alignof(WBP_EquippedSkillEntry_C_OnFocusReceived) == 0x000008, "Wrong alignment on WBP_EquippedSkillEntry_C_OnFocusReceived");
static_assert(sizeof(WBP_EquippedSkillEntry_C_OnFocusReceived) == 0x0001B0, "Wrong size on WBP_EquippedSkillEntry_C_OnFocusReceived");
static_assert(offsetof(WBP_EquippedSkillEntry_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'WBP_EquippedSkillEntry_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'WBP_EquippedSkillEntry_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'WBP_EquippedSkillEntry_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_OnFocusReceived, CallFunc_Handled_ReturnValue) == 0x0000F8, "Member 'WBP_EquippedSkillEntry_C_OnFocusReceived::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function WBP_EquippedSkillEntry.WBP_EquippedSkillEntry_C.OnFocusStateChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_EquippedSkillEntry_C_OnFocusStateChanged final
{
public:
	bool                                          bFocused;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EquippedSkillEntry_C_OnFocusStateChanged) == 0x000001, "Wrong alignment on WBP_EquippedSkillEntry_C_OnFocusStateChanged");
static_assert(sizeof(WBP_EquippedSkillEntry_C_OnFocusStateChanged) == 0x000001, "Wrong size on WBP_EquippedSkillEntry_C_OnFocusStateChanged");
static_assert(offsetof(WBP_EquippedSkillEntry_C_OnFocusStateChanged, bFocused) == 0x000000, "Member 'WBP_EquippedSkillEntry_C_OnFocusStateChanged::bFocused' has a wrong offset!");

// Function WBP_EquippedSkillEntry.WBP_EquippedSkillEntry_C.OnPressConfirm
// 0x01B0 (0x01B0 - 0x0000)
struct WBP_EquippedSkillEntry_C_OnPressConfirm final
{
public:
	struct FKeyEvent                              KeyEvent;                                          // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x00F8(0x00B8)()
};
static_assert(alignof(WBP_EquippedSkillEntry_C_OnPressConfirm) == 0x000008, "Wrong alignment on WBP_EquippedSkillEntry_C_OnPressConfirm");
static_assert(sizeof(WBP_EquippedSkillEntry_C_OnPressConfirm) == 0x0001B0, "Wrong size on WBP_EquippedSkillEntry_C_OnPressConfirm");
static_assert(offsetof(WBP_EquippedSkillEntry_C_OnPressConfirm, KeyEvent) == 0x000000, "Member 'WBP_EquippedSkillEntry_C_OnPressConfirm::KeyEvent' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_OnPressConfirm, ReturnValue) == 0x000040, "Member 'WBP_EquippedSkillEntry_C_OnPressConfirm::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_OnPressConfirm, CallFunc_Handled_ReturnValue) == 0x0000F8, "Member 'WBP_EquippedSkillEntry_C_OnPressConfirm::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function WBP_EquippedSkillEntry.WBP_EquippedSkillEntry_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_EquippedSkillEntry_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EquippedSkillEntry_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_EquippedSkillEntry_C_PreConstruct");
static_assert(sizeof(WBP_EquippedSkillEntry_C_PreConstruct) == 0x000001, "Wrong size on WBP_EquippedSkillEntry_C_PreConstruct");
static_assert(offsetof(WBP_EquippedSkillEntry_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_EquippedSkillEntry_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_EquippedSkillEntry.WBP_EquippedSkillEntry_C.Refresh
// 0x04E0 (0x04E0 - 0x0000)
struct WBP_EquippedSkillEntry_C_Refresh final
{
public:
	struct FDataTableRowHandle                    CallFunc_FindAssociatedSpiritData_SkillData;       // 0x0000(0x0010)(NoDestructor)
	class AGameModeZion*                          CallFunc_Get_ReturnValue;                          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             CallFunc_GetDataTableItemSkills_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetEquippedSkillID_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle;              // 0x0030(0x0010)(NoDestructor)
	struct FInventoryItemSkillData                CallFunc_GetItemSkillData_out_ItemData;            // 0x0040(0x0288)()
	bool                                          CallFunc_GetItemSkillData_ReturnValue;             // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x02C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CA[0x6];                                      // 0x02CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInventoryItemSpiritData               CallFunc_GetItemSpiritData_out_ItemData;           // 0x02D0(0x0208)()
	bool                                          CallFunc_GetItemSpiritData_ReturnValue;            // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EquippedSkillEntry_C_Refresh) == 0x000008, "Wrong alignment on WBP_EquippedSkillEntry_C_Refresh");
static_assert(sizeof(WBP_EquippedSkillEntry_C_Refresh) == 0x0004E0, "Wrong size on WBP_EquippedSkillEntry_C_Refresh");
static_assert(offsetof(WBP_EquippedSkillEntry_C_Refresh, CallFunc_FindAssociatedSpiritData_SkillData) == 0x000000, "Member 'WBP_EquippedSkillEntry_C_Refresh::CallFunc_FindAssociatedSpiritData_SkillData' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_Refresh, CallFunc_Get_ReturnValue) == 0x000010, "Member 'WBP_EquippedSkillEntry_C_Refresh::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_Refresh, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_EquippedSkillEntry_C_Refresh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_Refresh, CallFunc_GetDataTableItemSkills_ReturnValue) == 0x000020, "Member 'WBP_EquippedSkillEntry_C_Refresh::CallFunc_GetDataTableItemSkills_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_Refresh, CallFunc_GetEquippedSkillID_ReturnValue) == 0x000028, "Member 'WBP_EquippedSkillEntry_C_Refresh::CallFunc_GetEquippedSkillID_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_Refresh, K2Node_MakeStruct_DataTableRowHandle) == 0x000030, "Member 'WBP_EquippedSkillEntry_C_Refresh::K2Node_MakeStruct_DataTableRowHandle' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_Refresh, CallFunc_GetItemSkillData_out_ItemData) == 0x000040, "Member 'WBP_EquippedSkillEntry_C_Refresh::CallFunc_GetItemSkillData_out_ItemData' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_Refresh, CallFunc_GetItemSkillData_ReturnValue) == 0x0002C8, "Member 'WBP_EquippedSkillEntry_C_Refresh::CallFunc_GetItemSkillData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_Refresh, CallFunc_NotEqual_NameName_ReturnValue) == 0x0002C9, "Member 'WBP_EquippedSkillEntry_C_Refresh::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_Refresh, CallFunc_GetItemSpiritData_out_ItemData) == 0x0002D0, "Member 'WBP_EquippedSkillEntry_C_Refresh::CallFunc_GetItemSpiritData_out_ItemData' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_Refresh, CallFunc_GetItemSpiritData_ReturnValue) == 0x0004D8, "Member 'WBP_EquippedSkillEntry_C_Refresh::CallFunc_GetItemSpiritData_ReturnValue' has a wrong offset!");

// Function WBP_EquippedSkillEntry.WBP_EquippedSkillEntry_C.SetFocusedState
// 0x0010 (0x0010 - 0x0000)
struct WBP_EquippedSkillEntry_C_SetFocusedState final
{
public:
	bool                                          Focus;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EquippedSkillEntry_C_SetFocusedState) == 0x000008, "Wrong alignment on WBP_EquippedSkillEntry_C_SetFocusedState");
static_assert(sizeof(WBP_EquippedSkillEntry_C_SetFocusedState) == 0x000010, "Wrong size on WBP_EquippedSkillEntry_C_SetFocusedState");
static_assert(offsetof(WBP_EquippedSkillEntry_C_SetFocusedState, Focus) == 0x000000, "Member 'WBP_EquippedSkillEntry_C_SetFocusedState::Focus' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_SetFocusedState, Temp_byte_Variable) == 0x000001, "Member 'WBP_EquippedSkillEntry_C_SetFocusedState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_SetFocusedState, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_EquippedSkillEntry_C_SetFocusedState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_SetFocusedState, Temp_bool_Variable) == 0x000003, "Member 'WBP_EquippedSkillEntry_C_SetFocusedState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_SetFocusedState, K2Node_Select_Default) == 0x000004, "Member 'WBP_EquippedSkillEntry_C_SetFocusedState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_SetFocusedState, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WBP_EquippedSkillEntry_C_SetFocusedState::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_EquippedSkillEntry.WBP_EquippedSkillEntry_C.SetSelected
// 0x0005 (0x0005 - 0x0000)
struct WBP_EquippedSkillEntry_C_SetSelected final
{
public:
	bool                                          bSelected;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EquippedSkillEntry_C_SetSelected) == 0x000001, "Wrong alignment on WBP_EquippedSkillEntry_C_SetSelected");
static_assert(sizeof(WBP_EquippedSkillEntry_C_SetSelected) == 0x000005, "Wrong size on WBP_EquippedSkillEntry_C_SetSelected");
static_assert(offsetof(WBP_EquippedSkillEntry_C_SetSelected, bSelected) == 0x000000, "Member 'WBP_EquippedSkillEntry_C_SetSelected::bSelected' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_SetSelected, Temp_bool_Variable) == 0x000001, "Member 'WBP_EquippedSkillEntry_C_SetSelected::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_SetSelected, Temp_byte_Variable) == 0x000002, "Member 'WBP_EquippedSkillEntry_C_SetSelected::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_SetSelected, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_EquippedSkillEntry_C_SetSelected::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_SetSelected, K2Node_Select_Default) == 0x000004, "Member 'WBP_EquippedSkillEntry_C_SetSelected::K2Node_Select_Default' has a wrong offset!");

// Function WBP_EquippedSkillEntry.WBP_EquippedSkillEntry_C.SetSpecialVisible
// 0x0007 (0x0007 - 0x0000)
struct WBP_EquippedSkillEntry_C_SetSpecialVisible final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EquippedSkillEntry_C_SetSpecialVisible) == 0x000001, "Wrong alignment on WBP_EquippedSkillEntry_C_SetSpecialVisible");
static_assert(sizeof(WBP_EquippedSkillEntry_C_SetSpecialVisible) == 0x000007, "Wrong size on WBP_EquippedSkillEntry_C_SetSpecialVisible");
static_assert(offsetof(WBP_EquippedSkillEntry_C_SetSpecialVisible, bVisible) == 0x000000, "Member 'WBP_EquippedSkillEntry_C_SetSpecialVisible::bVisible' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_SetSpecialVisible, Temp_bool_Variable) == 0x000001, "Member 'WBP_EquippedSkillEntry_C_SetSpecialVisible::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_SetSpecialVisible, Temp_byte_Variable) == 0x000002, "Member 'WBP_EquippedSkillEntry_C_SetSpecialVisible::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_SetSpecialVisible, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_EquippedSkillEntry_C_SetSpecialVisible::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_SetSpecialVisible, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'WBP_EquippedSkillEntry_C_SetSpecialVisible::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_SetSpecialVisible, CallFunc_BooleanAND_ReturnValue) == 0x000005, "Member 'WBP_EquippedSkillEntry_C_SetSpecialVisible::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_SetSpecialVisible, K2Node_Select_Default) == 0x000006, "Member 'WBP_EquippedSkillEntry_C_SetSpecialVisible::K2Node_Select_Default' has a wrong offset!");

// Function WBP_EquippedSkillEntry.WBP_EquippedSkillEntry_C.SetupButtonText
// 0x00F0 (0x00F0 - 0x0000)
struct WBP_EquippedSkillEntry_C_SetupButtonText final
{
public:
	TArray<struct FRichTextInputElement>          FormatElements;                                    // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInputDescription                      K2Node_MakeStruct_InputDescription;                // 0x0018(0x0010)(NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         Temp_string_Variable;                              // 0x0030(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FRichTextInputElement>          CallFunc_GetFormatElements_ReturnValue;            // 0x0040(0x0010)(ConstParm, ReferenceParm)
	struct FRichTextInputElement                  CallFunc_Array_Get_Item;                           // 0x0050(0x0048)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRichTextInputElement                  K2Node_SetFieldsInStruct_StructOut;                // 0x00A0(0x0048)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EquippedSkillEntry_C_SetupButtonText) == 0x000008, "Wrong alignment on WBP_EquippedSkillEntry_C_SetupButtonText");
static_assert(sizeof(WBP_EquippedSkillEntry_C_SetupButtonText) == 0x0000F0, "Wrong size on WBP_EquippedSkillEntry_C_SetupButtonText");
static_assert(offsetof(WBP_EquippedSkillEntry_C_SetupButtonText, FormatElements) == 0x000000, "Member 'WBP_EquippedSkillEntry_C_SetupButtonText::FormatElements' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_SetupButtonText, Temp_int_Array_Index_Variable) == 0x000010, "Member 'WBP_EquippedSkillEntry_C_SetupButtonText::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_SetupButtonText, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'WBP_EquippedSkillEntry_C_SetupButtonText::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_SetupButtonText, K2Node_MakeStruct_InputDescription) == 0x000018, "Member 'WBP_EquippedSkillEntry_C_SetupButtonText::K2Node_MakeStruct_InputDescription' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_SetupButtonText, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'WBP_EquippedSkillEntry_C_SetupButtonText::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_SetupButtonText, Temp_string_Variable) == 0x000030, "Member 'WBP_EquippedSkillEntry_C_SetupButtonText::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_SetupButtonText, CallFunc_GetFormatElements_ReturnValue) == 0x000040, "Member 'WBP_EquippedSkillEntry_C_SetupButtonText::CallFunc_GetFormatElements_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_SetupButtonText, CallFunc_Array_Get_Item) == 0x000050, "Member 'WBP_EquippedSkillEntry_C_SetupButtonText::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_SetupButtonText, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'WBP_EquippedSkillEntry_C_SetupButtonText::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_SetupButtonText, K2Node_SetFieldsInStruct_StructOut) == 0x0000A0, "Member 'WBP_EquippedSkillEntry_C_SetupButtonText::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_SetupButtonText, CallFunc_Less_IntInt_ReturnValue) == 0x0000E8, "Member 'WBP_EquippedSkillEntry_C_SetupButtonText::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EquippedSkillEntry_C_SetupButtonText, CallFunc_Array_Add_ReturnValue) == 0x0000EC, "Member 'WBP_EquippedSkillEntry_C_SetupButtonText::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

}

