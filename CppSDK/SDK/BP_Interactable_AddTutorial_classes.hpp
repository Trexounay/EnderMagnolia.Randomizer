#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Interactable_AddTutorial

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_Interactable_Event_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Interactable_AddTutorial.BP_Interactable_AddTutorial_C
// 0x0048 (0x0618 - 0x05D0)
class ABP_Interactable_AddTutorial_C final : public ABP_Interactable_Event_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class URenderStateComponent*                  RenderState;                                       // 0x05D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Niagara;                                           // 0x05E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    Item;                                              // 0x05E8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, ExposeOnSpawn)
	int32                                         Count;                                             // 0x05F8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_5FC[0x4];                                      // 0x05FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    ItemNG_;                                           // 0x0600(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor)
	int32                                         CountNG_;                                          // 0x0610(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FXDeactivationDelay;                               // 0x0614(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SetupAdditionalBlackboardValues(struct FEventBlackboardInit& EventBlackboardInit);
	void OnInteract(class APlayerController* Controller);
	void ExecuteUbergraph_BP_Interactable_AddTutorial(int32 EntryPoint);

	bool ShouldUseNGPlusVariant() const;
	void GetItem(struct FDataTableRowHandle* Item_0) const;
	class FText GetInteractionText() const;
	void GetCount(int32* Count_0) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Interactable_AddTutorial_C">();
	}
	static class ABP_Interactable_AddTutorial_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Interactable_AddTutorial_C>();
	}
};
static_assert(alignof(ABP_Interactable_AddTutorial_C) == 0x000008, "Wrong alignment on ABP_Interactable_AddTutorial_C");
static_assert(sizeof(ABP_Interactable_AddTutorial_C) == 0x000618, "Wrong size on ABP_Interactable_AddTutorial_C");
static_assert(offsetof(ABP_Interactable_AddTutorial_C, UberGraphFrame) == 0x0005D0, "Member 'ABP_Interactable_AddTutorial_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Interactable_AddTutorial_C, RenderState) == 0x0005D8, "Member 'ABP_Interactable_AddTutorial_C::RenderState' has a wrong offset!");
static_assert(offsetof(ABP_Interactable_AddTutorial_C, Niagara) == 0x0005E0, "Member 'ABP_Interactable_AddTutorial_C::Niagara' has a wrong offset!");
static_assert(offsetof(ABP_Interactable_AddTutorial_C, Item) == 0x0005E8, "Member 'ABP_Interactable_AddTutorial_C::Item' has a wrong offset!");
static_assert(offsetof(ABP_Interactable_AddTutorial_C, Count) == 0x0005F8, "Member 'ABP_Interactable_AddTutorial_C::Count' has a wrong offset!");
static_assert(offsetof(ABP_Interactable_AddTutorial_C, ItemNG_) == 0x000600, "Member 'ABP_Interactable_AddTutorial_C::ItemNG_' has a wrong offset!");
static_assert(offsetof(ABP_Interactable_AddTutorial_C, CountNG_) == 0x000610, "Member 'ABP_Interactable_AddTutorial_C::CountNG_' has a wrong offset!");
static_assert(offsetof(ABP_Interactable_AddTutorial_C, FXDeactivationDelay) == 0x000614, "Member 'ABP_Interactable_AddTutorial_C::FXDeactivationDelay' has a wrong offset!");

}

