#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_e6050_Master

#include "Basic.hpp"

#include "BP_CharacterZion_Boss_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_e6050_Master.BP_e6050_Master_C
// 0x0020 (0x0A40 - 0x0A20)
class ABP_e6050_Master_C final : public ABP_CharacterZion_Boss_C
{
public:
	uint8                                         Pad_A11[0x7];                                      // 0x0A11(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBoxComponent*                          Hurtbox_Head;                                      // 0x0A18(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpineBoneFollowerComponent*            SpineBoneFollower_Head;                            // 0x0A20(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Hurtbox_Hip;                                       // 0x0A28(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpineBoneFollowerComponent*            SpineBoneFollower_Hip;                             // 0x0A30(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGuardComponent*                        Guard;                                             // 0x0A38(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_e6050_Master_C">();
	}
	static class ABP_e6050_Master_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_e6050_Master_C>();
	}
};
static_assert(alignof(ABP_e6050_Master_C) == 0x000010, "Wrong alignment on ABP_e6050_Master_C");
static_assert(sizeof(ABP_e6050_Master_C) == 0x000A40, "Wrong size on ABP_e6050_Master_C");
static_assert(offsetof(ABP_e6050_Master_C, Hurtbox_Head) == 0x000A18, "Member 'ABP_e6050_Master_C::Hurtbox_Head' has a wrong offset!");
static_assert(offsetof(ABP_e6050_Master_C, SpineBoneFollower_Head) == 0x000A20, "Member 'ABP_e6050_Master_C::SpineBoneFollower_Head' has a wrong offset!");
static_assert(offsetof(ABP_e6050_Master_C, Hurtbox_Hip) == 0x000A28, "Member 'ABP_e6050_Master_C::Hurtbox_Hip' has a wrong offset!");
static_assert(offsetof(ABP_e6050_Master_C, SpineBoneFollower_Hip) == 0x000A30, "Member 'ABP_e6050_Master_C::SpineBoneFollower_Hip' has a wrong offset!");
static_assert(offsetof(ABP_e6050_Master_C, Guard) == 0x000A38, "Member 'ABP_e6050_Master_C::Guard' has a wrong offset!");

}

