#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DM_Base

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function DM_Base.DM_Base_C.ExecuteUbergraph_DM_Base
// 0x0388 (0x0388 - 0x0000)
struct DM_Base_C_ExecuteUbergraph_DM_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0010(0x0010)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_1;               // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0048(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0058(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0068(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00B0(0x0048)(HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x0100(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_3;          // 0x0110(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0120(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0168(0x0048)(HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Text;                           // 0x01B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_4;          // 0x01C0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x01D0(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_5;          // 0x0218(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0228(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_6;          // 0x0270(0x0010)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0280(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0290(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x02D8(0x0010)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x02E8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x02F8(0x0010)()
	int32                                         CallFunc_Len_ReturnValue_1;                        // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x030C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30D[0x3];                                      // 0x030D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0310(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x0320(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0368(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0378(0x0010)()
};
static_assert(alignof(DM_Base_C_ExecuteUbergraph_DM_Base) == 0x000008, "Wrong alignment on DM_Base_C_ExecuteUbergraph_DM_Base");
static_assert(sizeof(DM_Base_C_ExecuteUbergraph_DM_Base) == 0x000388, "Wrong size on DM_Base_C_ExecuteUbergraph_DM_Base");
static_assert(offsetof(DM_Base_C_ExecuteUbergraph_DM_Base, EntryPoint) == 0x000000, "Member 'DM_Base_C_ExecuteUbergraph_DM_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(DM_Base_C_ExecuteUbergraph_DM_Base, Temp_bool_Variable) == 0x000004, "Member 'DM_Base_C_ExecuteUbergraph_DM_Base::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(DM_Base_C_ExecuteUbergraph_DM_Base, CallFunc_Len_ReturnValue) == 0x000008, "Member 'DM_Base_C_ExecuteUbergraph_DM_Base::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(DM_Base_C_ExecuteUbergraph_DM_Base, Temp_text_Variable) == 0x000010, "Member 'DM_Base_C_ExecuteUbergraph_DM_Base::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(DM_Base_C_ExecuteUbergraph_DM_Base, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'DM_Base_C_ExecuteUbergraph_DM_Base::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DM_Base_C_ExecuteUbergraph_DM_Base, CallFunc_SelectString_ReturnValue) == 0x000028, "Member 'DM_Base_C_ExecuteUbergraph_DM_Base::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(DM_Base_C_ExecuteUbergraph_DM_Base, CallFunc_SelectString_ReturnValue_1) == 0x000038, "Member 'DM_Base_C_ExecuteUbergraph_DM_Base::CallFunc_SelectString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DM_Base_C_ExecuteUbergraph_DM_Base, CallFunc_Conv_StringToText_ReturnValue) == 0x000048, "Member 'DM_Base_C_ExecuteUbergraph_DM_Base::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(DM_Base_C_ExecuteUbergraph_DM_Base, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000058, "Member 'DM_Base_C_ExecuteUbergraph_DM_Base::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DM_Base_C_ExecuteUbergraph_DM_Base, K2Node_MakeStruct_FormatArgumentData) == 0x000068, "Member 'DM_Base_C_ExecuteUbergraph_DM_Base::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(DM_Base_C_ExecuteUbergraph_DM_Base, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000B0, "Member 'DM_Base_C_ExecuteUbergraph_DM_Base::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(DM_Base_C_ExecuteUbergraph_DM_Base, K2Node_Event_IsDesignTime) == 0x0000F8, "Member 'DM_Base_C_ExecuteUbergraph_DM_Base::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(DM_Base_C_ExecuteUbergraph_DM_Base, CallFunc_Conv_StringToText_ReturnValue_2) == 0x000100, "Member 'DM_Base_C_ExecuteUbergraph_DM_Base::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DM_Base_C_ExecuteUbergraph_DM_Base, CallFunc_Conv_StringToText_ReturnValue_3) == 0x000110, "Member 'DM_Base_C_ExecuteUbergraph_DM_Base::CallFunc_Conv_StringToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DM_Base_C_ExecuteUbergraph_DM_Base, K2Node_MakeStruct_FormatArgumentData_2) == 0x000120, "Member 'DM_Base_C_ExecuteUbergraph_DM_Base::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(DM_Base_C_ExecuteUbergraph_DM_Base, K2Node_MakeStruct_FormatArgumentData_3) == 0x000168, "Member 'DM_Base_C_ExecuteUbergraph_DM_Base::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(DM_Base_C_ExecuteUbergraph_DM_Base, K2Node_CustomEvent_Text) == 0x0001B0, "Member 'DM_Base_C_ExecuteUbergraph_DM_Base::K2Node_CustomEvent_Text' has a wrong offset!");
static_assert(offsetof(DM_Base_C_ExecuteUbergraph_DM_Base, CallFunc_Conv_StringToText_ReturnValue_4) == 0x0001C0, "Member 'DM_Base_C_ExecuteUbergraph_DM_Base::CallFunc_Conv_StringToText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(DM_Base_C_ExecuteUbergraph_DM_Base, K2Node_MakeStruct_FormatArgumentData_4) == 0x0001D0, "Member 'DM_Base_C_ExecuteUbergraph_DM_Base::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(DM_Base_C_ExecuteUbergraph_DM_Base, CallFunc_Conv_StringToText_ReturnValue_5) == 0x000218, "Member 'DM_Base_C_ExecuteUbergraph_DM_Base::CallFunc_Conv_StringToText_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(DM_Base_C_ExecuteUbergraph_DM_Base, K2Node_MakeStruct_FormatArgumentData_5) == 0x000228, "Member 'DM_Base_C_ExecuteUbergraph_DM_Base::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(DM_Base_C_ExecuteUbergraph_DM_Base, CallFunc_Conv_StringToText_ReturnValue_6) == 0x000270, "Member 'DM_Base_C_ExecuteUbergraph_DM_Base::CallFunc_Conv_StringToText_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(DM_Base_C_ExecuteUbergraph_DM_Base, K2Node_MakeArray_Array) == 0x000280, "Member 'DM_Base_C_ExecuteUbergraph_DM_Base::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(DM_Base_C_ExecuteUbergraph_DM_Base, K2Node_MakeStruct_FormatArgumentData_6) == 0x000290, "Member 'DM_Base_C_ExecuteUbergraph_DM_Base::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(DM_Base_C_ExecuteUbergraph_DM_Base, CallFunc_Format_ReturnValue) == 0x0002D8, "Member 'DM_Base_C_ExecuteUbergraph_DM_Base::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(DM_Base_C_ExecuteUbergraph_DM_Base, K2Node_MakeArray_Array_1) == 0x0002E8, "Member 'DM_Base_C_ExecuteUbergraph_DM_Base::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(DM_Base_C_ExecuteUbergraph_DM_Base, CallFunc_Format_ReturnValue_1) == 0x0002F8, "Member 'DM_Base_C_ExecuteUbergraph_DM_Base::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DM_Base_C_ExecuteUbergraph_DM_Base, CallFunc_Len_ReturnValue_1) == 0x000308, "Member 'DM_Base_C_ExecuteUbergraph_DM_Base::CallFunc_Len_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DM_Base_C_ExecuteUbergraph_DM_Base, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00030C, "Member 'DM_Base_C_ExecuteUbergraph_DM_Base::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DM_Base_C_ExecuteUbergraph_DM_Base, K2Node_Select_Default) == 0x000310, "Member 'DM_Base_C_ExecuteUbergraph_DM_Base::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(DM_Base_C_ExecuteUbergraph_DM_Base, K2Node_MakeStruct_FormatArgumentData_7) == 0x000320, "Member 'DM_Base_C_ExecuteUbergraph_DM_Base::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(DM_Base_C_ExecuteUbergraph_DM_Base, K2Node_MakeArray_Array_2) == 0x000368, "Member 'DM_Base_C_ExecuteUbergraph_DM_Base::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(DM_Base_C_ExecuteUbergraph_DM_Base, CallFunc_Format_ReturnValue_2) == 0x000378, "Member 'DM_Base_C_ExecuteUbergraph_DM_Base::CallFunc_Format_ReturnValue_2' has a wrong offset!");

// Function DM_Base.DM_Base_C.PlayerInitialize
// 0x0008 (0x0008 - 0x0000)
struct DM_Base_C_PlayerInitialize final
{
public:
	class ABP_CharacterZion_C*                    Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DM_Base_C_PlayerInitialize) == 0x000008, "Wrong alignment on DM_Base_C_PlayerInitialize");
static_assert(sizeof(DM_Base_C_PlayerInitialize) == 0x000008, "Wrong size on DM_Base_C_PlayerInitialize");
static_assert(offsetof(DM_Base_C_PlayerInitialize, Player) == 0x000000, "Member 'DM_Base_C_PlayerInitialize::Player' has a wrong offset!");

// Function DM_Base.DM_Base_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct DM_Base_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DM_Base_C_PreConstruct) == 0x000001, "Wrong alignment on DM_Base_C_PreConstruct");
static_assert(sizeof(DM_Base_C_PreConstruct) == 0x000001, "Wrong size on DM_Base_C_PreConstruct");
static_assert(offsetof(DM_Base_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'DM_Base_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function DM_Base.DM_Base_C.SetText
// 0x0010 (0x0010 - 0x0000)
struct DM_Base_C_SetText final
{
public:
	class FString                                 Text_0;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(DM_Base_C_SetText) == 0x000008, "Wrong alignment on DM_Base_C_SetText");
static_assert(sizeof(DM_Base_C_SetText) == 0x000010, "Wrong size on DM_Base_C_SetText");
static_assert(offsetof(DM_Base_C_SetText, Text_0) == 0x000000, "Member 'DM_Base_C_SetText::Text_0' has a wrong offset!");

// Function DM_Base.DM_Base_C.ToggleModule
// 0x0005 (0x0005 - 0x0000)
struct DM_Base_C_ToggleModule final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DM_Base_C_ToggleModule) == 0x000001, "Wrong alignment on DM_Base_C_ToggleModule");
static_assert(sizeof(DM_Base_C_ToggleModule) == 0x000005, "Wrong size on DM_Base_C_ToggleModule");
static_assert(offsetof(DM_Base_C_ToggleModule, Temp_bool_Variable) == 0x000000, "Member 'DM_Base_C_ToggleModule::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(DM_Base_C_ToggleModule, Temp_byte_Variable) == 0x000001, "Member 'DM_Base_C_ToggleModule::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(DM_Base_C_ToggleModule, Temp_byte_Variable_1) == 0x000002, "Member 'DM_Base_C_ToggleModule::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(DM_Base_C_ToggleModule, K2Node_Select_Default) == 0x000003, "Member 'DM_Base_C_ToggleModule::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(DM_Base_C_ToggleModule, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'DM_Base_C_ToggleModule::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}

