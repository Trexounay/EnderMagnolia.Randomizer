#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_DebugMenu_Element_Choice_Toggle

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_DebugMenu_Element_Choice_Toggle.WBP_DebugMenu_Element_Choice_Toggle_C.SetToggle
// 0x0002 (0x0002 - 0x0000)
struct WBP_DebugMenu_Element_Choice_Toggle_C_SetToggle final
{
public:
	bool                                          ToggleValue_0;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BroadcastEvent;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_DebugMenu_Element_Choice_Toggle_C_SetToggle) == 0x000001, "Wrong alignment on WBP_DebugMenu_Element_Choice_Toggle_C_SetToggle");
static_assert(sizeof(WBP_DebugMenu_Element_Choice_Toggle_C_SetToggle) == 0x000002, "Wrong size on WBP_DebugMenu_Element_Choice_Toggle_C_SetToggle");
static_assert(offsetof(WBP_DebugMenu_Element_Choice_Toggle_C_SetToggle, ToggleValue_0) == 0x000000, "Member 'WBP_DebugMenu_Element_Choice_Toggle_C_SetToggle::ToggleValue_0' has a wrong offset!");
static_assert(offsetof(WBP_DebugMenu_Element_Choice_Toggle_C_SetToggle, BroadcastEvent) == 0x000001, "Member 'WBP_DebugMenu_Element_Choice_Toggle_C_SetToggle::BroadcastEvent' has a wrong offset!");

// Function WBP_DebugMenu_Element_Choice_Toggle.WBP_DebugMenu_Element_Choice_Toggle_C.SetLabel
// 0x0010 (0x0010 - 0x0000)
struct WBP_DebugMenu_Element_Choice_Toggle_C_SetLabel final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_DebugMenu_Element_Choice_Toggle_C_SetLabel) == 0x000008, "Wrong alignment on WBP_DebugMenu_Element_Choice_Toggle_C_SetLabel");
static_assert(sizeof(WBP_DebugMenu_Element_Choice_Toggle_C_SetLabel) == 0x000010, "Wrong size on WBP_DebugMenu_Element_Choice_Toggle_C_SetLabel");
static_assert(offsetof(WBP_DebugMenu_Element_Choice_Toggle_C_SetLabel, InText) == 0x000000, "Member 'WBP_DebugMenu_Element_Choice_Toggle_C_SetLabel::InText' has a wrong offset!");

// Function WBP_DebugMenu_Element_Choice_Toggle.WBP_DebugMenu_Element_Choice_Toggle_C.SetHandleLeftRight
// 0x0001 (0x0001 - 0x0000)
struct WBP_DebugMenu_Element_Choice_Toggle_C_SetHandleLeftRight final
{
public:
	bool                                          HandleLeftRight_0;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_DebugMenu_Element_Choice_Toggle_C_SetHandleLeftRight) == 0x000001, "Wrong alignment on WBP_DebugMenu_Element_Choice_Toggle_C_SetHandleLeftRight");
static_assert(sizeof(WBP_DebugMenu_Element_Choice_Toggle_C_SetHandleLeftRight) == 0x000001, "Wrong size on WBP_DebugMenu_Element_Choice_Toggle_C_SetHandleLeftRight");
static_assert(offsetof(WBP_DebugMenu_Element_Choice_Toggle_C_SetHandleLeftRight, HandleLeftRight_0) == 0x000000, "Member 'WBP_DebugMenu_Element_Choice_Toggle_C_SetHandleLeftRight::HandleLeftRight_0' has a wrong offset!");

// Function WBP_DebugMenu_Element_Choice_Toggle.WBP_DebugMenu_Element_Choice_Toggle_C.RefreshOptionText
// 0x0038 (0x0038 - 0x0000)
struct WBP_DebugMenu_Element_Choice_Toggle_C_RefreshOptionText final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0010)()
	class FText                                   Temp_text_Variable_1;                              // 0x0018(0x0010)()
	class FText                                   K2Node_Select_Default;                             // 0x0028(0x0010)()
};
static_assert(alignof(WBP_DebugMenu_Element_Choice_Toggle_C_RefreshOptionText) == 0x000008, "Wrong alignment on WBP_DebugMenu_Element_Choice_Toggle_C_RefreshOptionText");
static_assert(sizeof(WBP_DebugMenu_Element_Choice_Toggle_C_RefreshOptionText) == 0x000038, "Wrong size on WBP_DebugMenu_Element_Choice_Toggle_C_RefreshOptionText");
static_assert(offsetof(WBP_DebugMenu_Element_Choice_Toggle_C_RefreshOptionText, Temp_bool_Variable) == 0x000000, "Member 'WBP_DebugMenu_Element_Choice_Toggle_C_RefreshOptionText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_DebugMenu_Element_Choice_Toggle_C_RefreshOptionText, Temp_text_Variable) == 0x000008, "Member 'WBP_DebugMenu_Element_Choice_Toggle_C_RefreshOptionText::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_DebugMenu_Element_Choice_Toggle_C_RefreshOptionText, Temp_text_Variable_1) == 0x000018, "Member 'WBP_DebugMenu_Element_Choice_Toggle_C_RefreshOptionText::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_DebugMenu_Element_Choice_Toggle_C_RefreshOptionText, K2Node_Select_Default) == 0x000028, "Member 'WBP_DebugMenu_Element_Choice_Toggle_C_RefreshOptionText::K2Node_Select_Default' has a wrong offset!");

// Function WBP_DebugMenu_Element_Choice_Toggle.WBP_DebugMenu_Element_Choice_Toggle_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_DebugMenu_Element_Choice_Toggle_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_DebugMenu_Element_Choice_Toggle_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_DebugMenu_Element_Choice_Toggle_C_PreConstruct");
static_assert(sizeof(WBP_DebugMenu_Element_Choice_Toggle_C_PreConstruct) == 0x000001, "Wrong size on WBP_DebugMenu_Element_Choice_Toggle_C_PreConstruct");
static_assert(offsetof(WBP_DebugMenu_Element_Choice_Toggle_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_DebugMenu_Element_Choice_Toggle_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_DebugMenu_Element_Choice_Toggle.WBP_DebugMenu_Element_Choice_Toggle_C.OnFocusReceived
// 0x01B0 (0x01B0 - 0x0000)
struct WBP_DebugMenu_Element_Choice_Toggle_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x00F8(0x00B8)()
};
static_assert(alignof(WBP_DebugMenu_Element_Choice_Toggle_C_OnFocusReceived) == 0x000008, "Wrong alignment on WBP_DebugMenu_Element_Choice_Toggle_C_OnFocusReceived");
static_assert(sizeof(WBP_DebugMenu_Element_Choice_Toggle_C_OnFocusReceived) == 0x0001B0, "Wrong size on WBP_DebugMenu_Element_Choice_Toggle_C_OnFocusReceived");
static_assert(offsetof(WBP_DebugMenu_Element_Choice_Toggle_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'WBP_DebugMenu_Element_Choice_Toggle_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_DebugMenu_Element_Choice_Toggle_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'WBP_DebugMenu_Element_Choice_Toggle_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(WBP_DebugMenu_Element_Choice_Toggle_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'WBP_DebugMenu_Element_Choice_Toggle_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DebugMenu_Element_Choice_Toggle_C_OnFocusReceived, CallFunc_Handled_ReturnValue) == 0x0000F8, "Member 'WBP_DebugMenu_Element_Choice_Toggle_C_OnFocusReceived::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function WBP_DebugMenu_Element_Choice_Toggle.WBP_DebugMenu_Element_Choice_Toggle_C.ExecuteUbergraph_WBP_DebugMenu_Element_Choice_Toggle
// 0x0008 (0x0008 - 0x0000)
struct WBP_DebugMenu_Element_Choice_Toggle_C_ExecuteUbergraph_WBP_DebugMenu_Element_Choice_Toggle final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_DebugMenu_Element_Choice_Toggle_C_ExecuteUbergraph_WBP_DebugMenu_Element_Choice_Toggle) == 0x000004, "Wrong alignment on WBP_DebugMenu_Element_Choice_Toggle_C_ExecuteUbergraph_WBP_DebugMenu_Element_Choice_Toggle");
static_assert(sizeof(WBP_DebugMenu_Element_Choice_Toggle_C_ExecuteUbergraph_WBP_DebugMenu_Element_Choice_Toggle) == 0x000008, "Wrong size on WBP_DebugMenu_Element_Choice_Toggle_C_ExecuteUbergraph_WBP_DebugMenu_Element_Choice_Toggle");
static_assert(offsetof(WBP_DebugMenu_Element_Choice_Toggle_C_ExecuteUbergraph_WBP_DebugMenu_Element_Choice_Toggle, EntryPoint) == 0x000000, "Member 'WBP_DebugMenu_Element_Choice_Toggle_C_ExecuteUbergraph_WBP_DebugMenu_Element_Choice_Toggle::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_DebugMenu_Element_Choice_Toggle_C_ExecuteUbergraph_WBP_DebugMenu_Element_Choice_Toggle, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_DebugMenu_Element_Choice_Toggle_C_ExecuteUbergraph_WBP_DebugMenu_Element_Choice_Toggle::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_DebugMenu_Element_Choice_Toggle_C_ExecuteUbergraph_WBP_DebugMenu_Element_Choice_Toggle, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'WBP_DebugMenu_Element_Choice_Toggle_C_ExecuteUbergraph_WBP_DebugMenu_Element_Choice_Toggle::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}

