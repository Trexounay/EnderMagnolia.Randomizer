#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Fade_PlayerDeath

#include "Basic.hpp"

#include "Zion_structs.hpp"


namespace SDK::Params
{

// Function WBP_Fade_PlayerDeath.WBP_Fade_PlayerDeath_C.SetupFadeIn
// 0x0014 (0x0014 - 0x0000)
struct WBP_Fade_PlayerDeath_C_SetupFadeIn final
{
public:
	struct FFadeParameters                        FadeParameters;                                    // 0x0000(0x0014)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(WBP_Fade_PlayerDeath_C_SetupFadeIn) == 0x000004, "Wrong alignment on WBP_Fade_PlayerDeath_C_SetupFadeIn");
static_assert(sizeof(WBP_Fade_PlayerDeath_C_SetupFadeIn) == 0x000014, "Wrong size on WBP_Fade_PlayerDeath_C_SetupFadeIn");
static_assert(offsetof(WBP_Fade_PlayerDeath_C_SetupFadeIn, FadeParameters) == 0x000000, "Member 'WBP_Fade_PlayerDeath_C_SetupFadeIn::FadeParameters' has a wrong offset!");

// Function WBP_Fade_PlayerDeath.WBP_Fade_PlayerDeath_C.SetupFade
// 0x0014 (0x0014 - 0x0000)
struct WBP_Fade_PlayerDeath_C_SetupFade final
{
public:
	struct FFadeParameters                        FadeParameters;                                    // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(WBP_Fade_PlayerDeath_C_SetupFade) == 0x000004, "Wrong alignment on WBP_Fade_PlayerDeath_C_SetupFade");
static_assert(sizeof(WBP_Fade_PlayerDeath_C_SetupFade) == 0x000014, "Wrong size on WBP_Fade_PlayerDeath_C_SetupFade");
static_assert(offsetof(WBP_Fade_PlayerDeath_C_SetupFade, FadeParameters) == 0x000000, "Member 'WBP_Fade_PlayerDeath_C_SetupFade::FadeParameters' has a wrong offset!");

// Function WBP_Fade_PlayerDeath.WBP_Fade_PlayerDeath_C.PlayFadeAnimation
// 0x0058 (0x0058 - 0x0000)
struct WBP_Fade_PlayerDeath_C_PlayFadeAnimation final
{
public:
	class UWidgetAnimation*                       Animation;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFadeParameters                        FadeParameters;                                    // 0x0008(0x0014)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast; // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Fade_PlayerDeath_C_PlayFadeAnimation) == 0x000008, "Wrong alignment on WBP_Fade_PlayerDeath_C_PlayFadeAnimation");
static_assert(sizeof(WBP_Fade_PlayerDeath_C_PlayFadeAnimation) == 0x000058, "Wrong size on WBP_Fade_PlayerDeath_C_PlayFadeAnimation");
static_assert(offsetof(WBP_Fade_PlayerDeath_C_PlayFadeAnimation, Animation) == 0x000000, "Member 'WBP_Fade_PlayerDeath_C_PlayFadeAnimation::Animation' has a wrong offset!");
static_assert(offsetof(WBP_Fade_PlayerDeath_C_PlayFadeAnimation, FadeParameters) == 0x000008, "Member 'WBP_Fade_PlayerDeath_C_PlayFadeAnimation::FadeParameters' has a wrong offset!");
static_assert(offsetof(WBP_Fade_PlayerDeath_C_PlayFadeAnimation, CallFunc_GetEndTime_ReturnValue) == 0x00001C, "Member 'WBP_Fade_PlayerDeath_C_PlayFadeAnimation::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Fade_PlayerDeath_C_PlayFadeAnimation, CallFunc_PlayAnimation_ReturnValue) == 0x000020, "Member 'WBP_Fade_PlayerDeath_C_PlayFadeAnimation::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Fade_PlayerDeath_C_PlayFadeAnimation, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000028, "Member 'WBP_Fade_PlayerDeath_C_PlayFadeAnimation::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Fade_PlayerDeath_C_PlayFadeAnimation, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000030, "Member 'WBP_Fade_PlayerDeath_C_PlayFadeAnimation::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Fade_PlayerDeath_C_PlayFadeAnimation, CallFunc_PlayAnimation_ReturnValue_1) == 0x000038, "Member 'WBP_Fade_PlayerDeath_C_PlayFadeAnimation::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Fade_PlayerDeath_C_PlayFadeAnimation, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x000040, "Member 'WBP_Fade_PlayerDeath_C_PlayFadeAnimation::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Fade_PlayerDeath_C_PlayFadeAnimation, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000048, "Member 'WBP_Fade_PlayerDeath_C_PlayFadeAnimation::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Fade_PlayerDeath_C_PlayFadeAnimation, CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast) == 0x000050, "Member 'WBP_Fade_PlayerDeath_C_PlayFadeAnimation::CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast' has a wrong offset!");

// Function WBP_Fade_PlayerDeath.WBP_Fade_PlayerDeath_C.LaunchFadeOut
// 0x0014 (0x0014 - 0x0000)
struct WBP_Fade_PlayerDeath_C_LaunchFadeOut final
{
public:
	struct FFadeParameters                        FadeParameters;                                    // 0x0000(0x0014)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(WBP_Fade_PlayerDeath_C_LaunchFadeOut) == 0x000004, "Wrong alignment on WBP_Fade_PlayerDeath_C_LaunchFadeOut");
static_assert(sizeof(WBP_Fade_PlayerDeath_C_LaunchFadeOut) == 0x000014, "Wrong size on WBP_Fade_PlayerDeath_C_LaunchFadeOut");
static_assert(offsetof(WBP_Fade_PlayerDeath_C_LaunchFadeOut, FadeParameters) == 0x000000, "Member 'WBP_Fade_PlayerDeath_C_LaunchFadeOut::FadeParameters' has a wrong offset!");

// Function WBP_Fade_PlayerDeath.WBP_Fade_PlayerDeath_C.LaunchFadeIn
// 0x0014 (0x0014 - 0x0000)
struct WBP_Fade_PlayerDeath_C_LaunchFadeIn final
{
public:
	struct FFadeParameters                        FadeParameters;                                    // 0x0000(0x0014)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(WBP_Fade_PlayerDeath_C_LaunchFadeIn) == 0x000004, "Wrong alignment on WBP_Fade_PlayerDeath_C_LaunchFadeIn");
static_assert(sizeof(WBP_Fade_PlayerDeath_C_LaunchFadeIn) == 0x000014, "Wrong size on WBP_Fade_PlayerDeath_C_LaunchFadeIn");
static_assert(offsetof(WBP_Fade_PlayerDeath_C_LaunchFadeIn, FadeParameters) == 0x000000, "Member 'WBP_Fade_PlayerDeath_C_LaunchFadeIn::FadeParameters' has a wrong offset!");

// Function WBP_Fade_PlayerDeath.WBP_Fade_PlayerDeath_C.ExecuteUbergraph_WBP_Fade_PlayerDeath
// 0x0040 (0x0040 - 0x0000)
struct WBP_Fade_PlayerDeath_C_ExecuteUbergraph_WBP_Fade_PlayerDeath final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFadeParameters                        K2Node_Event_FadeParameters_1;                     // 0x0004(0x0014)(ConstParm, NoDestructor)
	struct FFadeParameters                        K2Node_Event_FadeParameters_2;                     // 0x0018(0x0014)(ConstParm, NoDestructor)
	struct FFadeParameters                        K2Node_Event_FadeParameters;                       // 0x002C(0x0014)(ConstParm, NoDestructor)
};
static_assert(alignof(WBP_Fade_PlayerDeath_C_ExecuteUbergraph_WBP_Fade_PlayerDeath) == 0x000004, "Wrong alignment on WBP_Fade_PlayerDeath_C_ExecuteUbergraph_WBP_Fade_PlayerDeath");
static_assert(sizeof(WBP_Fade_PlayerDeath_C_ExecuteUbergraph_WBP_Fade_PlayerDeath) == 0x000040, "Wrong size on WBP_Fade_PlayerDeath_C_ExecuteUbergraph_WBP_Fade_PlayerDeath");
static_assert(offsetof(WBP_Fade_PlayerDeath_C_ExecuteUbergraph_WBP_Fade_PlayerDeath, EntryPoint) == 0x000000, "Member 'WBP_Fade_PlayerDeath_C_ExecuteUbergraph_WBP_Fade_PlayerDeath::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Fade_PlayerDeath_C_ExecuteUbergraph_WBP_Fade_PlayerDeath, K2Node_Event_FadeParameters_1) == 0x000004, "Member 'WBP_Fade_PlayerDeath_C_ExecuteUbergraph_WBP_Fade_PlayerDeath::K2Node_Event_FadeParameters_1' has a wrong offset!");
static_assert(offsetof(WBP_Fade_PlayerDeath_C_ExecuteUbergraph_WBP_Fade_PlayerDeath, K2Node_Event_FadeParameters_2) == 0x000018, "Member 'WBP_Fade_PlayerDeath_C_ExecuteUbergraph_WBP_Fade_PlayerDeath::K2Node_Event_FadeParameters_2' has a wrong offset!");
static_assert(offsetof(WBP_Fade_PlayerDeath_C_ExecuteUbergraph_WBP_Fade_PlayerDeath, K2Node_Event_FadeParameters) == 0x00002C, "Member 'WBP_Fade_PlayerDeath_C_ExecuteUbergraph_WBP_Fade_PlayerDeath::K2Node_Event_FadeParameters' has a wrong offset!");

}

