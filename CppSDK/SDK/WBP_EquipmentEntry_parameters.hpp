#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_EquipmentEntry

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_EquipmentEntry.WBP_EquipmentEntry_C.BndEvt__WBP_EquipmentEntry_WBP_Button_Item_K2Node_ComponentBoundEvent_2_OnPressed__DelegateSignature
// 0x0048 (0x0048 - 0x0000)
struct WBP_EquipmentEntry_C_BndEvt__WBP_EquipmentEntry_WBP_Button_Item_K2Node_ComponentBoundEvent_2_OnPressed__DelegateSignature final
{
public:
	struct FKeyEvent                              KeyEvent;                                          // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UWBP_Button_Item_C*                     Item;                                              // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EquipmentEntry_C_BndEvt__WBP_EquipmentEntry_WBP_Button_Item_K2Node_ComponentBoundEvent_2_OnPressed__DelegateSignature) == 0x000008, "Wrong alignment on WBP_EquipmentEntry_C_BndEvt__WBP_EquipmentEntry_WBP_Button_Item_K2Node_ComponentBoundEvent_2_OnPressed__DelegateSignature");
static_assert(sizeof(WBP_EquipmentEntry_C_BndEvt__WBP_EquipmentEntry_WBP_Button_Item_K2Node_ComponentBoundEvent_2_OnPressed__DelegateSignature) == 0x000048, "Wrong size on WBP_EquipmentEntry_C_BndEvt__WBP_EquipmentEntry_WBP_Button_Item_K2Node_ComponentBoundEvent_2_OnPressed__DelegateSignature");
static_assert(offsetof(WBP_EquipmentEntry_C_BndEvt__WBP_EquipmentEntry_WBP_Button_Item_K2Node_ComponentBoundEvent_2_OnPressed__DelegateSignature, KeyEvent) == 0x000000, "Member 'WBP_EquipmentEntry_C_BndEvt__WBP_EquipmentEntry_WBP_Button_Item_K2Node_ComponentBoundEvent_2_OnPressed__DelegateSignature::KeyEvent' has a wrong offset!");
static_assert(offsetof(WBP_EquipmentEntry_C_BndEvt__WBP_EquipmentEntry_WBP_Button_Item_K2Node_ComponentBoundEvent_2_OnPressed__DelegateSignature, Item) == 0x000040, "Member 'WBP_EquipmentEntry_C_BndEvt__WBP_EquipmentEntry_WBP_Button_Item_K2Node_ComponentBoundEvent_2_OnPressed__DelegateSignature::Item' has a wrong offset!");

// Function WBP_EquipmentEntry.WBP_EquipmentEntry_C.BndEvt__WBP_EquipmentEntry_WBP_Button_Item_K2Node_ComponentBoundEvent_3_OnFocused__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_EquipmentEntry_C_BndEvt__WBP_EquipmentEntry_WBP_Button_Item_K2Node_ComponentBoundEvent_3_OnFocused__DelegateSignature final
{
public:
	class UWBP_Button_Item_C*                     Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EquipmentEntry_C_BndEvt__WBP_EquipmentEntry_WBP_Button_Item_K2Node_ComponentBoundEvent_3_OnFocused__DelegateSignature) == 0x000008, "Wrong alignment on WBP_EquipmentEntry_C_BndEvt__WBP_EquipmentEntry_WBP_Button_Item_K2Node_ComponentBoundEvent_3_OnFocused__DelegateSignature");
static_assert(sizeof(WBP_EquipmentEntry_C_BndEvt__WBP_EquipmentEntry_WBP_Button_Item_K2Node_ComponentBoundEvent_3_OnFocused__DelegateSignature) == 0x000008, "Wrong size on WBP_EquipmentEntry_C_BndEvt__WBP_EquipmentEntry_WBP_Button_Item_K2Node_ComponentBoundEvent_3_OnFocused__DelegateSignature");
static_assert(offsetof(WBP_EquipmentEntry_C_BndEvt__WBP_EquipmentEntry_WBP_Button_Item_K2Node_ComponentBoundEvent_3_OnFocused__DelegateSignature, Item) == 0x000000, "Member 'WBP_EquipmentEntry_C_BndEvt__WBP_EquipmentEntry_WBP_Button_Item_K2Node_ComponentBoundEvent_3_OnFocused__DelegateSignature::Item' has a wrong offset!");

// Function WBP_EquipmentEntry.WBP_EquipmentEntry_C.ExecuteUbergraph_WBP_EquipmentEntry
// 0x0058 (0x0058 - 0x0000)
struct WBP_EquipmentEntry_C_ExecuteUbergraph_WBP_EquipmentEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKeyEvent                              K2Node_ComponentBoundEvent_KeyEvent;               // 0x0008(0x0040)()
	class UWBP_Button_Item_C*                     K2Node_ComponentBoundEvent_Item_1;                 // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_Button_Item_C*                     K2Node_ComponentBoundEvent_Item;                   // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EquipmentEntry_C_ExecuteUbergraph_WBP_EquipmentEntry) == 0x000008, "Wrong alignment on WBP_EquipmentEntry_C_ExecuteUbergraph_WBP_EquipmentEntry");
static_assert(sizeof(WBP_EquipmentEntry_C_ExecuteUbergraph_WBP_EquipmentEntry) == 0x000058, "Wrong size on WBP_EquipmentEntry_C_ExecuteUbergraph_WBP_EquipmentEntry");
static_assert(offsetof(WBP_EquipmentEntry_C_ExecuteUbergraph_WBP_EquipmentEntry, EntryPoint) == 0x000000, "Member 'WBP_EquipmentEntry_C_ExecuteUbergraph_WBP_EquipmentEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_EquipmentEntry_C_ExecuteUbergraph_WBP_EquipmentEntry, K2Node_ComponentBoundEvent_KeyEvent) == 0x000008, "Member 'WBP_EquipmentEntry_C_ExecuteUbergraph_WBP_EquipmentEntry::K2Node_ComponentBoundEvent_KeyEvent' has a wrong offset!");
static_assert(offsetof(WBP_EquipmentEntry_C_ExecuteUbergraph_WBP_EquipmentEntry, K2Node_ComponentBoundEvent_Item_1) == 0x000048, "Member 'WBP_EquipmentEntry_C_ExecuteUbergraph_WBP_EquipmentEntry::K2Node_ComponentBoundEvent_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_EquipmentEntry_C_ExecuteUbergraph_WBP_EquipmentEntry, K2Node_ComponentBoundEvent_Item) == 0x000050, "Member 'WBP_EquipmentEntry_C_ExecuteUbergraph_WBP_EquipmentEntry::K2Node_ComponentBoundEvent_Item' has a wrong offset!");

// Function WBP_EquipmentEntry.WBP_EquipmentEntry_C.OnFocusReceived
// 0x01B0 (0x01B0 - 0x0000)
struct WBP_EquipmentEntry_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x00F8(0x00B8)()
};
static_assert(alignof(WBP_EquipmentEntry_C_OnFocusReceived) == 0x000008, "Wrong alignment on WBP_EquipmentEntry_C_OnFocusReceived");
static_assert(sizeof(WBP_EquipmentEntry_C_OnFocusReceived) == 0x0001B0, "Wrong size on WBP_EquipmentEntry_C_OnFocusReceived");
static_assert(offsetof(WBP_EquipmentEntry_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'WBP_EquipmentEntry_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_EquipmentEntry_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'WBP_EquipmentEntry_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(WBP_EquipmentEntry_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'WBP_EquipmentEntry_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EquipmentEntry_C_OnFocusReceived, CallFunc_Handled_ReturnValue) == 0x0000F8, "Member 'WBP_EquipmentEntry_C_OnFocusReceived::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function WBP_EquipmentEntry.WBP_EquipmentEntry_C.SetEquippedVisiblity
// 0x0005 (0x0005 - 0x0000)
struct WBP_EquipmentEntry_C_SetEquippedVisiblity final
{
public:
	bool                                          IsEquipped_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EquipmentEntry_C_SetEquippedVisiblity) == 0x000001, "Wrong alignment on WBP_EquipmentEntry_C_SetEquippedVisiblity");
static_assert(sizeof(WBP_EquipmentEntry_C_SetEquippedVisiblity) == 0x000005, "Wrong size on WBP_EquipmentEntry_C_SetEquippedVisiblity");
static_assert(offsetof(WBP_EquipmentEntry_C_SetEquippedVisiblity, IsEquipped_0) == 0x000000, "Member 'WBP_EquipmentEntry_C_SetEquippedVisiblity::IsEquipped_0' has a wrong offset!");
static_assert(offsetof(WBP_EquipmentEntry_C_SetEquippedVisiblity, Temp_bool_Variable) == 0x000001, "Member 'WBP_EquipmentEntry_C_SetEquippedVisiblity::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EquipmentEntry_C_SetEquippedVisiblity, Temp_byte_Variable) == 0x000002, "Member 'WBP_EquipmentEntry_C_SetEquippedVisiblity::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EquipmentEntry_C_SetEquippedVisiblity, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_EquipmentEntry_C_SetEquippedVisiblity::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_EquipmentEntry_C_SetEquippedVisiblity, K2Node_Select_Default) == 0x000004, "Member 'WBP_EquipmentEntry_C_SetEquippedVisiblity::K2Node_Select_Default' has a wrong offset!");

// Function WBP_EquipmentEntry.WBP_EquipmentEntry_C.SetSelected
// 0x0005 (0x0005 - 0x0000)
struct WBP_EquipmentEntry_C_SetSelected final
{
public:
	bool                                          bSelected;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EquipmentEntry_C_SetSelected) == 0x000001, "Wrong alignment on WBP_EquipmentEntry_C_SetSelected");
static_assert(sizeof(WBP_EquipmentEntry_C_SetSelected) == 0x000005, "Wrong size on WBP_EquipmentEntry_C_SetSelected");
static_assert(offsetof(WBP_EquipmentEntry_C_SetSelected, bSelected) == 0x000000, "Member 'WBP_EquipmentEntry_C_SetSelected::bSelected' has a wrong offset!");
static_assert(offsetof(WBP_EquipmentEntry_C_SetSelected, Temp_bool_Variable) == 0x000001, "Member 'WBP_EquipmentEntry_C_SetSelected::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EquipmentEntry_C_SetSelected, Temp_byte_Variable) == 0x000002, "Member 'WBP_EquipmentEntry_C_SetSelected::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_EquipmentEntry_C_SetSelected, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_EquipmentEntry_C_SetSelected::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_EquipmentEntry_C_SetSelected, K2Node_Select_Default) == 0x000004, "Member 'WBP_EquipmentEntry_C_SetSelected::K2Node_Select_Default' has a wrong offset!");

}

