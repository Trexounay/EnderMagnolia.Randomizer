#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Slider

#include "Basic.hpp"


namespace SDK::Params
{

// Function WBP_Slider.WBP_Slider_C.BndEvt__WBP_Slider_Slider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_Slider_C_BndEvt__WBP_Slider_Slider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Slider_C_BndEvt__WBP_Slider_Slider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on WBP_Slider_C_BndEvt__WBP_Slider_Slider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature");
static_assert(sizeof(WBP_Slider_C_BndEvt__WBP_Slider_Slider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on WBP_Slider_C_BndEvt__WBP_Slider_Slider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature");
static_assert(offsetof(WBP_Slider_C_BndEvt__WBP_Slider_Slider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature, Value) == 0x000000, "Member 'WBP_Slider_C_BndEvt__WBP_Slider_Slider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature::Value' has a wrong offset!");

// Function WBP_Slider.WBP_Slider_C.ExecuteUbergraph_WBP_Slider
// 0x0040 (0x0040 - 0x0000)
struct WBP_Slider_C_ExecuteUbergraph_WBP_Slider final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetStepSize_Step_Size;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Value;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GridSnap_Float_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GridSnap_Float_GridSize_ImplicitCast;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GridSnap_Float_Location_ImplicitCast;     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_B_ImplicitCast;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetValue_InValue_ImplicitCast;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Slider_C_ExecuteUbergraph_WBP_Slider) == 0x000008, "Wrong alignment on WBP_Slider_C_ExecuteUbergraph_WBP_Slider");
static_assert(sizeof(WBP_Slider_C_ExecuteUbergraph_WBP_Slider) == 0x000040, "Wrong size on WBP_Slider_C_ExecuteUbergraph_WBP_Slider");
static_assert(offsetof(WBP_Slider_C_ExecuteUbergraph_WBP_Slider, EntryPoint) == 0x000000, "Member 'WBP_Slider_C_ExecuteUbergraph_WBP_Slider::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Slider_C_ExecuteUbergraph_WBP_Slider, CallFunc_GetStepSize_Step_Size) == 0x000004, "Member 'WBP_Slider_C_ExecuteUbergraph_WBP_Slider::CallFunc_GetStepSize_Step_Size' has a wrong offset!");
static_assert(offsetof(WBP_Slider_C_ExecuteUbergraph_WBP_Slider, K2Node_ComponentBoundEvent_Value) == 0x000008, "Member 'WBP_Slider_C_ExecuteUbergraph_WBP_Slider::K2Node_ComponentBoundEvent_Value' has a wrong offset!");
static_assert(offsetof(WBP_Slider_C_ExecuteUbergraph_WBP_Slider, CallFunc_GridSnap_Float_ReturnValue) == 0x000010, "Member 'WBP_Slider_C_ExecuteUbergraph_WBP_Slider::CallFunc_GridSnap_Float_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Slider_C_ExecuteUbergraph_WBP_Slider, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'WBP_Slider_C_ExecuteUbergraph_WBP_Slider::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Slider_C_ExecuteUbergraph_WBP_Slider, CallFunc_GridSnap_Float_GridSize_ImplicitCast) == 0x000020, "Member 'WBP_Slider_C_ExecuteUbergraph_WBP_Slider::CallFunc_GridSnap_Float_GridSize_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Slider_C_ExecuteUbergraph_WBP_Slider, CallFunc_GridSnap_Float_Location_ImplicitCast) == 0x000028, "Member 'WBP_Slider_C_ExecuteUbergraph_WBP_Slider::CallFunc_GridSnap_Float_Location_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Slider_C_ExecuteUbergraph_WBP_Slider, CallFunc_SelectFloat_B_ImplicitCast) == 0x000030, "Member 'WBP_Slider_C_ExecuteUbergraph_WBP_Slider::CallFunc_SelectFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Slider_C_ExecuteUbergraph_WBP_Slider, CallFunc_SetValue_InValue_ImplicitCast) == 0x000038, "Member 'WBP_Slider_C_ExecuteUbergraph_WBP_Slider::CallFunc_SetValue_InValue_ImplicitCast' has a wrong offset!");

// Function WBP_Slider.WBP_Slider_C.SetMinMaxValue
// 0x0008 (0x0008 - 0x0000)
struct WBP_Slider_C_SetMinMaxValue final
{
public:
	float                                         Min;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Max;                                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Slider_C_SetMinMaxValue) == 0x000004, "Wrong alignment on WBP_Slider_C_SetMinMaxValue");
static_assert(sizeof(WBP_Slider_C_SetMinMaxValue) == 0x000008, "Wrong size on WBP_Slider_C_SetMinMaxValue");
static_assert(offsetof(WBP_Slider_C_SetMinMaxValue, Min) == 0x000000, "Member 'WBP_Slider_C_SetMinMaxValue::Min' has a wrong offset!");
static_assert(offsetof(WBP_Slider_C_SetMinMaxValue, Max) == 0x000004, "Member 'WBP_Slider_C_SetMinMaxValue::Max' has a wrong offset!");

// Function WBP_Slider.WBP_Slider_C.SetMouseUseStep
// 0x0001 (0x0001 - 0x0000)
struct WBP_Slider_C_SetMouseUseStep final
{
public:
	bool                                          bMouseUseStep_0;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Slider_C_SetMouseUseStep) == 0x000001, "Wrong alignment on WBP_Slider_C_SetMouseUseStep");
static_assert(sizeof(WBP_Slider_C_SetMouseUseStep) == 0x000001, "Wrong size on WBP_Slider_C_SetMouseUseStep");
static_assert(offsetof(WBP_Slider_C_SetMouseUseStep, bMouseUseStep_0) == 0x000000, "Member 'WBP_Slider_C_SetMouseUseStep::bMouseUseStep_0' has a wrong offset!");

// Function WBP_Slider.WBP_Slider_C.SetStepSize
// 0x0004 (0x0004 - 0x0000)
struct WBP_Slider_C_SetStepSize final
{
public:
	float                                         Step_Size;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Slider_C_SetStepSize) == 0x000004, "Wrong alignment on WBP_Slider_C_SetStepSize");
static_assert(sizeof(WBP_Slider_C_SetStepSize) == 0x000004, "Wrong size on WBP_Slider_C_SetStepSize");
static_assert(offsetof(WBP_Slider_C_SetStepSize, Step_Size) == 0x000000, "Member 'WBP_Slider_C_SetStepSize::Step_Size' has a wrong offset!");

// Function WBP_Slider.WBP_Slider_C.SetValue
// 0x0008 (0x0008 - 0x0000)
struct WBP_Slider_C_SetValue final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetNormalizedValue_ReturnValue;           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Slider_C_SetValue) == 0x000004, "Wrong alignment on WBP_Slider_C_SetValue");
static_assert(sizeof(WBP_Slider_C_SetValue) == 0x000008, "Wrong size on WBP_Slider_C_SetValue");
static_assert(offsetof(WBP_Slider_C_SetValue, InValue) == 0x000000, "Member 'WBP_Slider_C_SetValue::InValue' has a wrong offset!");
static_assert(offsetof(WBP_Slider_C_SetValue, CallFunc_GetNormalizedValue_ReturnValue) == 0x000004, "Member 'WBP_Slider_C_SetValue::CallFunc_GetNormalizedValue_ReturnValue' has a wrong offset!");

// Function WBP_Slider.WBP_Slider_C.GetMaxValue
// 0x0004 (0x0004 - 0x0000)
struct WBP_Slider_C_GetMaxValue final
{
public:
	float                                         Max_Value;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Slider_C_GetMaxValue) == 0x000004, "Wrong alignment on WBP_Slider_C_GetMaxValue");
static_assert(sizeof(WBP_Slider_C_GetMaxValue) == 0x000004, "Wrong size on WBP_Slider_C_GetMaxValue");
static_assert(offsetof(WBP_Slider_C_GetMaxValue, Max_Value) == 0x000000, "Member 'WBP_Slider_C_GetMaxValue::Max_Value' has a wrong offset!");

// Function WBP_Slider.WBP_Slider_C.GetMinValue
// 0x0004 (0x0004 - 0x0000)
struct WBP_Slider_C_GetMinValue final
{
public:
	float                                         Min_Value;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Slider_C_GetMinValue) == 0x000004, "Wrong alignment on WBP_Slider_C_GetMinValue");
static_assert(sizeof(WBP_Slider_C_GetMinValue) == 0x000004, "Wrong size on WBP_Slider_C_GetMinValue");
static_assert(offsetof(WBP_Slider_C_GetMinValue, Min_Value) == 0x000000, "Member 'WBP_Slider_C_GetMinValue::Min_Value' has a wrong offset!");

// Function WBP_Slider.WBP_Slider_C.GetStepSize
// 0x0004 (0x0004 - 0x0000)
struct WBP_Slider_C_GetStepSize final
{
public:
	float                                         Step_Size;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Slider_C_GetStepSize) == 0x000004, "Wrong alignment on WBP_Slider_C_GetStepSize");
static_assert(sizeof(WBP_Slider_C_GetStepSize) == 0x000004, "Wrong size on WBP_Slider_C_GetStepSize");
static_assert(offsetof(WBP_Slider_C_GetStepSize, Step_Size) == 0x000000, "Member 'WBP_Slider_C_GetStepSize::Step_Size' has a wrong offset!");

// Function WBP_Slider.WBP_Slider_C.GetValue
// 0x0008 (0x0008 - 0x0000)
struct WBP_Slider_C_GetValue final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Slider_C_GetValue) == 0x000004, "Wrong alignment on WBP_Slider_C_GetValue");
static_assert(sizeof(WBP_Slider_C_GetValue) == 0x000008, "Wrong size on WBP_Slider_C_GetValue");
static_assert(offsetof(WBP_Slider_C_GetValue, ReturnValue) == 0x000000, "Member 'WBP_Slider_C_GetValue::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Slider_C_GetValue, CallFunc_GetValue_ReturnValue) == 0x000004, "Member 'WBP_Slider_C_GetValue::CallFunc_GetValue_ReturnValue' has a wrong offset!");

}

