#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Passive_EquippedList

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Zion_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_Passive_EquippedList.WBP_Passive_EquippedList_C.CachePassiveEntries
// 0x0078 (0x0078 - 0x0000)
struct WBP_Passive_EquippedList_C_CachePassiveEntries final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWBP_PassiveEntry_C* PassiveEntry)> K2Node_CreateDelegate_OutputDelegate;   // 0x000C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWBP_PassiveEntry_C* PassiveEntry)> K2Node_CreateDelegate_OutputDelegate_1; // 0x001C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWBP_PassiveEntry_C* PassiveEntry)> K2Node_CreateDelegate_OutputDelegate_2; // 0x002C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_PassiveEntry_C*                    K2Node_DynamicCast_AsWBP_Passive_Entry;            // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Passive_EquippedList_C_CachePassiveEntries) == 0x000008, "Wrong alignment on WBP_Passive_EquippedList_C_CachePassiveEntries");
static_assert(sizeof(WBP_Passive_EquippedList_C_CachePassiveEntries) == 0x000078, "Wrong size on WBP_Passive_EquippedList_C_CachePassiveEntries");
static_assert(offsetof(WBP_Passive_EquippedList_C_CachePassiveEntries, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_Passive_EquippedList_C_CachePassiveEntries::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_CachePassiveEntries, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_Passive_EquippedList_C_CachePassiveEntries::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_CachePassiveEntries, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_Passive_EquippedList_C_CachePassiveEntries::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_CachePassiveEntries, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'WBP_Passive_EquippedList_C_CachePassiveEntries::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_CachePassiveEntries, K2Node_CreateDelegate_OutputDelegate_1) == 0x00001C, "Member 'WBP_Passive_EquippedList_C_CachePassiveEntries::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_CachePassiveEntries, K2Node_CreateDelegate_OutputDelegate_2) == 0x00002C, "Member 'WBP_Passive_EquippedList_C_CachePassiveEntries::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_CachePassiveEntries, CallFunc_GetAllChildren_ReturnValue) == 0x000040, "Member 'WBP_Passive_EquippedList_C_CachePassiveEntries::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_CachePassiveEntries, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'WBP_Passive_EquippedList_C_CachePassiveEntries::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_CachePassiveEntries, CallFunc_Array_Get_Item) == 0x000058, "Member 'WBP_Passive_EquippedList_C_CachePassiveEntries::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_CachePassiveEntries, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'WBP_Passive_EquippedList_C_CachePassiveEntries::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_CachePassiveEntries, K2Node_DynamicCast_AsWBP_Passive_Entry) == 0x000068, "Member 'WBP_Passive_EquippedList_C_CachePassiveEntries::K2Node_DynamicCast_AsWBP_Passive_Entry' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_CachePassiveEntries, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'WBP_Passive_EquippedList_C_CachePassiveEntries::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_CachePassiveEntries, CallFunc_Array_AddUnique_ReturnValue) == 0x000074, "Member 'WBP_Passive_EquippedList_C_CachePassiveEntries::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function WBP_Passive_EquippedList.WBP_Passive_EquippedList_C.ExecuteUbergraph_WBP_Passive_EquippedList
// 0x0030 (0x0030 - 0x0000)
struct WBP_Passive_EquippedList_C_ExecuteUbergraph_WBP_Passive_EquippedList final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerControllerZion*                  CallFunc_Get_ReturnValue;                          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_PassiveEntry_C*                    K2Node_CustomEvent_PassiveEntry_2;                 // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_PassiveEntry_C*                    K2Node_CustomEvent_PassiveEntry_1;                 // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_PassiveEntry_C*                    K2Node_CustomEvent_PassiveEntry;                   // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x0028(0x0008)(NoDestructor)
};
static_assert(alignof(WBP_Passive_EquippedList_C_ExecuteUbergraph_WBP_Passive_EquippedList) == 0x000008, "Wrong alignment on WBP_Passive_EquippedList_C_ExecuteUbergraph_WBP_Passive_EquippedList");
static_assert(sizeof(WBP_Passive_EquippedList_C_ExecuteUbergraph_WBP_Passive_EquippedList) == 0x000030, "Wrong size on WBP_Passive_EquippedList_C_ExecuteUbergraph_WBP_Passive_EquippedList");
static_assert(offsetof(WBP_Passive_EquippedList_C_ExecuteUbergraph_WBP_Passive_EquippedList, EntryPoint) == 0x000000, "Member 'WBP_Passive_EquippedList_C_ExecuteUbergraph_WBP_Passive_EquippedList::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_ExecuteUbergraph_WBP_Passive_EquippedList, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_Passive_EquippedList_C_ExecuteUbergraph_WBP_Passive_EquippedList::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_ExecuteUbergraph_WBP_Passive_EquippedList, CallFunc_Get_ReturnValue) == 0x000008, "Member 'WBP_Passive_EquippedList_C_ExecuteUbergraph_WBP_Passive_EquippedList::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_ExecuteUbergraph_WBP_Passive_EquippedList, K2Node_CustomEvent_PassiveEntry_2) == 0x000010, "Member 'WBP_Passive_EquippedList_C_ExecuteUbergraph_WBP_Passive_EquippedList::K2Node_CustomEvent_PassiveEntry_2' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_ExecuteUbergraph_WBP_Passive_EquippedList, K2Node_CustomEvent_PassiveEntry_1) == 0x000018, "Member 'WBP_Passive_EquippedList_C_ExecuteUbergraph_WBP_Passive_EquippedList::K2Node_CustomEvent_PassiveEntry_1' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_ExecuteUbergraph_WBP_Passive_EquippedList, K2Node_CustomEvent_PassiveEntry) == 0x000020, "Member 'WBP_Passive_EquippedList_C_ExecuteUbergraph_WBP_Passive_EquippedList::K2Node_CustomEvent_PassiveEntry' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_ExecuteUbergraph_WBP_Passive_EquippedList, K2Node_Event_InFocusEvent) == 0x000028, "Member 'WBP_Passive_EquippedList_C_ExecuteUbergraph_WBP_Passive_EquippedList::K2Node_Event_InFocusEvent' has a wrong offset!");

// Function WBP_Passive_EquippedList.WBP_Passive_EquippedList_C.GetEntryAtIndex
// 0x0018 (0x0018 - 0x0000)
struct WBP_Passive_EquippedList_C_GetEntryAtIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_PassiveEntry_C*                    PassiveEntry;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_PassiveEntry_C*                    CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Passive_EquippedList_C_GetEntryAtIndex) == 0x000008, "Wrong alignment on WBP_Passive_EquippedList_C_GetEntryAtIndex");
static_assert(sizeof(WBP_Passive_EquippedList_C_GetEntryAtIndex) == 0x000018, "Wrong size on WBP_Passive_EquippedList_C_GetEntryAtIndex");
static_assert(offsetof(WBP_Passive_EquippedList_C_GetEntryAtIndex, Index_0) == 0x000000, "Member 'WBP_Passive_EquippedList_C_GetEntryAtIndex::Index_0' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_GetEntryAtIndex, PassiveEntry) == 0x000008, "Member 'WBP_Passive_EquippedList_C_GetEntryAtIndex::PassiveEntry' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_GetEntryAtIndex, CallFunc_Array_Get_Item) == 0x000010, "Member 'WBP_Passive_EquippedList_C_GetEntryAtIndex::CallFunc_Array_Get_Item' has a wrong offset!");

// Function WBP_Passive_EquippedList.WBP_Passive_EquippedList_C.GetEntryIndex
// 0x0010 (0x0010 - 0x0000)
struct WBP_Passive_EquippedList_C_GetEntryIndex final
{
public:
	const class UWBP_PassiveEntry_C*              PassiveEntry;                                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Passive_EquippedList_C_GetEntryIndex) == 0x000008, "Wrong alignment on WBP_Passive_EquippedList_C_GetEntryIndex");
static_assert(sizeof(WBP_Passive_EquippedList_C_GetEntryIndex) == 0x000010, "Wrong size on WBP_Passive_EquippedList_C_GetEntryIndex");
static_assert(offsetof(WBP_Passive_EquippedList_C_GetEntryIndex, PassiveEntry) == 0x000000, "Member 'WBP_Passive_EquippedList_C_GetEntryIndex::PassiveEntry' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_GetEntryIndex, ReturnValue) == 0x000008, "Member 'WBP_Passive_EquippedList_C_GetEntryIndex::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_GetEntryIndex, CallFunc_Array_Find_ReturnValue) == 0x00000C, "Member 'WBP_Passive_EquippedList_C_GetEntryIndex::CallFunc_Array_Find_ReturnValue' has a wrong offset!");

// Function WBP_Passive_EquippedList.WBP_Passive_EquippedList_C.GetFocusedEntry
// 0x0008 (0x0008 - 0x0000)
struct WBP_Passive_EquippedList_C_GetFocusedEntry final
{
public:
	class UWBP_PassiveEntry_C*                    FocusedPassiveEntry_0;                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Passive_EquippedList_C_GetFocusedEntry) == 0x000008, "Wrong alignment on WBP_Passive_EquippedList_C_GetFocusedEntry");
static_assert(sizeof(WBP_Passive_EquippedList_C_GetFocusedEntry) == 0x000008, "Wrong size on WBP_Passive_EquippedList_C_GetFocusedEntry");
static_assert(offsetof(WBP_Passive_EquippedList_C_GetFocusedEntry, FocusedPassiveEntry_0) == 0x000000, "Member 'WBP_Passive_EquippedList_C_GetFocusedEntry::FocusedPassiveEntry_0' has a wrong offset!");

// Function WBP_Passive_EquippedList.WBP_Passive_EquippedList_C.HasValidEntries
// 0x0018 (0x0018 - 0x0000)
struct WBP_Passive_EquippedList_C_HasValidEntries final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_PassiveEntry_C*                    CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Passive_EquippedList_C_HasValidEntries) == 0x000008, "Wrong alignment on WBP_Passive_EquippedList_C_HasValidEntries");
static_assert(sizeof(WBP_Passive_EquippedList_C_HasValidEntries) == 0x000018, "Wrong size on WBP_Passive_EquippedList_C_HasValidEntries");
static_assert(offsetof(WBP_Passive_EquippedList_C_HasValidEntries, ReturnValue) == 0x000000, "Member 'WBP_Passive_EquippedList_C_HasValidEntries::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_HasValidEntries, CallFunc_Array_Get_Item) == 0x000008, "Member 'WBP_Passive_EquippedList_C_HasValidEntries::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_HasValidEntries, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_Passive_EquippedList_C_HasValidEntries::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_Passive_EquippedList.WBP_Passive_EquippedList_C.OnFocusReceived
// 0x0278 (0x0278 - 0x0000)
struct WBP_Passive_EquippedList_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x00F8(0x00B8)()
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x01B0(0x00B8)()
	class UWBP_PassiveEntry_C*                    CallFunc_Array_Get_Item;                           // 0x0268(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Passive_EquippedList_C_OnFocusReceived) == 0x000008, "Wrong alignment on WBP_Passive_EquippedList_C_OnFocusReceived");
static_assert(sizeof(WBP_Passive_EquippedList_C_OnFocusReceived) == 0x000278, "Wrong size on WBP_Passive_EquippedList_C_OnFocusReceived");
static_assert(offsetof(WBP_Passive_EquippedList_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'WBP_Passive_EquippedList_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'WBP_Passive_EquippedList_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'WBP_Passive_EquippedList_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_OnFocusReceived, CallFunc_Unhandled_ReturnValue) == 0x0000F8, "Member 'WBP_Passive_EquippedList_C_OnFocusReceived::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_OnFocusReceived, CallFunc_Handled_ReturnValue) == 0x0001B0, "Member 'WBP_Passive_EquippedList_C_OnFocusReceived::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_OnFocusReceived, CallFunc_Array_Get_Item) == 0x000268, "Member 'WBP_Passive_EquippedList_C_OnFocusReceived::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_OnFocusReceived, CallFunc_IsValid_ReturnValue) == 0x000270, "Member 'WBP_Passive_EquippedList_C_OnFocusReceived::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_Passive_EquippedList.WBP_Passive_EquippedList_C.OnPassiveEntryFocused
// 0x0008 (0x0008 - 0x0000)
struct WBP_Passive_EquippedList_C_OnPassiveEntryFocused final
{
public:
	class UWBP_PassiveEntry_C*                    PassiveEntry;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Passive_EquippedList_C_OnPassiveEntryFocused) == 0x000008, "Wrong alignment on WBP_Passive_EquippedList_C_OnPassiveEntryFocused");
static_assert(sizeof(WBP_Passive_EquippedList_C_OnPassiveEntryFocused) == 0x000008, "Wrong size on WBP_Passive_EquippedList_C_OnPassiveEntryFocused");
static_assert(offsetof(WBP_Passive_EquippedList_C_OnPassiveEntryFocused, PassiveEntry) == 0x000000, "Member 'WBP_Passive_EquippedList_C_OnPassiveEntryFocused::PassiveEntry' has a wrong offset!");

// Function WBP_Passive_EquippedList.WBP_Passive_EquippedList_C.OnPassiveEntryPressed
// 0x0008 (0x0008 - 0x0000)
struct WBP_Passive_EquippedList_C_OnPassiveEntryPressed final
{
public:
	class UWBP_PassiveEntry_C*                    PassiveEntry;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Passive_EquippedList_C_OnPassiveEntryPressed) == 0x000008, "Wrong alignment on WBP_Passive_EquippedList_C_OnPassiveEntryPressed");
static_assert(sizeof(WBP_Passive_EquippedList_C_OnPassiveEntryPressed) == 0x000008, "Wrong size on WBP_Passive_EquippedList_C_OnPassiveEntryPressed");
static_assert(offsetof(WBP_Passive_EquippedList_C_OnPassiveEntryPressed, PassiveEntry) == 0x000000, "Member 'WBP_Passive_EquippedList_C_OnPassiveEntryPressed::PassiveEntry' has a wrong offset!");

// Function WBP_Passive_EquippedList.WBP_Passive_EquippedList_C.OnPassiveEntryPressedContext
// 0x0008 (0x0008 - 0x0000)
struct WBP_Passive_EquippedList_C_OnPassiveEntryPressedContext final
{
public:
	class UWBP_PassiveEntry_C*                    PassiveEntry;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Passive_EquippedList_C_OnPassiveEntryPressedContext) == 0x000008, "Wrong alignment on WBP_Passive_EquippedList_C_OnPassiveEntryPressedContext");
static_assert(sizeof(WBP_Passive_EquippedList_C_OnPassiveEntryPressedContext) == 0x000008, "Wrong size on WBP_Passive_EquippedList_C_OnPassiveEntryPressedContext");
static_assert(offsetof(WBP_Passive_EquippedList_C_OnPassiveEntryPressedContext, PassiveEntry) == 0x000000, "Member 'WBP_Passive_EquippedList_C_OnPassiveEntryPressedContext::PassiveEntry' has a wrong offset!");

// Function WBP_Passive_EquippedList.WBP_Passive_EquippedList_C.OnRemovedFromFocusPath
// 0x0008 (0x0008 - 0x0000)
struct WBP_Passive_EquippedList_C_OnRemovedFromFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(WBP_Passive_EquippedList_C_OnRemovedFromFocusPath) == 0x000004, "Wrong alignment on WBP_Passive_EquippedList_C_OnRemovedFromFocusPath");
static_assert(sizeof(WBP_Passive_EquippedList_C_OnRemovedFromFocusPath) == 0x000008, "Wrong size on WBP_Passive_EquippedList_C_OnRemovedFromFocusPath");
static_assert(offsetof(WBP_Passive_EquippedList_C_OnRemovedFromFocusPath, InFocusEvent) == 0x000000, "Member 'WBP_Passive_EquippedList_C_OnRemovedFromFocusPath::InFocusEvent' has a wrong offset!");

// Function WBP_Passive_EquippedList.WBP_Passive_EquippedList_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_Passive_EquippedList_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Passive_EquippedList_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_Passive_EquippedList_C_PreConstruct");
static_assert(sizeof(WBP_Passive_EquippedList_C_PreConstruct) == 0x000001, "Wrong size on WBP_Passive_EquippedList_C_PreConstruct");
static_assert(offsetof(WBP_Passive_EquippedList_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_Passive_EquippedList_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_Passive_EquippedList.WBP_Passive_EquippedList_C.Refresh
// 0x0078 (0x0078 - 0x0000)
struct WBP_Passive_EquippedList_C_Refresh final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPassiveRuntimeData>            CallFunc_GetEquippedPassives_ReturnValue;          // 0x0018(0x0010)(ConstParm, ReferenceParm)
	struct FPassiveRuntimeData                    CallFunc_Array_Get_Item;                           // 0x0028(0x0018)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle;              // 0x0048(0x0010)(NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_PassiveEntry_C*                    CallFunc_Array_Get_Item_1;                         // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_PassiveEntry_C*                    CallFunc_Array_Get_Item_2;                         // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Passive_EquippedList_C_Refresh) == 0x000008, "Wrong alignment on WBP_Passive_EquippedList_C_Refresh");
static_assert(sizeof(WBP_Passive_EquippedList_C_Refresh) == 0x000078, "Wrong size on WBP_Passive_EquippedList_C_Refresh");
static_assert(offsetof(WBP_Passive_EquippedList_C_Refresh, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_Passive_EquippedList_C_Refresh::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_Refresh, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_Passive_EquippedList_C_Refresh::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_Refresh, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_Passive_EquippedList_C_Refresh::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_Refresh, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'WBP_Passive_EquippedList_C_Refresh::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_Refresh, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_Passive_EquippedList_C_Refresh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_Refresh, CallFunc_GetEquippedPassives_ReturnValue) == 0x000018, "Member 'WBP_Passive_EquippedList_C_Refresh::CallFunc_GetEquippedPassives_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_Refresh, CallFunc_Array_Get_Item) == 0x000028, "Member 'WBP_Passive_EquippedList_C_Refresh::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_Refresh, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'WBP_Passive_EquippedList_C_Refresh::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_Refresh, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'WBP_Passive_EquippedList_C_Refresh::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_Refresh, K2Node_MakeStruct_DataTableRowHandle) == 0x000048, "Member 'WBP_Passive_EquippedList_C_Refresh::K2Node_MakeStruct_DataTableRowHandle' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_Refresh, Temp_int_Loop_Counter_Variable_1) == 0x000058, "Member 'WBP_Passive_EquippedList_C_Refresh::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_Refresh, CallFunc_Add_IntInt_ReturnValue_1) == 0x00005C, "Member 'WBP_Passive_EquippedList_C_Refresh::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_Refresh, CallFunc_Array_Get_Item_1) == 0x000060, "Member 'WBP_Passive_EquippedList_C_Refresh::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_Refresh, CallFunc_Array_Length_ReturnValue_1) == 0x000068, "Member 'WBP_Passive_EquippedList_C_Refresh::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_Refresh, CallFunc_Less_IntInt_ReturnValue_1) == 0x00006C, "Member 'WBP_Passive_EquippedList_C_Refresh::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_Refresh, CallFunc_Array_Get_Item_2) == 0x000070, "Member 'WBP_Passive_EquippedList_C_Refresh::CallFunc_Array_Get_Item_2' has a wrong offset!");

// Function WBP_Passive_EquippedList.WBP_Passive_EquippedList_C.RefreshSlotText
// 0x00D0 (0x00D0 - 0x0000)
struct WBP_Passive_EquippedList_C_RefreshSlotText final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSlotCount_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUsedSlotCount_ReturnValue;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0018(0x0048)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0068(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00C0(0x0010)()
};
static_assert(alignof(WBP_Passive_EquippedList_C_RefreshSlotText) == 0x000008, "Wrong alignment on WBP_Passive_EquippedList_C_RefreshSlotText");
static_assert(sizeof(WBP_Passive_EquippedList_C_RefreshSlotText) == 0x0000D0, "Wrong size on WBP_Passive_EquippedList_C_RefreshSlotText");
static_assert(offsetof(WBP_Passive_EquippedList_C_RefreshSlotText, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_Passive_EquippedList_C_RefreshSlotText::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_RefreshSlotText, CallFunc_GetSlotCount_ReturnValue) == 0x000004, "Member 'WBP_Passive_EquippedList_C_RefreshSlotText::CallFunc_GetSlotCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_RefreshSlotText, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000008, "Member 'WBP_Passive_EquippedList_C_RefreshSlotText::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_RefreshSlotText, CallFunc_GetUsedSlotCount_ReturnValue) == 0x000010, "Member 'WBP_Passive_EquippedList_C_RefreshSlotText::CallFunc_GetUsedSlotCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_RefreshSlotText, K2Node_MakeStruct_FormatArgumentData) == 0x000018, "Member 'WBP_Passive_EquippedList_C_RefreshSlotText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_RefreshSlotText, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000060, "Member 'WBP_Passive_EquippedList_C_RefreshSlotText::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_RefreshSlotText, K2Node_MakeStruct_FormatArgumentData_1) == 0x000068, "Member 'WBP_Passive_EquippedList_C_RefreshSlotText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_RefreshSlotText, K2Node_MakeArray_Array) == 0x0000B0, "Member 'WBP_Passive_EquippedList_C_RefreshSlotText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_RefreshSlotText, CallFunc_Format_ReturnValue) == 0x0000C0, "Member 'WBP_Passive_EquippedList_C_RefreshSlotText::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WBP_Passive_EquippedList.WBP_Passive_EquippedList_C.SetFocusOnEntryIndex
// 0x0010 (0x0010 - 0x0000)
struct WBP_Passive_EquippedList_C_SetFocusOnEntryIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_PassiveEntry_C*                    CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Passive_EquippedList_C_SetFocusOnEntryIndex) == 0x000008, "Wrong alignment on WBP_Passive_EquippedList_C_SetFocusOnEntryIndex");
static_assert(sizeof(WBP_Passive_EquippedList_C_SetFocusOnEntryIndex) == 0x000010, "Wrong size on WBP_Passive_EquippedList_C_SetFocusOnEntryIndex");
static_assert(offsetof(WBP_Passive_EquippedList_C_SetFocusOnEntryIndex, Index_0) == 0x000000, "Member 'WBP_Passive_EquippedList_C_SetFocusOnEntryIndex::Index_0' has a wrong offset!");
static_assert(offsetof(WBP_Passive_EquippedList_C_SetFocusOnEntryIndex, CallFunc_Array_Get_Item) == 0x000008, "Member 'WBP_Passive_EquippedList_C_SetFocusOnEntryIndex::CallFunc_Array_Get_Item' has a wrong offset!");

}

