#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_GameMenu_Page_Passive

#include "Basic.hpp"

#include "Zion_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_GameMenu_Page_Passive.WBP_GameMenu_Page_Passive_C.BndEvt__WBP_GameMenu_Page_Passive_WBP_Passive_EquippedList_K2Node_ComponentBoundEvent_1_OnFocusedEntry__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_GameMenu_Page_Passive_C_BndEvt__WBP_GameMenu_Page_Passive_WBP_Passive_EquippedList_K2Node_ComponentBoundEvent_1_OnFocusedEntry__DelegateSignature final
{
public:
	class UWBP_PassiveEntry_C*                    PassiveEntry;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Passive_C_BndEvt__WBP_GameMenu_Page_Passive_WBP_Passive_EquippedList_K2Node_ComponentBoundEvent_1_OnFocusedEntry__DelegateSignature) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Passive_C_BndEvt__WBP_GameMenu_Page_Passive_WBP_Passive_EquippedList_K2Node_ComponentBoundEvent_1_OnFocusedEntry__DelegateSignature");
static_assert(sizeof(WBP_GameMenu_Page_Passive_C_BndEvt__WBP_GameMenu_Page_Passive_WBP_Passive_EquippedList_K2Node_ComponentBoundEvent_1_OnFocusedEntry__DelegateSignature) == 0x000008, "Wrong size on WBP_GameMenu_Page_Passive_C_BndEvt__WBP_GameMenu_Page_Passive_WBP_Passive_EquippedList_K2Node_ComponentBoundEvent_1_OnFocusedEntry__DelegateSignature");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_BndEvt__WBP_GameMenu_Page_Passive_WBP_Passive_EquippedList_K2Node_ComponentBoundEvent_1_OnFocusedEntry__DelegateSignature, PassiveEntry) == 0x000000, "Member 'WBP_GameMenu_Page_Passive_C_BndEvt__WBP_GameMenu_Page_Passive_WBP_Passive_EquippedList_K2Node_ComponentBoundEvent_1_OnFocusedEntry__DelegateSignature::PassiveEntry' has a wrong offset!");

// Function WBP_GameMenu_Page_Passive.WBP_GameMenu_Page_Passive_C.BndEvt__WBP_GameMenu_Page_Passive_WBP_Passive_EquippedList_K2Node_ComponentBoundEvent_2_OnPressedContextEntry__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_GameMenu_Page_Passive_C_BndEvt__WBP_GameMenu_Page_Passive_WBP_Passive_EquippedList_K2Node_ComponentBoundEvent_2_OnPressedContextEntry__DelegateSignature final
{
public:
	class UWBP_PassiveEntry_C*                    PassiveEntry;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Passive_C_BndEvt__WBP_GameMenu_Page_Passive_WBP_Passive_EquippedList_K2Node_ComponentBoundEvent_2_OnPressedContextEntry__DelegateSignature) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Passive_C_BndEvt__WBP_GameMenu_Page_Passive_WBP_Passive_EquippedList_K2Node_ComponentBoundEvent_2_OnPressedContextEntry__DelegateSignature");
static_assert(sizeof(WBP_GameMenu_Page_Passive_C_BndEvt__WBP_GameMenu_Page_Passive_WBP_Passive_EquippedList_K2Node_ComponentBoundEvent_2_OnPressedContextEntry__DelegateSignature) == 0x000008, "Wrong size on WBP_GameMenu_Page_Passive_C_BndEvt__WBP_GameMenu_Page_Passive_WBP_Passive_EquippedList_K2Node_ComponentBoundEvent_2_OnPressedContextEntry__DelegateSignature");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_BndEvt__WBP_GameMenu_Page_Passive_WBP_Passive_EquippedList_K2Node_ComponentBoundEvent_2_OnPressedContextEntry__DelegateSignature, PassiveEntry) == 0x000000, "Member 'WBP_GameMenu_Page_Passive_C_BndEvt__WBP_GameMenu_Page_Passive_WBP_Passive_EquippedList_K2Node_ComponentBoundEvent_2_OnPressedContextEntry__DelegateSignature::PassiveEntry' has a wrong offset!");

// Function WBP_GameMenu_Page_Passive.WBP_GameMenu_Page_Passive_C.CachePassiveComponent
// 0x0018 (0x0018 - 0x0000)
struct WBP_GameMenu_Page_Passive_C_CachePassiveComponent final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerControllerZion*                  CallFunc_Get_ReturnValue;                          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Passive_C_CachePassiveComponent) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Passive_C_CachePassiveComponent");
static_assert(sizeof(WBP_GameMenu_Page_Passive_C_CachePassiveComponent) == 0x000018, "Wrong size on WBP_GameMenu_Page_Passive_C_CachePassiveComponent");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_CachePassiveComponent, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WBP_GameMenu_Page_Passive_C_CachePassiveComponent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_CachePassiveComponent, CallFunc_Get_ReturnValue) == 0x000010, "Member 'WBP_GameMenu_Page_Passive_C_CachePassiveComponent::CallFunc_Get_ReturnValue' has a wrong offset!");

// Function WBP_GameMenu_Page_Passive.WBP_GameMenu_Page_Passive_C.CanChangeLoadout
// 0x0002 (0x0002 - 0x0000)
struct WBP_GameMenu_Page_Passive_C_CanChangeLoadout final
{
public:
	bool                                          bCanChange;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanSwitchEquipment_ReturnValue;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Passive_C_CanChangeLoadout) == 0x000001, "Wrong alignment on WBP_GameMenu_Page_Passive_C_CanChangeLoadout");
static_assert(sizeof(WBP_GameMenu_Page_Passive_C_CanChangeLoadout) == 0x000002, "Wrong size on WBP_GameMenu_Page_Passive_C_CanChangeLoadout");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_CanChangeLoadout, bCanChange) == 0x000000, "Member 'WBP_GameMenu_Page_Passive_C_CanChangeLoadout::bCanChange' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_CanChangeLoadout, CallFunc_CanSwitchEquipment_ReturnValue) == 0x000001, "Member 'WBP_GameMenu_Page_Passive_C_CanChangeLoadout::CallFunc_CanSwitchEquipment_ReturnValue' has a wrong offset!");

// Function WBP_GameMenu_Page_Passive.WBP_GameMenu_Page_Passive_C.ChangeEquippedLoadout
// 0x0038 (0x0038 - 0x0000)
struct WBP_GameMenu_Page_Passive_C_ChangeEquippedLoadout final
{
public:
	int32                                         NewLoadoutIndex;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FPassiveRuntimeData>            CallFunc_GetEquippedPassives_ReturnValue;          // 0x0010(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetEntryIndex_ReturnValue;                // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Passive_C_ChangeEquippedLoadout) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Passive_C_ChangeEquippedLoadout");
static_assert(sizeof(WBP_GameMenu_Page_Passive_C_ChangeEquippedLoadout) == 0x000038, "Wrong size on WBP_GameMenu_Page_Passive_C_ChangeEquippedLoadout");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_ChangeEquippedLoadout, NewLoadoutIndex) == 0x000000, "Member 'WBP_GameMenu_Page_Passive_C_ChangeEquippedLoadout::NewLoadoutIndex' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_ChangeEquippedLoadout, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'WBP_GameMenu_Page_Passive_C_ChangeEquippedLoadout::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_ChangeEquippedLoadout, CallFunc_GetChildAt_ReturnValue) == 0x000008, "Member 'WBP_GameMenu_Page_Passive_C_ChangeEquippedLoadout::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_ChangeEquippedLoadout, CallFunc_GetEquippedPassives_ReturnValue) == 0x000010, "Member 'WBP_GameMenu_Page_Passive_C_ChangeEquippedLoadout::CallFunc_GetEquippedPassives_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_ChangeEquippedLoadout, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WBP_GameMenu_Page_Passive_C_ChangeEquippedLoadout::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_ChangeEquippedLoadout, CallFunc_GetEntryIndex_ReturnValue) == 0x000024, "Member 'WBP_GameMenu_Page_Passive_C_ChangeEquippedLoadout::CallFunc_GetEntryIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_ChangeEquippedLoadout, CallFunc_Subtract_IntInt_ReturnValue) == 0x000028, "Member 'WBP_GameMenu_Page_Passive_C_ChangeEquippedLoadout::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_ChangeEquippedLoadout, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00002C, "Member 'WBP_GameMenu_Page_Passive_C_ChangeEquippedLoadout::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_ChangeEquippedLoadout, CallFunc_Clamp_ReturnValue) == 0x000030, "Member 'WBP_GameMenu_Page_Passive_C_ChangeEquippedLoadout::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_ChangeEquippedLoadout, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000034, "Member 'WBP_GameMenu_Page_Passive_C_ChangeEquippedLoadout::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_ChangeEquippedLoadout, CallFunc_Greater_IntInt_ReturnValue) == 0x000035, "Member 'WBP_GameMenu_Page_Passive_C_ChangeEquippedLoadout::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_GameMenu_Page_Passive.WBP_GameMenu_Page_Passive_C.CreatePassiveList
// 0x00E8 (0x00E8 - 0x0000)
struct WBP_GameMenu_Page_Passive_C_CreatePassiveList final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWBP_PassiveEntry_C* PassiveEntry)> K2Node_CreateDelegate_OutputDelegate;   // 0x000C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_PassiveEntry_C*                    CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWBP_PassiveEntry_C* PassiveEntry)> K2Node_CreateDelegate_OutputDelegate_1; // 0x002C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerControllerZion*                  CallFunc_Get_ReturnValue;                          // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWBP_PassiveEntry_C* PassiveEntry)> K2Node_CreateDelegate_OutputDelegate_2; // 0x0048(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UInventory*                             CallFunc_GetPassiveInventory_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, int32>                      CallFunc_GetAllItemsAvailable_ReturnValue;         // 0x0060(0x0050)()
	const class UDataTable*                       CallFunc_GetDataTable_ReturnValue;                 // 0x00B0(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x00B8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x00CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPassiveEquipped_ReturnValue;            // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D6[0x2];                                       // 0x00D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle;              // 0x00D8(0x0010)(NoDestructor)
};
static_assert(alignof(WBP_GameMenu_Page_Passive_C_CreatePassiveList) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Passive_C_CreatePassiveList");
static_assert(sizeof(WBP_GameMenu_Page_Passive_C_CreatePassiveList) == 0x0000E8, "Wrong size on WBP_GameMenu_Page_Passive_C_CreatePassiveList");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_CreatePassiveList, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_GameMenu_Page_Passive_C_CreatePassiveList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_CreatePassiveList, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_GameMenu_Page_Passive_C_CreatePassiveList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_CreatePassiveList, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_GameMenu_Page_Passive_C_CreatePassiveList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_CreatePassiveList, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'WBP_GameMenu_Page_Passive_C_CreatePassiveList::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_CreatePassiveList, CallFunc_Create_ReturnValue) == 0x000020, "Member 'WBP_GameMenu_Page_Passive_C_CreatePassiveList::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_CreatePassiveList, CallFunc_Array_Add_ReturnValue) == 0x000028, "Member 'WBP_GameMenu_Page_Passive_C_CreatePassiveList::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_CreatePassiveList, K2Node_CreateDelegate_OutputDelegate_1) == 0x00002C, "Member 'WBP_GameMenu_Page_Passive_C_CreatePassiveList::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_CreatePassiveList, CallFunc_Get_ReturnValue) == 0x000040, "Member 'WBP_GameMenu_Page_Passive_C_CreatePassiveList::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_CreatePassiveList, K2Node_CreateDelegate_OutputDelegate_2) == 0x000048, "Member 'WBP_GameMenu_Page_Passive_C_CreatePassiveList::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_CreatePassiveList, CallFunc_GetPassiveInventory_ReturnValue) == 0x000058, "Member 'WBP_GameMenu_Page_Passive_C_CreatePassiveList::CallFunc_GetPassiveInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_CreatePassiveList, CallFunc_GetAllItemsAvailable_ReturnValue) == 0x000060, "Member 'WBP_GameMenu_Page_Passive_C_CreatePassiveList::CallFunc_GetAllItemsAvailable_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_CreatePassiveList, CallFunc_GetDataTable_ReturnValue) == 0x0000B0, "Member 'WBP_GameMenu_Page_Passive_C_CreatePassiveList::CallFunc_GetDataTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_CreatePassiveList, CallFunc_Map_Keys_Keys) == 0x0000B8, "Member 'WBP_GameMenu_Page_Passive_C_CreatePassiveList::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_CreatePassiveList, CallFunc_Array_Length_ReturnValue) == 0x0000C8, "Member 'WBP_GameMenu_Page_Passive_C_CreatePassiveList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_CreatePassiveList, CallFunc_Array_Get_Item) == 0x0000CC, "Member 'WBP_GameMenu_Page_Passive_C_CreatePassiveList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_CreatePassiveList, CallFunc_Less_IntInt_ReturnValue) == 0x0000D4, "Member 'WBP_GameMenu_Page_Passive_C_CreatePassiveList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_CreatePassiveList, CallFunc_IsPassiveEquipped_ReturnValue) == 0x0000D5, "Member 'WBP_GameMenu_Page_Passive_C_CreatePassiveList::CallFunc_IsPassiveEquipped_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_CreatePassiveList, K2Node_MakeStruct_DataTableRowHandle) == 0x0000D8, "Member 'WBP_GameMenu_Page_Passive_C_CreatePassiveList::K2Node_MakeStruct_DataTableRowHandle' has a wrong offset!");

// Function WBP_GameMenu_Page_Passive.WBP_GameMenu_Page_Passive_C.EquipPassiveEntry
// 0x0070 (0x0070 - 0x0000)
struct WBP_GameMenu_Page_Passive_C_EquipPassiveEntry final
{
public:
	class UWBP_PassiveEntry_C*                    PassiveEntry;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0010)()
	class FText                                   Temp_text_Variable_1;                              // 0x0018(0x0010)()
	class UWBP_Dialog_OK_C*                       CallFunc_Create_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPassiveEquipped_ReturnValue;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_2;                              // 0x0038(0x0010)()
	class FText                                   Temp_text_Variable_3;                              // 0x0048(0x0010)()
	EPassiveEquipResult                           Temp_byte_Variable;                                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPassiveEquipResult                           CallFunc_EquipPassive_ReturnValue;                 // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B[0x5];                                       // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0060(0x0010)()
};
static_assert(alignof(WBP_GameMenu_Page_Passive_C_EquipPassiveEntry) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Passive_C_EquipPassiveEntry");
static_assert(sizeof(WBP_GameMenu_Page_Passive_C_EquipPassiveEntry) == 0x000070, "Wrong size on WBP_GameMenu_Page_Passive_C_EquipPassiveEntry");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_EquipPassiveEntry, PassiveEntry) == 0x000000, "Member 'WBP_GameMenu_Page_Passive_C_EquipPassiveEntry::PassiveEntry' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_EquipPassiveEntry, Temp_text_Variable) == 0x000008, "Member 'WBP_GameMenu_Page_Passive_C_EquipPassiveEntry::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_EquipPassiveEntry, Temp_text_Variable_1) == 0x000018, "Member 'WBP_GameMenu_Page_Passive_C_EquipPassiveEntry::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_EquipPassiveEntry, CallFunc_Create_ReturnValue) == 0x000028, "Member 'WBP_GameMenu_Page_Passive_C_EquipPassiveEntry::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_EquipPassiveEntry, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'WBP_GameMenu_Page_Passive_C_EquipPassiveEntry::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_EquipPassiveEntry, CallFunc_IsPassiveEquipped_ReturnValue) == 0x000031, "Member 'WBP_GameMenu_Page_Passive_C_EquipPassiveEntry::CallFunc_IsPassiveEquipped_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_EquipPassiveEntry, CallFunc_Not_PreBool_ReturnValue) == 0x000032, "Member 'WBP_GameMenu_Page_Passive_C_EquipPassiveEntry::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_EquipPassiveEntry, Temp_text_Variable_2) == 0x000038, "Member 'WBP_GameMenu_Page_Passive_C_EquipPassiveEntry::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_EquipPassiveEntry, Temp_text_Variable_3) == 0x000048, "Member 'WBP_GameMenu_Page_Passive_C_EquipPassiveEntry::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_EquipPassiveEntry, Temp_byte_Variable) == 0x000058, "Member 'WBP_GameMenu_Page_Passive_C_EquipPassiveEntry::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_EquipPassiveEntry, CallFunc_EquipPassive_ReturnValue) == 0x000059, "Member 'WBP_GameMenu_Page_Passive_C_EquipPassiveEntry::CallFunc_EquipPassive_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_EquipPassiveEntry, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00005A, "Member 'WBP_GameMenu_Page_Passive_C_EquipPassiveEntry::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_EquipPassiveEntry, K2Node_Select_Default) == 0x000060, "Member 'WBP_GameMenu_Page_Passive_C_EquipPassiveEntry::K2Node_Select_Default' has a wrong offset!");

// Function WBP_GameMenu_Page_Passive.WBP_GameMenu_Page_Passive_C.ExecuteUbergraph_WBP_GameMenu_Page_Passive
// 0x0090 (0x0090 - 0x0000)
struct WBP_GameMenu_Page_Passive_C_ExecuteUbergraph_WBP_GameMenu_Page_Passive final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0010)(ConstParm)
	class UWBP_PassiveEntry_C*                    K2Node_CustomEvent_PassiveEntry_2;                 // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_PassiveEntry_C*                    K2Node_CustomEvent_PassiveEntry_1;                 // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanSwitchEquipment_ReturnValue;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanSwitchEquipment_ReturnValue_1;         // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_PassiveEntry_C*                    K2Node_ComponentBoundEvent_PassiveEntry_1;         // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable_1;                              // 0x0038(0x0010)(ConstParm)
	class UWBP_Dialog_OK_C*                       CallFunc_Create_ReturnValue;                       // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_PassiveEntry_C*                    K2Node_ComponentBoundEvent_PassiveEntry;           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanSwitchEquipment_ReturnValue_2;         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Dialog_OK_C*                       CallFunc_Create_ReturnValue_1;                     // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_PassiveEntry_C*                    K2Node_CustomEvent_PassiveEntry;                   // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable_2;                              // 0x0070(0x0010)(ConstParm)
	class UWBP_Dialog_OK_C*                       CallFunc_Create_ReturnValue_2;                     // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentPassiveLoadoutIndex_ReturnValue; // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Passive_C_ExecuteUbergraph_WBP_GameMenu_Page_Passive) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Passive_C_ExecuteUbergraph_WBP_GameMenu_Page_Passive");
static_assert(sizeof(WBP_GameMenu_Page_Passive_C_ExecuteUbergraph_WBP_GameMenu_Page_Passive) == 0x000090, "Wrong size on WBP_GameMenu_Page_Passive_C_ExecuteUbergraph_WBP_GameMenu_Page_Passive");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_ExecuteUbergraph_WBP_GameMenu_Page_Passive, EntryPoint) == 0x000000, "Member 'WBP_GameMenu_Page_Passive_C_ExecuteUbergraph_WBP_GameMenu_Page_Passive::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_ExecuteUbergraph_WBP_GameMenu_Page_Passive, Temp_text_Variable) == 0x000008, "Member 'WBP_GameMenu_Page_Passive_C_ExecuteUbergraph_WBP_GameMenu_Page_Passive::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_ExecuteUbergraph_WBP_GameMenu_Page_Passive, K2Node_CustomEvent_PassiveEntry_2) == 0x000018, "Member 'WBP_GameMenu_Page_Passive_C_ExecuteUbergraph_WBP_GameMenu_Page_Passive::K2Node_CustomEvent_PassiveEntry_2' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_ExecuteUbergraph_WBP_GameMenu_Page_Passive, K2Node_CustomEvent_PassiveEntry_1) == 0x000020, "Member 'WBP_GameMenu_Page_Passive_C_ExecuteUbergraph_WBP_GameMenu_Page_Passive::K2Node_CustomEvent_PassiveEntry_1' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_ExecuteUbergraph_WBP_GameMenu_Page_Passive, CallFunc_CanSwitchEquipment_ReturnValue) == 0x000028, "Member 'WBP_GameMenu_Page_Passive_C_ExecuteUbergraph_WBP_GameMenu_Page_Passive::CallFunc_CanSwitchEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_ExecuteUbergraph_WBP_GameMenu_Page_Passive, CallFunc_CanSwitchEquipment_ReturnValue_1) == 0x000029, "Member 'WBP_GameMenu_Page_Passive_C_ExecuteUbergraph_WBP_GameMenu_Page_Passive::CallFunc_CanSwitchEquipment_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_ExecuteUbergraph_WBP_GameMenu_Page_Passive, K2Node_ComponentBoundEvent_PassiveEntry_1) == 0x000030, "Member 'WBP_GameMenu_Page_Passive_C_ExecuteUbergraph_WBP_GameMenu_Page_Passive::K2Node_ComponentBoundEvent_PassiveEntry_1' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_ExecuteUbergraph_WBP_GameMenu_Page_Passive, Temp_text_Variable_1) == 0x000038, "Member 'WBP_GameMenu_Page_Passive_C_ExecuteUbergraph_WBP_GameMenu_Page_Passive::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_ExecuteUbergraph_WBP_GameMenu_Page_Passive, CallFunc_Create_ReturnValue) == 0x000048, "Member 'WBP_GameMenu_Page_Passive_C_ExecuteUbergraph_WBP_GameMenu_Page_Passive::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_ExecuteUbergraph_WBP_GameMenu_Page_Passive, K2Node_ComponentBoundEvent_PassiveEntry) == 0x000050, "Member 'WBP_GameMenu_Page_Passive_C_ExecuteUbergraph_WBP_GameMenu_Page_Passive::K2Node_ComponentBoundEvent_PassiveEntry' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_ExecuteUbergraph_WBP_GameMenu_Page_Passive, CallFunc_CanSwitchEquipment_ReturnValue_2) == 0x000058, "Member 'WBP_GameMenu_Page_Passive_C_ExecuteUbergraph_WBP_GameMenu_Page_Passive::CallFunc_CanSwitchEquipment_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_ExecuteUbergraph_WBP_GameMenu_Page_Passive, CallFunc_Create_ReturnValue_1) == 0x000060, "Member 'WBP_GameMenu_Page_Passive_C_ExecuteUbergraph_WBP_GameMenu_Page_Passive::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_ExecuteUbergraph_WBP_GameMenu_Page_Passive, K2Node_CustomEvent_PassiveEntry) == 0x000068, "Member 'WBP_GameMenu_Page_Passive_C_ExecuteUbergraph_WBP_GameMenu_Page_Passive::K2Node_CustomEvent_PassiveEntry' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_ExecuteUbergraph_WBP_GameMenu_Page_Passive, Temp_text_Variable_2) == 0x000070, "Member 'WBP_GameMenu_Page_Passive_C_ExecuteUbergraph_WBP_GameMenu_Page_Passive::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_ExecuteUbergraph_WBP_GameMenu_Page_Passive, CallFunc_Create_ReturnValue_2) == 0x000080, "Member 'WBP_GameMenu_Page_Passive_C_ExecuteUbergraph_WBP_GameMenu_Page_Passive::CallFunc_Create_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_ExecuteUbergraph_WBP_GameMenu_Page_Passive, CallFunc_GetCurrentPassiveLoadoutIndex_ReturnValue) == 0x000088, "Member 'WBP_GameMenu_Page_Passive_C_ExecuteUbergraph_WBP_GameMenu_Page_Passive::CallFunc_GetCurrentPassiveLoadoutIndex_ReturnValue' has a wrong offset!");

// Function WBP_GameMenu_Page_Passive.WBP_GameMenu_Page_Passive_C.Nav_ToEquippedPassiveList
// 0x0040 (0x0040 - 0x0000)
struct WBP_GameMenu_Page_Passive_C_Nav_ToEquippedPassiveList final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FPassiveRuntimeData>            CallFunc_GetEquippedPassives_ReturnValue;          // 0x0010(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasValidEntries_ReturnValue;              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_PassiveEntry_C*                    CallFunc_GetEntryAtIndex_PassiveEntry;             // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Passive_C_Nav_ToEquippedPassiveList) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Passive_C_Nav_ToEquippedPassiveList");
static_assert(sizeof(WBP_GameMenu_Page_Passive_C_Nav_ToEquippedPassiveList) == 0x000040, "Wrong size on WBP_GameMenu_Page_Passive_C_Nav_ToEquippedPassiveList");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_Nav_ToEquippedPassiveList, Navigation_0) == 0x000000, "Member 'WBP_GameMenu_Page_Passive_C_Nav_ToEquippedPassiveList::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_Nav_ToEquippedPassiveList, ReturnValue) == 0x000008, "Member 'WBP_GameMenu_Page_Passive_C_Nav_ToEquippedPassiveList::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_Nav_ToEquippedPassiveList, CallFunc_GetEquippedPassives_ReturnValue) == 0x000010, "Member 'WBP_GameMenu_Page_Passive_C_Nav_ToEquippedPassiveList::CallFunc_GetEquippedPassives_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_Nav_ToEquippedPassiveList, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WBP_GameMenu_Page_Passive_C_Nav_ToEquippedPassiveList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_Nav_ToEquippedPassiveList, CallFunc_HasValidEntries_ReturnValue) == 0x000024, "Member 'WBP_GameMenu_Page_Passive_C_Nav_ToEquippedPassiveList::CallFunc_HasValidEntries_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_Nav_ToEquippedPassiveList, CallFunc_Subtract_IntInt_ReturnValue) == 0x000028, "Member 'WBP_GameMenu_Page_Passive_C_Nav_ToEquippedPassiveList::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_Nav_ToEquippedPassiveList, CallFunc_Percent_IntInt_ReturnValue) == 0x00002C, "Member 'WBP_GameMenu_Page_Passive_C_Nav_ToEquippedPassiveList::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_Nav_ToEquippedPassiveList, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000030, "Member 'WBP_GameMenu_Page_Passive_C_Nav_ToEquippedPassiveList::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_Nav_ToEquippedPassiveList, CallFunc_GetEntryAtIndex_PassiveEntry) == 0x000038, "Member 'WBP_GameMenu_Page_Passive_C_Nav_ToEquippedPassiveList::CallFunc_GetEntryAtIndex_PassiveEntry' has a wrong offset!");

// Function WBP_GameMenu_Page_Passive.WBP_GameMenu_Page_Passive_C.Nav_ToPassiveList
// 0x0080 (0x0080 - 0x0000)
struct WBP_GameMenu_Page_Passive_C_Nav_ToPassiveList final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPassiveRuntimeData>            CallFunc_GetEquippedPassives_ReturnValue;          // 0x0018(0x0010)(ConstParm, ReferenceParm)
	class UWBP_PassiveEntry_C*                    CallFunc_GetFocusedEntry_FocusedPassiveEntry;      // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetEntryIndex_ReturnValue;                // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue_1;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_PassiveEntry_C*                    CallFunc_GetEntryAtIndex_PassiveEntry;             // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetElementCountPerRow_ReturnValue;        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue_1;                 // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Passive_C_Nav_ToPassiveList) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Passive_C_Nav_ToPassiveList");
static_assert(sizeof(WBP_GameMenu_Page_Passive_C_Nav_ToPassiveList) == 0x000080, "Wrong size on WBP_GameMenu_Page_Passive_C_Nav_ToPassiveList");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_Nav_ToPassiveList, Navigation_0) == 0x000000, "Member 'WBP_GameMenu_Page_Passive_C_Nav_ToPassiveList::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_Nav_ToPassiveList, ReturnValue) == 0x000008, "Member 'WBP_GameMenu_Page_Passive_C_Nav_ToPassiveList::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_Nav_ToPassiveList, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'WBP_GameMenu_Page_Passive_C_Nav_ToPassiveList::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_Nav_ToPassiveList, CallFunc_GetEquippedPassives_ReturnValue) == 0x000018, "Member 'WBP_GameMenu_Page_Passive_C_Nav_ToPassiveList::CallFunc_GetEquippedPassives_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_Nav_ToPassiveList, CallFunc_GetFocusedEntry_FocusedPassiveEntry) == 0x000028, "Member 'WBP_GameMenu_Page_Passive_C_Nav_ToPassiveList::CallFunc_GetFocusedEntry_FocusedPassiveEntry' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_Nav_ToPassiveList, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'WBP_GameMenu_Page_Passive_C_Nav_ToPassiveList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_Nav_ToPassiveList, CallFunc_IsValid_ReturnValue) == 0x000034, "Member 'WBP_GameMenu_Page_Passive_C_Nav_ToPassiveList::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_Nav_ToPassiveList, CallFunc_Subtract_IntInt_ReturnValue) == 0x000038, "Member 'WBP_GameMenu_Page_Passive_C_Nav_ToPassiveList::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_Nav_ToPassiveList, CallFunc_GetEntryIndex_ReturnValue) == 0x00003C, "Member 'WBP_GameMenu_Page_Passive_C_Nav_ToPassiveList::CallFunc_GetEntryIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_Nav_ToPassiveList, CallFunc_Divide_IntInt_ReturnValue) == 0x000040, "Member 'WBP_GameMenu_Page_Passive_C_Nav_ToPassiveList::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_Nav_ToPassiveList, CallFunc_Divide_IntInt_ReturnValue_1) == 0x000044, "Member 'WBP_GameMenu_Page_Passive_C_Nav_ToPassiveList::CallFunc_Divide_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_Nav_ToPassiveList, CallFunc_GetEntryAtIndex_PassiveEntry) == 0x000048, "Member 'WBP_GameMenu_Page_Passive_C_Nav_ToPassiveList::CallFunc_GetEntryAtIndex_PassiveEntry' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_Nav_ToPassiveList, CallFunc_Greater_IntInt_ReturnValue) == 0x000050, "Member 'WBP_GameMenu_Page_Passive_C_Nav_ToPassiveList::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_Nav_ToPassiveList, CallFunc_BooleanAND_ReturnValue) == 0x000051, "Member 'WBP_GameMenu_Page_Passive_C_Nav_ToPassiveList::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_Nav_ToPassiveList, CallFunc_GetChildAt_ReturnValue) == 0x000058, "Member 'WBP_GameMenu_Page_Passive_C_Nav_ToPassiveList::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_Nav_ToPassiveList, CallFunc_GetElementCountPerRow_ReturnValue) == 0x000060, "Member 'WBP_GameMenu_Page_Passive_C_Nav_ToPassiveList::CallFunc_GetElementCountPerRow_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_Nav_ToPassiveList, CallFunc_GetChildrenCount_ReturnValue) == 0x000064, "Member 'WBP_GameMenu_Page_Passive_C_Nav_ToPassiveList::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_Nav_ToPassiveList, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000068, "Member 'WBP_GameMenu_Page_Passive_C_Nav_ToPassiveList::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_Nav_ToPassiveList, CallFunc_Percent_IntInt_ReturnValue) == 0x00006C, "Member 'WBP_GameMenu_Page_Passive_C_Nav_ToPassiveList::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_Nav_ToPassiveList, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000070, "Member 'WBP_GameMenu_Page_Passive_C_Nav_ToPassiveList::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_Nav_ToPassiveList, CallFunc_GetChildAt_ReturnValue_1) == 0x000078, "Member 'WBP_GameMenu_Page_Passive_C_Nav_ToPassiveList::CallFunc_GetChildAt_ReturnValue_1' has a wrong offset!");

// Function WBP_GameMenu_Page_Passive.WBP_GameMenu_Page_Passive_C.OnFocusedPassiveEntry
// 0x0008 (0x0008 - 0x0000)
struct WBP_GameMenu_Page_Passive_C_OnFocusedPassiveEntry final
{
public:
	class UWBP_PassiveEntry_C*                    PassiveEntry;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Passive_C_OnFocusedPassiveEntry) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Passive_C_OnFocusedPassiveEntry");
static_assert(sizeof(WBP_GameMenu_Page_Passive_C_OnFocusedPassiveEntry) == 0x000008, "Wrong size on WBP_GameMenu_Page_Passive_C_OnFocusedPassiveEntry");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_OnFocusedPassiveEntry, PassiveEntry) == 0x000000, "Member 'WBP_GameMenu_Page_Passive_C_OnFocusedPassiveEntry::PassiveEntry' has a wrong offset!");

// Function WBP_GameMenu_Page_Passive.WBP_GameMenu_Page_Passive_C.OnFocusReceived
// 0x01B8 (0x01B8 - 0x0000)
struct WBP_GameMenu_Page_Passive_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x00F8(0x00B8)()
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Passive_C_OnFocusReceived) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Passive_C_OnFocusReceived");
static_assert(sizeof(WBP_GameMenu_Page_Passive_C_OnFocusReceived) == 0x0001B8, "Wrong size on WBP_GameMenu_Page_Passive_C_OnFocusReceived");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'WBP_GameMenu_Page_Passive_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'WBP_GameMenu_Page_Passive_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'WBP_GameMenu_Page_Passive_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_OnFocusReceived, CallFunc_Handled_ReturnValue) == 0x0000F8, "Member 'WBP_GameMenu_Page_Passive_C_OnFocusReceived::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_OnFocusReceived, CallFunc_GetChildAt_ReturnValue) == 0x0001B0, "Member 'WBP_GameMenu_Page_Passive_C_OnFocusReceived::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");

// Function WBP_GameMenu_Page_Passive.WBP_GameMenu_Page_Passive_C.OnPressedPassiveEntry
// 0x0008 (0x0008 - 0x0000)
struct WBP_GameMenu_Page_Passive_C_OnPressedPassiveEntry final
{
public:
	class UWBP_PassiveEntry_C*                    PassiveEntry;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Passive_C_OnPressedPassiveEntry) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Passive_C_OnPressedPassiveEntry");
static_assert(sizeof(WBP_GameMenu_Page_Passive_C_OnPressedPassiveEntry) == 0x000008, "Wrong size on WBP_GameMenu_Page_Passive_C_OnPressedPassiveEntry");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_OnPressedPassiveEntry, PassiveEntry) == 0x000000, "Member 'WBP_GameMenu_Page_Passive_C_OnPressedPassiveEntry::PassiveEntry' has a wrong offset!");

// Function WBP_GameMenu_Page_Passive.WBP_GameMenu_Page_Passive_C.OnPressedPassiveEntryContext
// 0x0008 (0x0008 - 0x0000)
struct WBP_GameMenu_Page_Passive_C_OnPressedPassiveEntryContext final
{
public:
	class UWBP_PassiveEntry_C*                    PassiveEntry;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Passive_C_OnPressedPassiveEntryContext) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Passive_C_OnPressedPassiveEntryContext");
static_assert(sizeof(WBP_GameMenu_Page_Passive_C_OnPressedPassiveEntryContext) == 0x000008, "Wrong size on WBP_GameMenu_Page_Passive_C_OnPressedPassiveEntryContext");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_OnPressedPassiveEntryContext, PassiveEntry) == 0x000000, "Member 'WBP_GameMenu_Page_Passive_C_OnPressedPassiveEntryContext::PassiveEntry' has a wrong offset!");

// Function WBP_GameMenu_Page_Passive.WBP_GameMenu_Page_Passive_C.OnPressNextAlt
// 0x01B8 (0x01B8 - 0x0000)
struct WBP_GameMenu_Page_Passive_C_OnPressNextAlt final
{
public:
	struct FKeyEvent                              KeyEvent;                                          // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_CanChangeLoadout_bCanChange;              // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNextEntryIndex_NextIndex;              // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0100(0x00B8)()
};
static_assert(alignof(WBP_GameMenu_Page_Passive_C_OnPressNextAlt) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Passive_C_OnPressNextAlt");
static_assert(sizeof(WBP_GameMenu_Page_Passive_C_OnPressNextAlt) == 0x0001B8, "Wrong size on WBP_GameMenu_Page_Passive_C_OnPressNextAlt");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_OnPressNextAlt, KeyEvent) == 0x000000, "Member 'WBP_GameMenu_Page_Passive_C_OnPressNextAlt::KeyEvent' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_OnPressNextAlt, ReturnValue) == 0x000040, "Member 'WBP_GameMenu_Page_Passive_C_OnPressNextAlt::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_OnPressNextAlt, CallFunc_CanChangeLoadout_bCanChange) == 0x0000F8, "Member 'WBP_GameMenu_Page_Passive_C_OnPressNextAlt::CallFunc_CanChangeLoadout_bCanChange' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_OnPressNextAlt, CallFunc_GetNextEntryIndex_NextIndex) == 0x0000FC, "Member 'WBP_GameMenu_Page_Passive_C_OnPressNextAlt::CallFunc_GetNextEntryIndex_NextIndex' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_OnPressNextAlt, CallFunc_Handled_ReturnValue) == 0x000100, "Member 'WBP_GameMenu_Page_Passive_C_OnPressNextAlt::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function WBP_GameMenu_Page_Passive.WBP_GameMenu_Page_Passive_C.OnPressPreviousAlt
// 0x01B8 (0x01B8 - 0x0000)
struct WBP_GameMenu_Page_Passive_C_OnPressPreviousAlt final
{
public:
	struct FKeyEvent                              KeyEvent;                                          // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_CanChangeLoadout_bCanChange;              // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPreviousEntryIndex_NextIndex;          // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0100(0x00B8)()
};
static_assert(alignof(WBP_GameMenu_Page_Passive_C_OnPressPreviousAlt) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Passive_C_OnPressPreviousAlt");
static_assert(sizeof(WBP_GameMenu_Page_Passive_C_OnPressPreviousAlt) == 0x0001B8, "Wrong size on WBP_GameMenu_Page_Passive_C_OnPressPreviousAlt");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_OnPressPreviousAlt, KeyEvent) == 0x000000, "Member 'WBP_GameMenu_Page_Passive_C_OnPressPreviousAlt::KeyEvent' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_OnPressPreviousAlt, ReturnValue) == 0x000040, "Member 'WBP_GameMenu_Page_Passive_C_OnPressPreviousAlt::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_OnPressPreviousAlt, CallFunc_CanChangeLoadout_bCanChange) == 0x0000F8, "Member 'WBP_GameMenu_Page_Passive_C_OnPressPreviousAlt::CallFunc_CanChangeLoadout_bCanChange' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_OnPressPreviousAlt, CallFunc_GetPreviousEntryIndex_NextIndex) == 0x0000FC, "Member 'WBP_GameMenu_Page_Passive_C_OnPressPreviousAlt::CallFunc_GetPreviousEntryIndex_NextIndex' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_OnPressPreviousAlt, CallFunc_Handled_ReturnValue) == 0x000100, "Member 'WBP_GameMenu_Page_Passive_C_OnPressPreviousAlt::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function WBP_GameMenu_Page_Passive.WBP_GameMenu_Page_Passive_C.RefreshFooterForPassiveEntry
// 0x0088 (0x0088 - 0x0000)
struct WBP_GameMenu_Page_Passive_C_RefreshFooterForPassiveEntry final
{
public:
	class UWBP_PassiveEntry_C*                    PassiveEntry;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanSwitchEquipment_ReturnValue;           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFooterData>                    CallFunc_GetDefaultFooterEntries_ReturnValue;      // 0x0010(0x0010)(ConstParm, ReferenceParm)
	class UUserWidgetFooter*                      CallFunc_GetFooter_ReturnValue;                    // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPassiveEquipped_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFooterData                            K2Node_Select_Default;                             // 0x0030(0x0058)(ConstParm)
};
static_assert(alignof(WBP_GameMenu_Page_Passive_C_RefreshFooterForPassiveEntry) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Passive_C_RefreshFooterForPassiveEntry");
static_assert(sizeof(WBP_GameMenu_Page_Passive_C_RefreshFooterForPassiveEntry) == 0x000088, "Wrong size on WBP_GameMenu_Page_Passive_C_RefreshFooterForPassiveEntry");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_RefreshFooterForPassiveEntry, PassiveEntry) == 0x000000, "Member 'WBP_GameMenu_Page_Passive_C_RefreshFooterForPassiveEntry::PassiveEntry' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_RefreshFooterForPassiveEntry, Temp_bool_Variable) == 0x000008, "Member 'WBP_GameMenu_Page_Passive_C_RefreshFooterForPassiveEntry::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_RefreshFooterForPassiveEntry, CallFunc_CanSwitchEquipment_ReturnValue) == 0x000009, "Member 'WBP_GameMenu_Page_Passive_C_RefreshFooterForPassiveEntry::CallFunc_CanSwitchEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_RefreshFooterForPassiveEntry, CallFunc_GetDefaultFooterEntries_ReturnValue) == 0x000010, "Member 'WBP_GameMenu_Page_Passive_C_RefreshFooterForPassiveEntry::CallFunc_GetDefaultFooterEntries_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_RefreshFooterForPassiveEntry, CallFunc_GetFooter_ReturnValue) == 0x000020, "Member 'WBP_GameMenu_Page_Passive_C_RefreshFooterForPassiveEntry::CallFunc_GetFooter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_RefreshFooterForPassiveEntry, CallFunc_IsPassiveEquipped_ReturnValue) == 0x000028, "Member 'WBP_GameMenu_Page_Passive_C_RefreshFooterForPassiveEntry::CallFunc_IsPassiveEquipped_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_RefreshFooterForPassiveEntry, K2Node_Select_Default) == 0x000030, "Member 'WBP_GameMenu_Page_Passive_C_RefreshFooterForPassiveEntry::K2Node_Select_Default' has a wrong offset!");

// Function WBP_GameMenu_Page_Passive.WBP_GameMenu_Page_Passive_C.RefreshList
// 0x0020 (0x0020 - 0x0000)
struct WBP_GameMenu_Page_Passive_C_RefreshList final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_PassiveEntry_C*                    CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPassiveEquipped_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Passive_C_RefreshList) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Passive_C_RefreshList");
static_assert(sizeof(WBP_GameMenu_Page_Passive_C_RefreshList) == 0x000020, "Wrong size on WBP_GameMenu_Page_Passive_C_RefreshList");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_RefreshList, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_GameMenu_Page_Passive_C_RefreshList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_RefreshList, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_GameMenu_Page_Passive_C_RefreshList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_RefreshList, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_GameMenu_Page_Passive_C_RefreshList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_RefreshList, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'WBP_GameMenu_Page_Passive_C_RefreshList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_RefreshList, CallFunc_Array_Get_Item) == 0x000010, "Member 'WBP_GameMenu_Page_Passive_C_RefreshList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_RefreshList, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'WBP_GameMenu_Page_Passive_C_RefreshList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_RefreshList, CallFunc_IsPassiveEquipped_ReturnValue) == 0x000019, "Member 'WBP_GameMenu_Page_Passive_C_RefreshList::CallFunc_IsPassiveEquipped_ReturnValue' has a wrong offset!");

// Function WBP_GameMenu_Page_Passive.WBP_GameMenu_Page_Passive_C.RefreshLoadoutVisibility
// 0x0001 (0x0001 - 0x0000)
struct WBP_GameMenu_Page_Passive_C_RefreshLoadoutVisibility final
{
public:
	bool                                          CallFunc_CanChangeLoadout_bCanChange;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Passive_C_RefreshLoadoutVisibility) == 0x000001, "Wrong alignment on WBP_GameMenu_Page_Passive_C_RefreshLoadoutVisibility");
static_assert(sizeof(WBP_GameMenu_Page_Passive_C_RefreshLoadoutVisibility) == 0x000001, "Wrong size on WBP_GameMenu_Page_Passive_C_RefreshLoadoutVisibility");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_RefreshLoadoutVisibility, CallFunc_CanChangeLoadout_bCanChange) == 0x000000, "Member 'WBP_GameMenu_Page_Passive_C_RefreshLoadoutVisibility::CallFunc_CanChangeLoadout_bCanChange' has a wrong offset!");

// Function WBP_GameMenu_Page_Passive.WBP_GameMenu_Page_Passive_C.RefreshPassiveListNavigation
// 0x0014 (0x0014 - 0x0000)
struct WBP_GameMenu_Page_Passive_C_RefreshPassiveListNavigation final
{
public:
	bool                                          CallFunc_HasValidEntries_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EUINavigation Navigation)>     K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Passive_C_RefreshPassiveListNavigation) == 0x000004, "Wrong alignment on WBP_GameMenu_Page_Passive_C_RefreshPassiveListNavigation");
static_assert(sizeof(WBP_GameMenu_Page_Passive_C_RefreshPassiveListNavigation) == 0x000014, "Wrong size on WBP_GameMenu_Page_Passive_C_RefreshPassiveListNavigation");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_RefreshPassiveListNavigation, CallFunc_HasValidEntries_ReturnValue) == 0x000000, "Member 'WBP_GameMenu_Page_Passive_C_RefreshPassiveListNavigation::CallFunc_HasValidEntries_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_RefreshPassiveListNavigation, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_GameMenu_Page_Passive_C_RefreshPassiveListNavigation::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function WBP_GameMenu_Page_Passive.WBP_GameMenu_Page_Passive_C.SetLockVisibility
// 0x0005 (0x0005 - 0x0000)
struct WBP_GameMenu_Page_Passive_C_SetLockVisibility final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanSwitchEquipment_ReturnValue;           // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Passive_C_SetLockVisibility) == 0x000001, "Wrong alignment on WBP_GameMenu_Page_Passive_C_SetLockVisibility");
static_assert(sizeof(WBP_GameMenu_Page_Passive_C_SetLockVisibility) == 0x000005, "Wrong size on WBP_GameMenu_Page_Passive_C_SetLockVisibility");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_SetLockVisibility, Temp_bool_Variable) == 0x000000, "Member 'WBP_GameMenu_Page_Passive_C_SetLockVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_SetLockVisibility, Temp_byte_Variable) == 0x000001, "Member 'WBP_GameMenu_Page_Passive_C_SetLockVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_SetLockVisibility, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_GameMenu_Page_Passive_C_SetLockVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_SetLockVisibility, CallFunc_CanSwitchEquipment_ReturnValue) == 0x000003, "Member 'WBP_GameMenu_Page_Passive_C_SetLockVisibility::CallFunc_CanSwitchEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_SetLockVisibility, K2Node_Select_Default) == 0x000004, "Member 'WBP_GameMenu_Page_Passive_C_SetLockVisibility::K2Node_Select_Default' has a wrong offset!");

// Function WBP_GameMenu_Page_Passive.WBP_GameMenu_Page_Passive_C.ToggleEquipPassiveEntry
// 0x0010 (0x0010 - 0x0000)
struct WBP_GameMenu_Page_Passive_C_ToggleEquipPassiveEntry final
{
public:
	class UWBP_PassiveEntry_C*                    PassiveEntry;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPassiveEquipped_ReturnValue;            // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Passive_C_ToggleEquipPassiveEntry) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Passive_C_ToggleEquipPassiveEntry");
static_assert(sizeof(WBP_GameMenu_Page_Passive_C_ToggleEquipPassiveEntry) == 0x000010, "Wrong size on WBP_GameMenu_Page_Passive_C_ToggleEquipPassiveEntry");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_ToggleEquipPassiveEntry, PassiveEntry) == 0x000000, "Member 'WBP_GameMenu_Page_Passive_C_ToggleEquipPassiveEntry::PassiveEntry' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_ToggleEquipPassiveEntry, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_GameMenu_Page_Passive_C_ToggleEquipPassiveEntry::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_ToggleEquipPassiveEntry, CallFunc_IsPassiveEquipped_ReturnValue) == 0x000009, "Member 'WBP_GameMenu_Page_Passive_C_ToggleEquipPassiveEntry::CallFunc_IsPassiveEquipped_ReturnValue' has a wrong offset!");

// Function WBP_GameMenu_Page_Passive.WBP_GameMenu_Page_Passive_C.UnequipFromEquippedEntry
// 0x0050 (0x0050 - 0x0000)
struct WBP_GameMenu_Page_Passive_C_UnequipFromEquippedEntry final
{
public:
	const class UWBP_PassiveEntry_C*              PassiveEntry;                                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	int32                                         UnequippingIndex;                                  // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_UnequipPassive_OutPassiveIndex;           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UnequipPassive_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPassiveRuntimeData>            CallFunc_GetEquippedPassives_ReturnValue;          // 0x0028(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetEntryIndex_ReturnValue;                // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Passive_C_UnequipFromEquippedEntry) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Passive_C_UnequipFromEquippedEntry");
static_assert(sizeof(WBP_GameMenu_Page_Passive_C_UnequipFromEquippedEntry) == 0x000050, "Wrong size on WBP_GameMenu_Page_Passive_C_UnequipFromEquippedEntry");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_UnequipFromEquippedEntry, PassiveEntry) == 0x000000, "Member 'WBP_GameMenu_Page_Passive_C_UnequipFromEquippedEntry::PassiveEntry' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_UnequipFromEquippedEntry, UnequippingIndex) == 0x000008, "Member 'WBP_GameMenu_Page_Passive_C_UnequipFromEquippedEntry::UnequippingIndex' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_UnequipFromEquippedEntry, CallFunc_GetChildAt_ReturnValue) == 0x000010, "Member 'WBP_GameMenu_Page_Passive_C_UnequipFromEquippedEntry::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_UnequipFromEquippedEntry, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_GameMenu_Page_Passive_C_UnequipFromEquippedEntry::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_UnequipFromEquippedEntry, CallFunc_UnequipPassive_OutPassiveIndex) == 0x00001C, "Member 'WBP_GameMenu_Page_Passive_C_UnequipFromEquippedEntry::CallFunc_UnequipPassive_OutPassiveIndex' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_UnequipFromEquippedEntry, CallFunc_UnequipPassive_ReturnValue) == 0x000020, "Member 'WBP_GameMenu_Page_Passive_C_UnequipFromEquippedEntry::CallFunc_UnequipPassive_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_UnequipFromEquippedEntry, CallFunc_GetEquippedPassives_ReturnValue) == 0x000028, "Member 'WBP_GameMenu_Page_Passive_C_UnequipFromEquippedEntry::CallFunc_GetEquippedPassives_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_UnequipFromEquippedEntry, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'WBP_GameMenu_Page_Passive_C_UnequipFromEquippedEntry::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_UnequipFromEquippedEntry, CallFunc_GetEntryIndex_ReturnValue) == 0x00003C, "Member 'WBP_GameMenu_Page_Passive_C_UnequipFromEquippedEntry::CallFunc_GetEntryIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_UnequipFromEquippedEntry, CallFunc_Subtract_IntInt_ReturnValue) == 0x000040, "Member 'WBP_GameMenu_Page_Passive_C_UnequipFromEquippedEntry::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_UnequipFromEquippedEntry, CallFunc_Clamp_ReturnValue) == 0x000044, "Member 'WBP_GameMenu_Page_Passive_C_UnequipFromEquippedEntry::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_UnequipFromEquippedEntry, CallFunc_Greater_IntInt_ReturnValue) == 0x000048, "Member 'WBP_GameMenu_Page_Passive_C_UnequipFromEquippedEntry::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_GameMenu_Page_Passive.WBP_GameMenu_Page_Passive_C.UnequipPassiveEntry
// 0x0010 (0x0010 - 0x0000)
struct WBP_GameMenu_Page_Passive_C_UnequipPassiveEntry final
{
public:
	class UWBP_PassiveEntry_C*                    PassiveEntry;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_UnequipPassive_OutPassiveIndex;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UnequipPassive_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_Page_Passive_C_UnequipPassiveEntry) == 0x000008, "Wrong alignment on WBP_GameMenu_Page_Passive_C_UnequipPassiveEntry");
static_assert(sizeof(WBP_GameMenu_Page_Passive_C_UnequipPassiveEntry) == 0x000010, "Wrong size on WBP_GameMenu_Page_Passive_C_UnequipPassiveEntry");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_UnequipPassiveEntry, PassiveEntry) == 0x000000, "Member 'WBP_GameMenu_Page_Passive_C_UnequipPassiveEntry::PassiveEntry' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_UnequipPassiveEntry, CallFunc_UnequipPassive_OutPassiveIndex) == 0x000008, "Member 'WBP_GameMenu_Page_Passive_C_UnequipPassiveEntry::CallFunc_UnequipPassive_OutPassiveIndex' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_UnequipPassiveEntry, CallFunc_UnequipPassive_ReturnValue) == 0x00000C, "Member 'WBP_GameMenu_Page_Passive_C_UnequipPassiveEntry::CallFunc_UnequipPassive_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_Page_Passive_C_UnequipPassiveEntry, CallFunc_IsValid_ReturnValue) == 0x00000D, "Member 'WBP_GameMenu_Page_Passive_C_UnequipPassiveEntry::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

