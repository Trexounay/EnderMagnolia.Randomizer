#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_WorldSpace_Text_Damage_Critical

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_WorldSpace_Text_Damage_Critical.WBP_WorldSpace_Text_Damage_Critical_C.ExecuteUbergraph_WBP_WorldSpace_Text_Damage_Critical
// 0x0048 (0x0048 - 0x0000)
struct WBP_WorldSpace_Text_Damage_Critical_C_ExecuteUbergraph_WBP_WorldSpace_Text_Damage_Critical final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_Text;                                 // 0x0008(0x0010)(ConstParm)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UWidgetAnimation*                 K2Node_Event_Animation;                            // 0x0020(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WorldSpace_Text_Damage_Critical_C_ExecuteUbergraph_WBP_WorldSpace_Text_Damage_Critical) == 0x000008, "Wrong alignment on WBP_WorldSpace_Text_Damage_Critical_C_ExecuteUbergraph_WBP_WorldSpace_Text_Damage_Critical");
static_assert(sizeof(WBP_WorldSpace_Text_Damage_Critical_C_ExecuteUbergraph_WBP_WorldSpace_Text_Damage_Critical) == 0x000048, "Wrong size on WBP_WorldSpace_Text_Damage_Critical_C_ExecuteUbergraph_WBP_WorldSpace_Text_Damage_Critical");
static_assert(offsetof(WBP_WorldSpace_Text_Damage_Critical_C_ExecuteUbergraph_WBP_WorldSpace_Text_Damage_Critical, EntryPoint) == 0x000000, "Member 'WBP_WorldSpace_Text_Damage_Critical_C_ExecuteUbergraph_WBP_WorldSpace_Text_Damage_Critical::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_WorldSpace_Text_Damage_Critical_C_ExecuteUbergraph_WBP_WorldSpace_Text_Damage_Critical, K2Node_Event_Text) == 0x000008, "Member 'WBP_WorldSpace_Text_Damage_Critical_C_ExecuteUbergraph_WBP_WorldSpace_Text_Damage_Critical::K2Node_Event_Text' has a wrong offset!");
static_assert(offsetof(WBP_WorldSpace_Text_Damage_Critical_C_ExecuteUbergraph_WBP_WorldSpace_Text_Damage_Critical, CallFunc_PlayAnimationForward_ReturnValue) == 0x000018, "Member 'WBP_WorldSpace_Text_Damage_Critical_C_ExecuteUbergraph_WBP_WorldSpace_Text_Damage_Critical::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WorldSpace_Text_Damage_Critical_C_ExecuteUbergraph_WBP_WorldSpace_Text_Damage_Critical, K2Node_Event_Animation) == 0x000020, "Member 'WBP_WorldSpace_Text_Damage_Critical_C_ExecuteUbergraph_WBP_WorldSpace_Text_Damage_Critical::K2Node_Event_Animation' has a wrong offset!");
static_assert(offsetof(WBP_WorldSpace_Text_Damage_Critical_C_ExecuteUbergraph_WBP_WorldSpace_Text_Damage_Critical, CallFunc_RandomFloatInRange_ReturnValue) == 0x000028, "Member 'WBP_WorldSpace_Text_Damage_Critical_C_ExecuteUbergraph_WBP_WorldSpace_Text_Damage_Critical::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WorldSpace_Text_Damage_Critical_C_ExecuteUbergraph_WBP_WorldSpace_Text_Damage_Critical, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'WBP_WorldSpace_Text_Damage_Critical_C_ExecuteUbergraph_WBP_WorldSpace_Text_Damage_Critical::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WorldSpace_Text_Damage_Critical_C_ExecuteUbergraph_WBP_WorldSpace_Text_Damage_Critical, CallFunc_MakeVector2D_ReturnValue) == 0x000038, "Member 'WBP_WorldSpace_Text_Damage_Critical_C_ExecuteUbergraph_WBP_WorldSpace_Text_Damage_Critical::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function WBP_WorldSpace_Text_Damage_Critical.WBP_WorldSpace_Text_Damage_Critical_C.OnAnimationFinished
// 0x0008 (0x0008 - 0x0000)
struct WBP_WorldSpace_Text_Damage_Critical_C_OnAnimationFinished final
{
public:
	const class UWidgetAnimation*                 Animation_0;                                       // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WorldSpace_Text_Damage_Critical_C_OnAnimationFinished) == 0x000008, "Wrong alignment on WBP_WorldSpace_Text_Damage_Critical_C_OnAnimationFinished");
static_assert(sizeof(WBP_WorldSpace_Text_Damage_Critical_C_OnAnimationFinished) == 0x000008, "Wrong size on WBP_WorldSpace_Text_Damage_Critical_C_OnAnimationFinished");
static_assert(offsetof(WBP_WorldSpace_Text_Damage_Critical_C_OnAnimationFinished, Animation_0) == 0x000000, "Member 'WBP_WorldSpace_Text_Damage_Critical_C_OnAnimationFinished::Animation_0' has a wrong offset!");

// Function WBP_WorldSpace_Text_Damage_Critical.WBP_WorldSpace_Text_Damage_Critical_C.SetText
// 0x0010 (0x0010 - 0x0000)
struct WBP_WorldSpace_Text_Damage_Critical_C_SetText final
{
public:
	class FText                                   Text_0;                                            // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_WorldSpace_Text_Damage_Critical_C_SetText) == 0x000008, "Wrong alignment on WBP_WorldSpace_Text_Damage_Critical_C_SetText");
static_assert(sizeof(WBP_WorldSpace_Text_Damage_Critical_C_SetText) == 0x000010, "Wrong size on WBP_WorldSpace_Text_Damage_Critical_C_SetText");
static_assert(offsetof(WBP_WorldSpace_Text_Damage_Critical_C_SetText, Text_0) == 0x000000, "Member 'WBP_WorldSpace_Text_Damage_Critical_C_SetText::Text_0' has a wrong offset!");

}

